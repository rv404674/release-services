{
"abspath": "layout/base/ServoRestyleManager.cpp",
"node": "474d58c9137360c0fa1c85cdd11e3313b33b7cad",
"author": "shindli \u003cshindli@mozilla.com\u003e",
"date": [1517219494.0, -7200],
"desc": "Merge inbound to mozilla-central.  a=merge",
"parents": ["53d64a077a8ef3a34697c7aa3b0776d3e8d11539"],
"children": ["c15438b50b816625d8652c760bcba74a84e50418"],
"permissions": "",
"annotate": [{
"node": "f3ab6216d197647011cc48b90fff685cb875c983",
"author": "Cameron McCormack \u003ccam@mcc.id.au\u003e",
"desc": "Bug 1248864 - Part 2: Add skeleton ServoRestyleManager and a RestyleManagerHandle smart pointer. r=dholbert",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1,
"line": "/* -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n",
"lineno": 1,
"revdate": [1456297272.0, -39600]
}, {
"node": "f3ab6216d197647011cc48b90fff685cb875c983",
"author": "Cameron McCormack \u003ccam@mcc.id.au\u003e",
"desc": "Bug 1248864 - Part 2: Add skeleton ServoRestyleManager and a RestyleManagerHandle smart pointer. r=dholbert",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 2,
"line": "/* vim: set ts=8 sts=2 et sw=2 tw=80: */\n",
"lineno": 2,
"revdate": [1456297272.0, -39600]
}, {
"node": "f3ab6216d197647011cc48b90fff685cb875c983",
"author": "Cameron McCormack \u003ccam@mcc.id.au\u003e",
"desc": "Bug 1248864 - Part 2: Add skeleton ServoRestyleManager and a RestyleManagerHandle smart pointer. r=dholbert",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 3,
"line": "/* This Source Code Form is subject to the terms of the Mozilla Public\n",
"lineno": 3,
"revdate": [1456297272.0, -39600]
}, {
"node": "f3ab6216d197647011cc48b90fff685cb875c983",
"author": "Cameron McCormack \u003ccam@mcc.id.au\u003e",
"desc": "Bug 1248864 - Part 2: Add skeleton ServoRestyleManager and a RestyleManagerHandle smart pointer. r=dholbert",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 4,
"line": " * License, v. 2.0. If a copy of the MPL was not distributed with this\n",
"lineno": 4,
"revdate": [1456297272.0, -39600]
}, {
"node": "f3ab6216d197647011cc48b90fff685cb875c983",
"author": "Cameron McCormack \u003ccam@mcc.id.au\u003e",
"desc": "Bug 1248864 - Part 2: Add skeleton ServoRestyleManager and a RestyleManagerHandle smart pointer. r=dholbert",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 5,
"line": " * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n",
"lineno": 5,
"revdate": [1456297272.0, -39600]
}, {
"node": "f3ab6216d197647011cc48b90fff685cb875c983",
"author": "Cameron McCormack \u003ccam@mcc.id.au\u003e",
"desc": "Bug 1248864 - Part 2: Add skeleton ServoRestyleManager and a RestyleManagerHandle smart pointer. r=dholbert",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 6,
"line": "\n",
"lineno": 6,
"revdate": [1456297272.0, -39600]
}, {
"node": "f3ab6216d197647011cc48b90fff685cb875c983",
"author": "Cameron McCormack \u003ccam@mcc.id.au\u003e",
"desc": "Bug 1248864 - Part 2: Add skeleton ServoRestyleManager and a RestyleManagerHandle smart pointer. r=dholbert",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 7,
"line": "#include \"mozilla/ServoRestyleManager.h\"\n",
"lineno": 7,
"revdate": [1456297272.0, -39600]
}, {
"node": "3976b04bf08a4442eb75cace5ad4899ca0eb0ced",
"author": "Cameron McCormack \u003ccam@mcc.id.au\u003e",
"desc": "Bug 1321284 - Part 5: Process document level NAC when restyling. r=bholley\n\nMozReview-Commit-ID: GigSrTHXXte",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 8,
"line": "\n",
"lineno": 8,
"revdate": [1480580390.0, -28800]
}, {
"node": "4128cdabed05cdb331d803e5c102229e4da16bf9",
"author": "J. Ryan Stinnett \u003cjryans@gmail.com\u003e",
"desc": "Bug 1371457 - Add restyle markers for Stylo. r=bholley,gregtatum\n\nAdd restyle markers to `PrepareAndTraverseSubtree` to cover both initial styling\nand part of the work of restyling.  Also add restyle markers around the post\ntraversal work in `DoProcessPendingRestyles`.\n\nA new marker is also added around the change hint processing after the post\ntraversal.\n\nMozReview-Commit-ID: 43PSyCJLikR",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 9,
"line": "#include \"mozilla/AutoRestyleTimelineMarker.h\"\n",
"lineno": 9,
"revdate": [1498676598.0, 25200]
}, {
"node": "4128cdabed05cdb331d803e5c102229e4da16bf9",
"author": "J. Ryan Stinnett \u003cjryans@gmail.com\u003e",
"desc": "Bug 1371457 - Add restyle markers for Stylo. r=bholley,gregtatum\n\nAdd restyle markers to `PrepareAndTraverseSubtree` to cover both initial styling\nand part of the work of restyling.  Also add restyle markers around the post\ntraversal work in `DoProcessPendingRestyles`.\n\nA new marker is also added around the change hint processing after the post\ntraversal.\n\nMozReview-Commit-ID: 43PSyCJLikR",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 10,
"line": "#include \"mozilla/AutoTimelineMarker.h\"\n",
"lineno": 10,
"revdate": [1498676598.0, 25200]
}, {
"node": "3976b04bf08a4442eb75cace5ad4899ca0eb0ced",
"author": "Cameron McCormack \u003ccam@mcc.id.au\u003e",
"desc": "Bug 1321284 - Part 5: Process document level NAC when restyling. r=bholley\n\nMozReview-Commit-ID: GigSrTHXXte",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 9,
"line": "#include \"mozilla/DocumentStyleRootIterator.h\"\n",
"lineno": 11,
"revdate": [1480580390.0, -28800]
}, {
"node": "b88f09bddf8ead80323c5a329b73f35e0e4c728e",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1311598 part 3 - Add include ServoBindings.h to files need it. r=heycam\n\nMozReview-Commit-ID: 3fI0bt4p8Jd",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 8,
"line": "#include \"mozilla/ServoBindings.h\"\n",
"lineno": 12,
"revdate": [1477300606.0, -39600]
}, {
"node": "769a86b5787dfd7d2bbd10584a54979320c260d9",
"author": "Emilio Cobos \u00c1lvarez \u003cecoal95@gmail.com\u003e",
"desc": "Bug 1285474: Add mozilla::RestyleManagerBase to share logic between RestyleManager and ServoRestyleManager. r=bholley\n\nPartially implement some restyling APIs to take rid of some gecko-only code\npaths.\n\nMozReview-Commit-ID: L5i6Kr2Qars\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 8,
"line": "#include \"mozilla/ServoStyleSet.h\"\n",
"lineno": 13,
"revdate": [1467961726.0, 25200]
}, {
"node": "914f8a42fa695f14a4c610297ad55580364c4a45",
"author": "Manish Goregaokar \u003cmanishearth@gmail.com\u003e",
"desc": "Bug 1367904 - Part 10: stylo: Switch Gecko over to ServoStyleContext; r=bholley\n\nMozReview-Commit-ID: EmopKVjEzlz\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 14,
"line": "#include \"mozilla/ServoStyleContext.h\"\n",
"lineno": 14,
"revdate": [1500316920.0, 25200]
}, {
"node": "bbad2cf92d8726f1f739045685a9159bfc75d687",
"author": "Manish Goregaokar \u003cmanishearth@gmail.com\u003e",
"desc": "Bug 1367904 - Part 14: stylo: Remove FFI calls for fetching style structs from ServoComputedValues; r=bholley\n\nMozReview-Commit-ID: 2HrVZl9HZu1\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 15,
"line": "#include \"mozilla/ServoStyleContextInlines.h\"\n",
"lineno": 15,
"revdate": [1500316932.0, 25200]
}, {
"node": "086f36cc278fe6f6cd4fa023dcda4b31950f1d5b",
"author": "Bobby Holley \u003cbobbyholley@gmail.com\u003e",
"desc": "Bug 1343128 - Don't leave stale change hints and other restyle data hanging around in reconstructed subtrees. r=emilio\n\nMozReview-Commit-ID: 4BIvC6lPUmF\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 12,
"line": "#include \"mozilla/Unused.h\"\n",
"lineno": 16,
"revdate": [1488248968.0, 28800]
}, {
"node": "74d8ec6397ee08180e001cc516b34a59e68bcd9c",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1374761 part 1.  Properly restyle the viewport and its child anonymous box when we do a restyle.  r=heycam\n\nThe child anon box may be an nsHTMLScrollFrame, a nsRootBoxFrame, or a\nnsSimplePageSequenceFrame.   nsHTMLScrollFrame already knows how to deal with\nits anonymous box kids, nsRootBoxFrame doesn't have any, and the next changeset\nwill deal with anon box kids of nsSimplePageSequenceFrame.\n\nMozReview-Commit-ID: 2ZV061EhRmc",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 13,
"line": "#include \"mozilla/ViewportFrame.h\"\n",
"lineno": 17,
"revdate": [1498059912.0, 14400]
}, {
"node": "1976d34e92f8c9c7fb9a336db9377e18725f2b4f",
"author": "Emilio Cobos \u00c1lvarez \u003cecoal95@gmail.com\u003e",
"desc": "Bug 1292618: Support basic pseudo-element restyling. r=heycam\n\n:before and :after only, for now.\n\nMozReview-Commit-ID: 9hLFvVhqIrN\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 9,
"line": "#include \"mozilla/dom/ChildIterator.h\"\n",
"lineno": 18,
"revdate": [1470967312.0, 25200]
}, {
"node": "2150351429b5c9515589facd9f2aefb1e4640842",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1355343: Take all the snapshots into account. r=bholley\n\nI've chosen this approach mainly because there's no other good way to guarantee\nthe model is correct than holding the snapshots alive until a style refresh.\n\nWhat I tried before this (storing them in a sort of \"immutable element data\") is\na pain, since we call into style from the frame constructor and other content\nnotifications, which makes keeping track of which snapshots should be cleared an\nwhich shouldn't an insane task.\n\nIdeally we'd have a single entry-point for style, but that's not the case right\nnow, and changing that requires pretty non-trivial changes to the frame\nconstructor.\n\nMozReview-Commit-ID: FF1KWZv2iBM",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 14,
"line": "#include \"mozilla/dom/ElementInlines.h\"\n",
"lineno": 19,
"revdate": [1494167807.0, -7200]
}, {
"node": "09851f5d647eb9f1a1b104f197ed4a107145d8f0",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1364871: Add a function to update frame pseudo-element styles during the post-traversal, and restyle bullet frames. r=heycam\n\nMozReview-Commit-ID: 9m0jqmxjOb6",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 15,
"line": "#include \"nsBlockFrame.h\"\n",
"lineno": 20,
"revdate": [1495231102.0, -7200]
}, {
"node": "09851f5d647eb9f1a1b104f197ed4a107145d8f0",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1364871: Add a function to update frame pseudo-element styles during the post-traversal, and restyle bullet frames. r=heycam\n\nMozReview-Commit-ID: 9m0jqmxjOb6",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 16,
"line": "#include \"nsBulletFrame.h\"\n",
"lineno": 21,
"revdate": [1495231102.0, -7200]
}, {
"node": "a497e53fb0a17b47d04ec86d293f6f5697cb8446",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1409931: nsImageControlFrame can also be using a \u003cmap\u003e element. r=xidorn\n\nThis goes with a crashtest, as soon as I get a usable build.\n\nMozReview-Commit-ID: LqmPWoJZ7AJ",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 22,
"line": "#include \"nsImageFrame.h\"\n",
"lineno": 22,
"revdate": [1508493649.0, -7200]
}, {
"node": "ca5ce34ad1cf84d8744ab12ef35948d0f4baaac2",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1364871: Restyle ::backdrop too. r=heycam\n\nMozReview-Commit-ID: BGWRiaeZiD8",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 17,
"line": "#include \"nsPlaceholderFrame.h\"\n",
"lineno": 23,
"revdate": [1495231163.0, -7200]
}, {
"node": "1976d34e92f8c9c7fb9a336db9377e18725f2b4f",
"author": "Emilio Cobos \u00c1lvarez \u003cecoal95@gmail.com\u003e",
"desc": "Bug 1292618: Support basic pseudo-element restyling. r=heycam\n\n:before and :after only, for now.\n\nMozReview-Commit-ID: 9hLFvVhqIrN\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 10,
"line": "#include \"nsContentUtils.h\"\n",
"lineno": 24,
"revdate": [1470967312.0, 25200]
}, {
"node": "16e6b3202e27eb00ae32d6aab4806a5c99018c85",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1341083: Implement dynamic restyling for display: contents. r=heycam\n\nMozReview-Commit-ID: KimTU2j4V4p\nSigned-off-by: Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 14,
"line": "#include \"nsCSSFrameConstructor.h\"\n",
"lineno": 25,
"revdate": [1487672711.0, -3600]
}, {
"node": "e85cd0f24510b48e0b2b4f5640f4c956d9c0f888",
"author": "Markus Stange \u003cmstange@themasta.com\u003e",
"desc": "Bug 1298205 - Fix ServoRestyleManager.cpp includes. r=heycam\n\nMozReview-Commit-ID: IhXCuG7V7gL",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 11,
"line": "#include \"nsPrintfCString.h\"\n",
"lineno": 26,
"revdate": [1472484007.0, 14400]
}, {
"node": "916e7ba3cd2b48f8a99f8093a20e455acd51d58f",
"author": "Hiroyuki Ikezoe \u003chikezoe@mozilla.com\u003e",
"desc": "Bug 1340340 - Stop mutating nsRefreshDriver during parallel traversal. r=heycam\n\nMozReview-Commit-ID: D5VYPWXm5jO",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 15,
"line": "#include \"nsRefreshDriver.h\"\n",
"lineno": 27,
"revdate": [1487569033.0, -32400]
}, {
"node": "1976d34e92f8c9c7fb9a336db9377e18725f2b4f",
"author": "Emilio Cobos \u00c1lvarez \u003cecoal95@gmail.com\u003e",
"desc": "Bug 1292618: Support basic pseudo-element restyling. r=heycam\n\n:before and :after only, for now.\n\nMozReview-Commit-ID: 9hLFvVhqIrN\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 11,
"line": "#include \"nsStyleChangeList.h\"\n",
"lineno": 28,
"revdate": [1470967312.0, 25200]
}, {
"node": "f3ab6216d197647011cc48b90fff685cb875c983",
"author": "Cameron McCormack \u003ccam@mcc.id.au\u003e",
"desc": "Bug 1248864 - Part 2: Add skeleton ServoRestyleManager and a RestyleManagerHandle smart pointer. r=dholbert",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 8,
"line": "\n",
"lineno": 29,
"revdate": [1456297272.0, -39600]
}, {
"node": "f3ab6216d197647011cc48b90fff685cb875c983",
"author": "Cameron McCormack \u003ccam@mcc.id.au\u003e",
"desc": "Bug 1248864 - Part 2: Add skeleton ServoRestyleManager and a RestyleManagerHandle smart pointer. r=dholbert",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 9,
"line": "using namespace mozilla::dom;\n",
"lineno": 30,
"revdate": [1456297272.0, -39600]
}, {
"node": "f3ab6216d197647011cc48b90fff685cb875c983",
"author": "Cameron McCormack \u003ccam@mcc.id.au\u003e",
"desc": "Bug 1248864 - Part 2: Add skeleton ServoRestyleManager and a RestyleManagerHandle smart pointer. r=dholbert",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 10,
"line": "\n",
"lineno": 31,
"revdate": [1456297272.0, -39600]
}, {
"node": "f3ab6216d197647011cc48b90fff685cb875c983",
"author": "Cameron McCormack \u003ccam@mcc.id.au\u003e",
"desc": "Bug 1248864 - Part 2: Add skeleton ServoRestyleManager and a RestyleManagerHandle smart pointer. r=dholbert",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 11,
"line": "namespace mozilla {\n",
"lineno": 32,
"revdate": [1456297272.0, -39600]
}, {
"node": "f3ab6216d197647011cc48b90fff685cb875c983",
"author": "Cameron McCormack \u003ccam@mcc.id.au\u003e",
"desc": "Bug 1248864 - Part 2: Add skeleton ServoRestyleManager and a RestyleManagerHandle smart pointer. r=dholbert",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 12,
"line": "\n",
"lineno": 33,
"revdate": [1456297272.0, -39600]
}, {
"node": "1b05406b224819cfc636963bc9e0df0f04a92d7f",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1375674: Track the owner that represents the changes handled, and fix a bunch of issues while at it. r=heycam\n\nIn particular, this fixes:\n\n * Restyling of \u003carea\u003e elements that reuse the primary frame mapping for the\n   image map.\n\n * Restyling of children of display: contents elements when the display:\n   contents element generates a hint.\n\n * Restyling of out-of-flows (if my analysis in the bug is right).\n\n * Restyling of the ::backdrop pseudo-element.\n\n * Restyling of the Viewport frame.\n\nI only managed to do a reftest for the second one, but the rest of them are\ncovered by the assertions added.\n\nMozReview-Commit-ID: E7QtiQ1vPqu",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 30,
"line": "#ifdef DEBUG\n",
"lineno": 34,
"revdate": [1498239095.0, -7200]
}, {
"node": "1b05406b224819cfc636963bc9e0df0f04a92d7f",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1375674: Track the owner that represents the changes handled, and fix a bunch of issues while at it. r=heycam\n\nIn particular, this fixes:\n\n * Restyling of \u003carea\u003e elements that reuse the primary frame mapping for the\n   image map.\n\n * Restyling of children of display: contents elements when the display:\n   contents element generates a hint.\n\n * Restyling of out-of-flows (if my analysis in the bug is right).\n\n * Restyling of the ::backdrop pseudo-element.\n\n * Restyling of the Viewport frame.\n\nI only managed to do a reftest for the second one, but the rest of them are\ncovered by the assertions added.\n\nMozReview-Commit-ID: E7QtiQ1vPqu",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 31,
"line": "static bool\n",
"lineno": 35,
"revdate": [1498239095.0, -7200]
}, {
"node": "1b05406b224819cfc636963bc9e0df0f04a92d7f",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1375674: Track the owner that represents the changes handled, and fix a bunch of issues while at it. r=heycam\n\nIn particular, this fixes:\n\n * Restyling of \u003carea\u003e elements that reuse the primary frame mapping for the\n   image map.\n\n * Restyling of children of display: contents elements when the display:\n   contents element generates a hint.\n\n * Restyling of out-of-flows (if my analysis in the bug is right).\n\n * Restyling of the ::backdrop pseudo-element.\n\n * Restyling of the Viewport frame.\n\nI only managed to do a reftest for the second one, but the rest of them are\ncovered by the assertions added.\n\nMozReview-Commit-ID: E7QtiQ1vPqu",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 32,
"line": "IsAnonBox(const nsIFrame& aFrame)\n",
"lineno": 36,
"revdate": [1498239095.0, -7200]
}, {
"node": "1b05406b224819cfc636963bc9e0df0f04a92d7f",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1375674: Track the owner that represents the changes handled, and fix a bunch of issues while at it. r=heycam\n\nIn particular, this fixes:\n\n * Restyling of \u003carea\u003e elements that reuse the primary frame mapping for the\n   image map.\n\n * Restyling of children of display: contents elements when the display:\n   contents element generates a hint.\n\n * Restyling of out-of-flows (if my analysis in the bug is right).\n\n * Restyling of the ::backdrop pseudo-element.\n\n * Restyling of the Viewport frame.\n\nI only managed to do a reftest for the second one, but the rest of them are\ncovered by the assertions added.\n\nMozReview-Commit-ID: E7QtiQ1vPqu",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 33,
"line": "{\n",
"lineno": 37,
"revdate": [1498239095.0, -7200]
}, {
"node": "1b05406b224819cfc636963bc9e0df0f04a92d7f",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1375674: Track the owner that represents the changes handled, and fix a bunch of issues while at it. r=heycam\n\nIn particular, this fixes:\n\n * Restyling of \u003carea\u003e elements that reuse the primary frame mapping for the\n   image map.\n\n * Restyling of children of display: contents elements when the display:\n   contents element generates a hint.\n\n * Restyling of out-of-flows (if my analysis in the bug is right).\n\n * Restyling of the ::backdrop pseudo-element.\n\n * Restyling of the Viewport frame.\n\nI only managed to do a reftest for the second one, but the rest of them are\ncovered by the assertions added.\n\nMozReview-Commit-ID: E7QtiQ1vPqu",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 34,
"line": "  return aFrame.StyleContext()-\u003eIsAnonBox();\n",
"lineno": 38,
"revdate": [1498239095.0, -7200]
}, {
"node": "1b05406b224819cfc636963bc9e0df0f04a92d7f",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1375674: Track the owner that represents the changes handled, and fix a bunch of issues while at it. r=heycam\n\nIn particular, this fixes:\n\n * Restyling of \u003carea\u003e elements that reuse the primary frame mapping for the\n   image map.\n\n * Restyling of children of display: contents elements when the display:\n   contents element generates a hint.\n\n * Restyling of out-of-flows (if my analysis in the bug is right).\n\n * Restyling of the ::backdrop pseudo-element.\n\n * Restyling of the Viewport frame.\n\nI only managed to do a reftest for the second one, but the rest of them are\ncovered by the assertions added.\n\nMozReview-Commit-ID: E7QtiQ1vPqu",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 35,
"line": "}\n",
"lineno": 39,
"revdate": [1498239095.0, -7200]
}, {
"node": "1b05406b224819cfc636963bc9e0df0f04a92d7f",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1375674: Track the owner that represents the changes handled, and fix a bunch of issues while at it. r=heycam\n\nIn particular, this fixes:\n\n * Restyling of \u003carea\u003e elements that reuse the primary frame mapping for the\n   image map.\n\n * Restyling of children of display: contents elements when the display:\n   contents element generates a hint.\n\n * Restyling of out-of-flows (if my analysis in the bug is right).\n\n * Restyling of the ::backdrop pseudo-element.\n\n * Restyling of the Viewport frame.\n\nI only managed to do a reftest for the second one, but the rest of them are\ncovered by the assertions added.\n\nMozReview-Commit-ID: E7QtiQ1vPqu",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 36,
"line": "\n",
"lineno": 40,
"revdate": [1498239095.0, -7200]
}, {
"node": "1b05406b224819cfc636963bc9e0df0f04a92d7f",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1375674: Track the owner that represents the changes handled, and fix a bunch of issues while at it. r=heycam\n\nIn particular, this fixes:\n\n * Restyling of \u003carea\u003e elements that reuse the primary frame mapping for the\n   image map.\n\n * Restyling of children of display: contents elements when the display:\n   contents element generates a hint.\n\n * Restyling of out-of-flows (if my analysis in the bug is right).\n\n * Restyling of the ::backdrop pseudo-element.\n\n * Restyling of the Viewport frame.\n\nI only managed to do a reftest for the second one, but the rest of them are\ncovered by the assertions added.\n\nMozReview-Commit-ID: E7QtiQ1vPqu",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 37,
"line": "static const nsIFrame*\n",
"lineno": 41,
"revdate": [1498239095.0, -7200]
}, {
"node": "1b05406b224819cfc636963bc9e0df0f04a92d7f",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1375674: Track the owner that represents the changes handled, and fix a bunch of issues while at it. r=heycam\n\nIn particular, this fixes:\n\n * Restyling of \u003carea\u003e elements that reuse the primary frame mapping for the\n   image map.\n\n * Restyling of children of display: contents elements when the display:\n   contents element generates a hint.\n\n * Restyling of out-of-flows (if my analysis in the bug is right).\n\n * Restyling of the ::backdrop pseudo-element.\n\n * Restyling of the Viewport frame.\n\nI only managed to do a reftest for the second one, but the rest of them are\ncovered by the assertions added.\n\nMozReview-Commit-ID: E7QtiQ1vPqu",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 38,
"line": "FirstContinuationOrPartOfIBSplit(const nsIFrame* aFrame)\n",
"lineno": 42,
"revdate": [1498239095.0, -7200]
}, {
"node": "1b05406b224819cfc636963bc9e0df0f04a92d7f",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1375674: Track the owner that represents the changes handled, and fix a bunch of issues while at it. r=heycam\n\nIn particular, this fixes:\n\n * Restyling of \u003carea\u003e elements that reuse the primary frame mapping for the\n   image map.\n\n * Restyling of children of display: contents elements when the display:\n   contents element generates a hint.\n\n * Restyling of out-of-flows (if my analysis in the bug is right).\n\n * Restyling of the ::backdrop pseudo-element.\n\n * Restyling of the Viewport frame.\n\nI only managed to do a reftest for the second one, but the rest of them are\ncovered by the assertions added.\n\nMozReview-Commit-ID: E7QtiQ1vPqu",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 39,
"line": "{\n",
"lineno": 43,
"revdate": [1498239095.0, -7200]
}, {
"node": "1b05406b224819cfc636963bc9e0df0f04a92d7f",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1375674: Track the owner that represents the changes handled, and fix a bunch of issues while at it. r=heycam\n\nIn particular, this fixes:\n\n * Restyling of \u003carea\u003e elements that reuse the primary frame mapping for the\n   image map.\n\n * Restyling of children of display: contents elements when the display:\n   contents element generates a hint.\n\n * Restyling of out-of-flows (if my analysis in the bug is right).\n\n * Restyling of the ::backdrop pseudo-element.\n\n * Restyling of the Viewport frame.\n\nI only managed to do a reftest for the second one, but the rest of them are\ncovered by the assertions added.\n\nMozReview-Commit-ID: E7QtiQ1vPqu",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 40,
"line": "  if (!aFrame) {\n",
"lineno": 44,
"revdate": [1498239095.0, -7200]
}, {
"node": "1b05406b224819cfc636963bc9e0df0f04a92d7f",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1375674: Track the owner that represents the changes handled, and fix a bunch of issues while at it. r=heycam\n\nIn particular, this fixes:\n\n * Restyling of \u003carea\u003e elements that reuse the primary frame mapping for the\n   image map.\n\n * Restyling of children of display: contents elements when the display:\n   contents element generates a hint.\n\n * Restyling of out-of-flows (if my analysis in the bug is right).\n\n * Restyling of the ::backdrop pseudo-element.\n\n * Restyling of the Viewport frame.\n\nI only managed to do a reftest for the second one, but the rest of them are\ncovered by the assertions added.\n\nMozReview-Commit-ID: E7QtiQ1vPqu",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 41,
"line": "    return nullptr;\n",
"lineno": 45,
"revdate": [1498239095.0, -7200]
}, {
"node": "1b05406b224819cfc636963bc9e0df0f04a92d7f",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1375674: Track the owner that represents the changes handled, and fix a bunch of issues while at it. r=heycam\n\nIn particular, this fixes:\n\n * Restyling of \u003carea\u003e elements that reuse the primary frame mapping for the\n   image map.\n\n * Restyling of children of display: contents elements when the display:\n   contents element generates a hint.\n\n * Restyling of out-of-flows (if my analysis in the bug is right).\n\n * Restyling of the ::backdrop pseudo-element.\n\n * Restyling of the Viewport frame.\n\nI only managed to do a reftest for the second one, but the rest of them are\ncovered by the assertions added.\n\nMozReview-Commit-ID: E7QtiQ1vPqu",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 42,
"line": "  }\n",
"lineno": 46,
"revdate": [1498239095.0, -7200]
}, {
"node": "1b05406b224819cfc636963bc9e0df0f04a92d7f",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1375674: Track the owner that represents the changes handled, and fix a bunch of issues while at it. r=heycam\n\nIn particular, this fixes:\n\n * Restyling of \u003carea\u003e elements that reuse the primary frame mapping for the\n   image map.\n\n * Restyling of children of display: contents elements when the display:\n   contents element generates a hint.\n\n * Restyling of out-of-flows (if my analysis in the bug is right).\n\n * Restyling of the ::backdrop pseudo-element.\n\n * Restyling of the Viewport frame.\n\nI only managed to do a reftest for the second one, but the rest of them are\ncovered by the assertions added.\n\nMozReview-Commit-ID: E7QtiQ1vPqu",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 43,
"line": "\n",
"lineno": 47,
"revdate": [1498239095.0, -7200]
}, {
"node": "1b05406b224819cfc636963bc9e0df0f04a92d7f",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1375674: Track the owner that represents the changes handled, and fix a bunch of issues while at it. r=heycam\n\nIn particular, this fixes:\n\n * Restyling of \u003carea\u003e elements that reuse the primary frame mapping for the\n   image map.\n\n * Restyling of children of display: contents elements when the display:\n   contents element generates a hint.\n\n * Restyling of out-of-flows (if my analysis in the bug is right).\n\n * Restyling of the ::backdrop pseudo-element.\n\n * Restyling of the Viewport frame.\n\nI only managed to do a reftest for the second one, but the rest of them are\ncovered by the assertions added.\n\nMozReview-Commit-ID: E7QtiQ1vPqu",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 44,
"line": "  return nsLayoutUtils::FirstContinuationOrIBSplitSibling(aFrame);\n",
"lineno": 48,
"revdate": [1498239095.0, -7200]
}, {
"node": "1b05406b224819cfc636963bc9e0df0f04a92d7f",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1375674: Track the owner that represents the changes handled, and fix a bunch of issues while at it. r=heycam\n\nIn particular, this fixes:\n\n * Restyling of \u003carea\u003e elements that reuse the primary frame mapping for the\n   image map.\n\n * Restyling of children of display: contents elements when the display:\n   contents element generates a hint.\n\n * Restyling of out-of-flows (if my analysis in the bug is right).\n\n * Restyling of the ::backdrop pseudo-element.\n\n * Restyling of the Viewport frame.\n\nI only managed to do a reftest for the second one, but the rest of them are\ncovered by the assertions added.\n\nMozReview-Commit-ID: E7QtiQ1vPqu",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 45,
"line": "}\n",
"lineno": 49,
"revdate": [1498239095.0, -7200]
}, {
"node": "1b05406b224819cfc636963bc9e0df0f04a92d7f",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1375674: Track the owner that represents the changes handled, and fix a bunch of issues while at it. r=heycam\n\nIn particular, this fixes:\n\n * Restyling of \u003carea\u003e elements that reuse the primary frame mapping for the\n   image map.\n\n * Restyling of children of display: contents elements when the display:\n   contents element generates a hint.\n\n * Restyling of out-of-flows (if my analysis in the bug is right).\n\n * Restyling of the ::backdrop pseudo-element.\n\n * Restyling of the Viewport frame.\n\nI only managed to do a reftest for the second one, but the rest of them are\ncovered by the assertions added.\n\nMozReview-Commit-ID: E7QtiQ1vPqu",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 46,
"line": "\n",
"lineno": 50,
"revdate": [1498239095.0, -7200]
}, {
"node": "1b05406b224819cfc636963bc9e0df0f04a92d7f",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1375674: Track the owner that represents the changes handled, and fix a bunch of issues while at it. r=heycam\n\nIn particular, this fixes:\n\n * Restyling of \u003carea\u003e elements that reuse the primary frame mapping for the\n   image map.\n\n * Restyling of children of display: contents elements when the display:\n   contents element generates a hint.\n\n * Restyling of out-of-flows (if my analysis in the bug is right).\n\n * Restyling of the ::backdrop pseudo-element.\n\n * Restyling of the Viewport frame.\n\nI only managed to do a reftest for the second one, but the rest of them are\ncovered by the assertions added.\n\nMozReview-Commit-ID: E7QtiQ1vPqu",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 47,
"line": "static const nsIFrame*\n",
"lineno": 51,
"revdate": [1498239095.0, -7200]
}, {
"node": "1b05406b224819cfc636963bc9e0df0f04a92d7f",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1375674: Track the owner that represents the changes handled, and fix a bunch of issues while at it. r=heycam\n\nIn particular, this fixes:\n\n * Restyling of \u003carea\u003e elements that reuse the primary frame mapping for the\n   image map.\n\n * Restyling of children of display: contents elements when the display:\n   contents element generates a hint.\n\n * Restyling of out-of-flows (if my analysis in the bug is right).\n\n * Restyling of the ::backdrop pseudo-element.\n\n * Restyling of the Viewport frame.\n\nI only managed to do a reftest for the second one, but the rest of them are\ncovered by the assertions added.\n\nMozReview-Commit-ID: E7QtiQ1vPqu",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 48,
"line": "ExpectedOwnerForChild(const nsIFrame& aFrame)\n",
"lineno": 52,
"revdate": [1498239095.0, -7200]
}, {
"node": "1b05406b224819cfc636963bc9e0df0f04a92d7f",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1375674: Track the owner that represents the changes handled, and fix a bunch of issues while at it. r=heycam\n\nIn particular, this fixes:\n\n * Restyling of \u003carea\u003e elements that reuse the primary frame mapping for the\n   image map.\n\n * Restyling of children of display: contents elements when the display:\n   contents element generates a hint.\n\n * Restyling of out-of-flows (if my analysis in the bug is right).\n\n * Restyling of the ::backdrop pseudo-element.\n\n * Restyling of the Viewport frame.\n\nI only managed to do a reftest for the second one, but the rest of them are\ncovered by the assertions added.\n\nMozReview-Commit-ID: E7QtiQ1vPqu",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 49,
"line": "{\n",
"lineno": 53,
"revdate": [1498239095.0, -7200]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 53,
"line": "  const nsIFrame* parent = aFrame.GetParent();\n",
"lineno": 54,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 54,
"line": "  if (aFrame.IsTableFrame()) {\n",
"lineno": 55,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 55,
"line": "    MOZ_ASSERT(parent-\u003eIsTableWrapperFrame());\n",
"lineno": 56,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 56,
"line": "    parent = parent-\u003eGetParent();\n",
"lineno": 57,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 57,
"line": "  }\n",
"lineno": 58,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 58,
"line": "\n",
"lineno": 59,
"revdate": [1502424626.0, 14400]
}, {
"node": "fa924e4258af3579362be570d211349ec5a661a6",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1381323: Account for text frames in ExpectedOwnerForFrame. r=heycam\n\nMozReview-Commit-ID: 62MXX5kf3jj",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 51,
"line": "  if (IsAnonBox(aFrame) && !aFrame.IsTextFrame()) {\n",
"lineno": 60,
"revdate": [1500212542.0, -7200]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 60,
"line": "    if (parent-\u003eIsLineFrame()) {\n",
"lineno": 61,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 61,
"line": "      parent = parent-\u003eGetParent();\n",
"lineno": 62,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 62,
"line": "    }\n",
"lineno": 63,
"revdate": [1502424626.0, 14400]
}, {
"node": "ca0fcfb8cec2e0237c91c4b31a5a95db32f85bac",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1390389.  Fix anon box restyling assertions to correctly handle ib splits. r=xidorn\n\nMozReview-Commit-ID: AtBFlvLyg6b",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 63,
"line": "    return parent-\u003eIsViewportFrame() ?\n",
"lineno": 64,
"revdate": [1504185133.0, 14400]
}, {
"node": "ca0fcfb8cec2e0237c91c4b31a5a95db32f85bac",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1390389.  Fix anon box restyling assertions to correctly handle ib splits. r=xidorn\n\nMozReview-Commit-ID: AtBFlvLyg6b",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 64,
"line": "      nullptr : FirstContinuationOrPartOfIBSplit(parent);\n",
"lineno": 65,
"revdate": [1504185133.0, 14400]
}, {
"node": "1b05406b224819cfc636963bc9e0df0f04a92d7f",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1375674: Track the owner that represents the changes handled, and fix a bunch of issues while at it. r=heycam\n\nIn particular, this fixes:\n\n * Restyling of \u003carea\u003e elements that reuse the primary frame mapping for the\n   image map.\n\n * Restyling of children of display: contents elements when the display:\n   contents element generates a hint.\n\n * Restyling of out-of-flows (if my analysis in the bug is right).\n\n * Restyling of the ::backdrop pseudo-element.\n\n * Restyling of the Viewport frame.\n\nI only managed to do a reftest for the second one, but the rest of them are\ncovered by the assertions added.\n\nMozReview-Commit-ID: E7QtiQ1vPqu",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 52,
"line": "  }\n",
"lineno": 66,
"revdate": [1498239095.0, -7200]
}, {
"node": "1b05406b224819cfc636963bc9e0df0f04a92d7f",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1375674: Track the owner that represents the changes handled, and fix a bunch of issues while at it. r=heycam\n\nIn particular, this fixes:\n\n * Restyling of \u003carea\u003e elements that reuse the primary frame mapping for the\n   image map.\n\n * Restyling of children of display: contents elements when the display:\n   contents element generates a hint.\n\n * Restyling of out-of-flows (if my analysis in the bug is right).\n\n * Restyling of the ::backdrop pseudo-element.\n\n * Restyling of the Viewport frame.\n\nI only managed to do a reftest for the second one, but the rest of them are\ncovered by the assertions added.\n\nMozReview-Commit-ID: E7QtiQ1vPqu",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 53,
"line": "\n",
"lineno": 67,
"revdate": [1498239095.0, -7200]
}, {
"node": "1b05406b224819cfc636963bc9e0df0f04a92d7f",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1375674: Track the owner that represents the changes handled, and fix a bunch of issues while at it. r=heycam\n\nIn particular, this fixes:\n\n * Restyling of \u003carea\u003e elements that reuse the primary frame mapping for the\n   image map.\n\n * Restyling of children of display: contents elements when the display:\n   contents element generates a hint.\n\n * Restyling of out-of-flows (if my analysis in the bug is right).\n\n * Restyling of the ::backdrop pseudo-element.\n\n * Restyling of the Viewport frame.\n\nI only managed to do a reftest for the second one, but the rest of them are\ncovered by the assertions added.\n\nMozReview-Commit-ID: E7QtiQ1vPqu",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 54,
"line": "  if (aFrame.IsBulletFrame()) {\n",
"lineno": 68,
"revdate": [1498239095.0, -7200]
}, {
"node": "9dbbafbc65a177d92714f2783b46c50cb4c9355d",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1413288: The owner of a bullet frame is the first continuation of the parent. r=xidorn\n\nMozReview-Commit-ID: FUsdsETkV2Q",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 69,
"line": "    return FirstContinuationOrPartOfIBSplit(parent);\n",
"lineno": 69,
"revdate": [1509535255.0, -3600]
}, {
"node": "1b05406b224819cfc636963bc9e0df0f04a92d7f",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1375674: Track the owner that represents the changes handled, and fix a bunch of issues while at it. r=heycam\n\nIn particular, this fixes:\n\n * Restyling of \u003carea\u003e elements that reuse the primary frame mapping for the\n   image map.\n\n * Restyling of children of display: contents elements when the display:\n   contents element generates a hint.\n\n * Restyling of out-of-flows (if my analysis in the bug is right).\n\n * Restyling of the ::backdrop pseudo-element.\n\n * Restyling of the Viewport frame.\n\nI only managed to do a reftest for the second one, but the rest of them are\ncovered by the assertions added.\n\nMozReview-Commit-ID: E7QtiQ1vPqu",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 56,
"line": "  }\n",
"lineno": 70,
"revdate": [1498239095.0, -7200]
}, {
"node": "1b05406b224819cfc636963bc9e0df0f04a92d7f",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1375674: Track the owner that represents the changes handled, and fix a bunch of issues while at it. r=heycam\n\nIn particular, this fixes:\n\n * Restyling of \u003carea\u003e elements that reuse the primary frame mapping for the\n   image map.\n\n * Restyling of children of display: contents elements when the display:\n   contents element generates a hint.\n\n * Restyling of out-of-flows (if my analysis in the bug is right).\n\n * Restyling of the ::backdrop pseudo-element.\n\n * Restyling of the Viewport frame.\n\nI only managed to do a reftest for the second one, but the rest of them are\ncovered by the assertions added.\n\nMozReview-Commit-ID: E7QtiQ1vPqu",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 57,
"line": "\n",
"lineno": 71,
"revdate": [1498239095.0, -7200]
}, {
"node": "660d1264adc667cbbdb7d0eab0e1175640934546",
"author": "Sebastian Hengst \u003carchaeopteryx@coole-files.de\u003e",
"desc": "Backed out changeset 710b592482ee (bug 1404167) for asserting mOwner == ExpectedOwnerForChild(aFrame) at ServoRestyleManager.cpp:125. r=backout",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 71,
"line": "  if (aFrame.IsLineFrame()) {\n",
"lineno": 72,
"revdate": [1506677952.0, -7200]
}, {
"node": "ab3c85d4d199c903f6359e276def141d67a000d7",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 6.  Handle dynamic restyles of ::first-line in stylo.  r=emilio\n\nMozReview-Commit-ID: 3jQhIqPuL1g",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 62,
"line": "    // A ::first-line always ends up here via its block, which is therefore the\n",
"lineno": 73,
"revdate": [1501291247.0, 14400]
}, {
"node": "ab3c85d4d199c903f6359e276def141d67a000d7",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 6.  Handle dynamic restyles of ::first-line in stylo.  r=emilio\n\nMozReview-Commit-ID: 3jQhIqPuL1g",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 63,
"line": "    // right expected owner.  That block can be an\n",
"lineno": 74,
"revdate": [1501291247.0, 14400]
}, {
"node": "ab3c85d4d199c903f6359e276def141d67a000d7",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 6.  Handle dynamic restyles of ::first-line in stylo.  r=emilio\n\nMozReview-Commit-ID: 3jQhIqPuL1g",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 64,
"line": "    // anonymous box.  For example, we could have a ::first-line on a columnated\n",
"lineno": 75,
"revdate": [1501291247.0, 14400]
}, {
"node": "ab3c85d4d199c903f6359e276def141d67a000d7",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 6.  Handle dynamic restyles of ::first-line in stylo.  r=emilio\n\nMozReview-Commit-ID: 3jQhIqPuL1g",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 65,
"line": "    // block; the blockframe is the column-content anonymous box in that case.\n",
"lineno": 76,
"revdate": [1501291247.0, 14400]
}, {
"node": "ab3c85d4d199c903f6359e276def141d67a000d7",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 6.  Handle dynamic restyles of ::first-line in stylo.  r=emilio\n\nMozReview-Commit-ID: 3jQhIqPuL1g",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 66,
"line": "    // So we don't want to end up in the code below, which steps out of anon\n",
"lineno": 77,
"revdate": [1501291247.0, 14400]
}, {
"node": "ab3c85d4d199c903f6359e276def141d67a000d7",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 6.  Handle dynamic restyles of ::first-line in stylo.  r=emilio\n\nMozReview-Commit-ID: 3jQhIqPuL1g",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 67,
"line": "    // boxes.  Just return the parent of the line frame, which is the block.\n",
"lineno": 78,
"revdate": [1501291247.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 77,
"line": "    return parent;\n",
"lineno": 79,
"revdate": [1502424626.0, 14400]
}, {
"node": "ab3c85d4d199c903f6359e276def141d67a000d7",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 6.  Handle dynamic restyles of ::first-line in stylo.  r=emilio\n\nMozReview-Commit-ID: 3jQhIqPuL1g",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 69,
"line": "  }\n",
"lineno": 80,
"revdate": [1501291247.0, 14400]
}, {
"node": "ab3c85d4d199c903f6359e276def141d67a000d7",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 6.  Handle dynamic restyles of ::first-line in stylo.  r=emilio\n\nMozReview-Commit-ID: 3jQhIqPuL1g",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 70,
"line": "\n",
"lineno": 81,
"revdate": [1501291247.0, 14400]
}, {
"node": "ac3ccd00426152daa9f7afbba00cc6abd59a1039",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1404167: Properly update the styles of first-letter childs of anon boxes. r=bz\n\nMozReview-Commit-ID: Cyxs4FxGj6B\nSigned-off-by: Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 81,
"line": "  if (aFrame.IsLetterFrame()) {\n",
"lineno": 82,
"revdate": [1506649746.0, -7200]
}, {
"node": "ac3ccd00426152daa9f7afbba00cc6abd59a1039",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1404167: Properly update the styles of first-letter childs of anon boxes. r=bz\n\nMozReview-Commit-ID: Cyxs4FxGj6B\nSigned-off-by: Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 82,
"line": "    // Ditto for ::first-letter. A first-letter always arrives here via its\n",
"lineno": 83,
"revdate": [1506649746.0, -7200]
}, {
"node": "ac3ccd00426152daa9f7afbba00cc6abd59a1039",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1404167: Properly update the styles of first-letter childs of anon boxes. r=bz\n\nMozReview-Commit-ID: Cyxs4FxGj6B\nSigned-off-by: Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 83,
"line": "    // direct parent, except when it's parented to a ::first-line.\n",
"lineno": 84,
"revdate": [1506649746.0, -7200]
}, {
"node": "3fac14728144a6c51da4320fe171bf3d5cb7b9e7",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1406562 - Return first continuation for parent of first-letter in ExpectedOwnerForChild. r=emilio\n\nMozReview-Commit-ID: KkBDMStwQ6r",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 84,
"line": "    if (parent-\u003eIsLineFrame()) {\n",
"lineno": 85,
"revdate": [1507507637.0, -39600]
}, {
"node": "3fac14728144a6c51da4320fe171bf3d5cb7b9e7",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1406562 - Return first continuation for parent of first-letter in ExpectedOwnerForChild. r=emilio\n\nMozReview-Commit-ID: KkBDMStwQ6r",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 85,
"line": "      parent = parent-\u003eGetParent();\n",
"lineno": 86,
"revdate": [1507507637.0, -39600]
}, {
"node": "3fac14728144a6c51da4320fe171bf3d5cb7b9e7",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1406562 - Return first continuation for parent of first-letter in ExpectedOwnerForChild. r=emilio\n\nMozReview-Commit-ID: KkBDMStwQ6r",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 86,
"line": "    }\n",
"lineno": 87,
"revdate": [1507507637.0, -39600]
}, {
"node": "3fac14728144a6c51da4320fe171bf3d5cb7b9e7",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1406562 - Return first continuation for parent of first-letter in ExpectedOwnerForChild. r=emilio\n\nMozReview-Commit-ID: KkBDMStwQ6r",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 87,
"line": "    return FirstContinuationOrPartOfIBSplit(parent);\n",
"lineno": 88,
"revdate": [1507507637.0, -39600]
}, {
"node": "ac3ccd00426152daa9f7afbba00cc6abd59a1039",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1404167: Properly update the styles of first-letter childs of anon boxes. r=bz\n\nMozReview-Commit-ID: Cyxs4FxGj6B\nSigned-off-by: Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 85,
"line": "  }\n",
"lineno": 89,
"revdate": [1506649746.0, -7200]
}, {
"node": "ac3ccd00426152daa9f7afbba00cc6abd59a1039",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1404167: Properly update the styles of first-letter childs of anon boxes. r=bz\n\nMozReview-Commit-ID: Cyxs4FxGj6B\nSigned-off-by: Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 86,
"line": "\n",
"lineno": 90,
"revdate": [1506649746.0, -7200]
}, {
"node": "06d4a47016eb456afad052f2ae432e278356d2e4",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1402476.  ExpectedOwnerForChild should not return a first-letter frame for a text child.  r=emilio\n\nThe expected owner is the DOM parent.  The first-letter then does some reparenting of the text style later.",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 87,
"line": "  if (parent-\u003eIsLetterFrame()) {\n",
"lineno": 91,
"revdate": [1506976607.0, 14400]
}, {
"node": "06d4a47016eb456afad052f2ae432e278356d2e4",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1402476.  ExpectedOwnerForChild should not return a first-letter frame for a text child.  r=emilio\n\nThe expected owner is the DOM parent.  The first-letter then does some reparenting of the text style later.",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 88,
"line": "    // Things never have ::first-letter as their expected parent.  Go\n",
"lineno": 92,
"revdate": [1506976607.0, 14400]
}, {
"node": "06d4a47016eb456afad052f2ae432e278356d2e4",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1402476.  ExpectedOwnerForChild should not return a first-letter frame for a text child.  r=emilio\n\nThe expected owner is the DOM parent.  The first-letter then does some reparenting of the text style later.",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 89,
"line": "    // on up to the ::first-letter's parent.\n",
"lineno": 93,
"revdate": [1506976607.0, 14400]
}, {
"node": "06d4a47016eb456afad052f2ae432e278356d2e4",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1402476.  ExpectedOwnerForChild should not return a first-letter frame for a text child.  r=emilio\n\nThe expected owner is the DOM parent.  The first-letter then does some reparenting of the text style later.",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 90,
"line": "    parent = parent-\u003eGetParent();\n",
"lineno": 94,
"revdate": [1506976607.0, 14400]
}, {
"node": "06d4a47016eb456afad052f2ae432e278356d2e4",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1402476.  ExpectedOwnerForChild should not return a first-letter frame for a text child.  r=emilio\n\nThe expected owner is the DOM parent.  The first-letter then does some reparenting of the text style later.",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 91,
"line": "  }\n",
"lineno": 95,
"revdate": [1506976607.0, 14400]
}, {
"node": "06d4a47016eb456afad052f2ae432e278356d2e4",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1402476.  ExpectedOwnerForChild should not return a first-letter frame for a text child.  r=emilio\n\nThe expected owner is the DOM parent.  The first-letter then does some reparenting of the text style later.",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 92,
"line": "\n",
"lineno": 96,
"revdate": [1506976607.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 80,
"line": "  parent = FirstContinuationOrPartOfIBSplit(parent);\n",
"lineno": 97,
"revdate": [1502424626.0, 14400]
}, {
"node": "1b05406b224819cfc636963bc9e0df0f04a92d7f",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1375674: Track the owner that represents the changes handled, and fix a bunch of issues while at it. r=heycam\n\nIn particular, this fixes:\n\n * Restyling of \u003carea\u003e elements that reuse the primary frame mapping for the\n   image map.\n\n * Restyling of children of display: contents elements when the display:\n   contents element generates a hint.\n\n * Restyling of out-of-flows (if my analysis in the bug is right).\n\n * Restyling of the ::backdrop pseudo-element.\n\n * Restyling of the Viewport frame.\n\nI only managed to do a reftest for the second one, but the rest of them are\ncovered by the assertions added.\n\nMozReview-Commit-ID: E7QtiQ1vPqu",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 71,
"line": "\n",
"lineno": 98,
"revdate": [1498239095.0, -7200]
}, {
"node": "1b05406b224819cfc636963bc9e0df0f04a92d7f",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1375674: Track the owner that represents the changes handled, and fix a bunch of issues while at it. r=heycam\n\nIn particular, this fixes:\n\n * Restyling of \u003carea\u003e elements that reuse the primary frame mapping for the\n   image map.\n\n * Restyling of children of display: contents elements when the display:\n   contents element generates a hint.\n\n * Restyling of out-of-flows (if my analysis in the bug is right).\n\n * Restyling of the ::backdrop pseudo-element.\n\n * Restyling of the Viewport frame.\n\nI only managed to do a reftest for the second one, but the rest of them are\ncovered by the assertions added.\n\nMozReview-Commit-ID: E7QtiQ1vPqu",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 72,
"line": "  // We've handled already anon boxes and bullet frames, so now we're looking at\n",
"lineno": 99,
"revdate": [1498239095.0, -7200]
}, {
"node": "1b05406b224819cfc636963bc9e0df0f04a92d7f",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1375674: Track the owner that represents the changes handled, and fix a bunch of issues while at it. r=heycam\n\nIn particular, this fixes:\n\n * Restyling of \u003carea\u003e elements that reuse the primary frame mapping for the\n   image map.\n\n * Restyling of children of display: contents elements when the display:\n   contents element generates a hint.\n\n * Restyling of out-of-flows (if my analysis in the bug is right).\n\n * Restyling of the ::backdrop pseudo-element.\n\n * Restyling of the Viewport frame.\n\nI only managed to do a reftest for the second one, but the rest of them are\ncovered by the assertions added.\n\nMozReview-Commit-ID: E7QtiQ1vPqu",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 73,
"line": "  // a frame of a DOM element or pseudo. Hop through anon and line-boxes\n",
"lineno": 100,
"revdate": [1498239095.0, -7200]
}, {
"node": "1b05406b224819cfc636963bc9e0df0f04a92d7f",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1375674: Track the owner that represents the changes handled, and fix a bunch of issues while at it. r=heycam\n\nIn particular, this fixes:\n\n * Restyling of \u003carea\u003e elements that reuse the primary frame mapping for the\n   image map.\n\n * Restyling of children of display: contents elements when the display:\n   contents element generates a hint.\n\n * Restyling of out-of-flows (if my analysis in the bug is right).\n\n * Restyling of the ::backdrop pseudo-element.\n\n * Restyling of the Viewport frame.\n\nI only managed to do a reftest for the second one, but the rest of them are\ncovered by the assertions added.\n\nMozReview-Commit-ID: E7QtiQ1vPqu",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 74,
"line": "  // generated by our DOM parent, and go find the owner frame for it.\n",
"lineno": 101,
"revdate": [1498239095.0, -7200]
}, {
"node": "1b05406b224819cfc636963bc9e0df0f04a92d7f",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1375674: Track the owner that represents the changes handled, and fix a bunch of issues while at it. r=heycam\n\nIn particular, this fixes:\n\n * Restyling of \u003carea\u003e elements that reuse the primary frame mapping for the\n   image map.\n\n * Restyling of children of display: contents elements when the display:\n   contents element generates a hint.\n\n * Restyling of out-of-flows (if my analysis in the bug is right).\n\n * Restyling of the ::backdrop pseudo-element.\n\n * Restyling of the Viewport frame.\n\nI only managed to do a reftest for the second one, but the rest of them are\ncovered by the assertions added.\n\nMozReview-Commit-ID: E7QtiQ1vPqu",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 75,
"line": "  while (parent && (IsAnonBox(*parent) || parent-\u003eIsLineFrame())) {\n",
"lineno": 102,
"revdate": [1498239095.0, -7200]
}, {
"node": "1b05406b224819cfc636963bc9e0df0f04a92d7f",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1375674: Track the owner that represents the changes handled, and fix a bunch of issues while at it. r=heycam\n\nIn particular, this fixes:\n\n * Restyling of \u003carea\u003e elements that reuse the primary frame mapping for the\n   image map.\n\n * Restyling of children of display: contents elements when the display:\n   contents element generates a hint.\n\n * Restyling of out-of-flows (if my analysis in the bug is right).\n\n * Restyling of the ::backdrop pseudo-element.\n\n * Restyling of the Viewport frame.\n\nI only managed to do a reftest for the second one, but the rest of them are\ncovered by the assertions added.\n\nMozReview-Commit-ID: E7QtiQ1vPqu",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 76,
"line": "    auto* pseudo = parent-\u003eStyleContext()-\u003eGetPseudo();\n",
"lineno": 103,
"revdate": [1498239095.0, -7200]
}, {
"node": "1b05406b224819cfc636963bc9e0df0f04a92d7f",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1375674: Track the owner that represents the changes handled, and fix a bunch of issues while at it. r=heycam\n\nIn particular, this fixes:\n\n * Restyling of \u003carea\u003e elements that reuse the primary frame mapping for the\n   image map.\n\n * Restyling of children of display: contents elements when the display:\n   contents element generates a hint.\n\n * Restyling of out-of-flows (if my analysis in the bug is right).\n\n * Restyling of the ::backdrop pseudo-element.\n\n * Restyling of the Viewport frame.\n\nI only managed to do a reftest for the second one, but the rest of them are\ncovered by the assertions added.\n\nMozReview-Commit-ID: E7QtiQ1vPqu",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 77,
"line": "    if (pseudo == nsCSSAnonBoxes::tableWrapper) {\n",
"lineno": 104,
"revdate": [1498239095.0, -7200]
}, {
"node": "1b05406b224819cfc636963bc9e0df0f04a92d7f",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1375674: Track the owner that represents the changes handled, and fix a bunch of issues while at it. r=heycam\n\nIn particular, this fixes:\n\n * Restyling of \u003carea\u003e elements that reuse the primary frame mapping for the\n   image map.\n\n * Restyling of children of display: contents elements when the display:\n   contents element generates a hint.\n\n * Restyling of out-of-flows (if my analysis in the bug is right).\n\n * Restyling of the ::backdrop pseudo-element.\n\n * Restyling of the Viewport frame.\n\nI only managed to do a reftest for the second one, but the rest of them are\ncovered by the assertions added.\n\nMozReview-Commit-ID: E7QtiQ1vPqu",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 78,
"line": "      const nsIFrame* tableFrame = parent-\u003ePrincipalChildList().FirstChild();\n",
"lineno": 105,
"revdate": [1498239095.0, -7200]
}, {
"node": "1b05406b224819cfc636963bc9e0df0f04a92d7f",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1375674: Track the owner that represents the changes handled, and fix a bunch of issues while at it. r=heycam\n\nIn particular, this fixes:\n\n * Restyling of \u003carea\u003e elements that reuse the primary frame mapping for the\n   image map.\n\n * Restyling of children of display: contents elements when the display:\n   contents element generates a hint.\n\n * Restyling of out-of-flows (if my analysis in the bug is right).\n\n * Restyling of the ::backdrop pseudo-element.\n\n * Restyling of the Viewport frame.\n\nI only managed to do a reftest for the second one, but the rest of them are\ncovered by the assertions added.\n\nMozReview-Commit-ID: E7QtiQ1vPqu",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 79,
"line": "      MOZ_ASSERT(tableFrame-\u003eIsTableFrame());\n",
"lineno": 106,
"revdate": [1498239095.0, -7200]
}, {
"node": "1b05406b224819cfc636963bc9e0df0f04a92d7f",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1375674: Track the owner that represents the changes handled, and fix a bunch of issues while at it. r=heycam\n\nIn particular, this fixes:\n\n * Restyling of \u003carea\u003e elements that reuse the primary frame mapping for the\n   image map.\n\n * Restyling of children of display: contents elements when the display:\n   contents element generates a hint.\n\n * Restyling of out-of-flows (if my analysis in the bug is right).\n\n * Restyling of the ::backdrop pseudo-element.\n\n * Restyling of the Viewport frame.\n\nI only managed to do a reftest for the second one, but the rest of them are\ncovered by the assertions added.\n\nMozReview-Commit-ID: E7QtiQ1vPqu",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 80,
"line": "      // Handle :-moz-table and :-moz-inline-table.\n",
"lineno": 107,
"revdate": [1498239095.0, -7200]
}, {
"node": "1b05406b224819cfc636963bc9e0df0f04a92d7f",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1375674: Track the owner that represents the changes handled, and fix a bunch of issues while at it. r=heycam\n\nIn particular, this fixes:\n\n * Restyling of \u003carea\u003e elements that reuse the primary frame mapping for the\n   image map.\n\n * Restyling of children of display: contents elements when the display:\n   contents element generates a hint.\n\n * Restyling of out-of-flows (if my analysis in the bug is right).\n\n * Restyling of the ::backdrop pseudo-element.\n\n * Restyling of the Viewport frame.\n\nI only managed to do a reftest for the second one, but the rest of them are\ncovered by the assertions added.\n\nMozReview-Commit-ID: E7QtiQ1vPqu",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 81,
"line": "      parent = IsAnonBox(*tableFrame) ? parent-\u003eGetParent() : tableFrame;\n",
"lineno": 108,
"revdate": [1498239095.0, -7200]
}, {
"node": "1b05406b224819cfc636963bc9e0df0f04a92d7f",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1375674: Track the owner that represents the changes handled, and fix a bunch of issues while at it. r=heycam\n\nIn particular, this fixes:\n\n * Restyling of \u003carea\u003e elements that reuse the primary frame mapping for the\n   image map.\n\n * Restyling of children of display: contents elements when the display:\n   contents element generates a hint.\n\n * Restyling of out-of-flows (if my analysis in the bug is right).\n\n * Restyling of the ::backdrop pseudo-element.\n\n * Restyling of the Viewport frame.\n\nI only managed to do a reftest for the second one, but the rest of them are\ncovered by the assertions added.\n\nMozReview-Commit-ID: E7QtiQ1vPqu",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 82,
"line": "    } else {\n",
"lineno": 109,
"revdate": [1498239095.0, -7200]
}, {
"node": "7a30d386b21a20eca4852969885413f606bdbd99",
"author": "KuoE0 \u003ckuoe0.tw@gmail.com\u003e",
"desc": "Bug 1428276 - Make ExpectedOwnerForChild deal with abs.pos. anon boxes. r=heycam\n\nFor an OOF frame, the parent frame that's associated with our parent\nstyle context is the *placeholder's* parent -- not the OOF frame's\nparent.\n\nMozReview-Commit-ID: CUSBkWDqxWz",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 110,
"line": "      // We get the in-flow parent here so that we can handle the OOF anonymous\n",
"lineno": 110,
"revdate": [1515140761.0, -28800]
}, {
"node": "7a30d386b21a20eca4852969885413f606bdbd99",
"author": "KuoE0 \u003ckuoe0.tw@gmail.com\u003e",
"desc": "Bug 1428276 - Make ExpectedOwnerForChild deal with abs.pos. anon boxes. r=heycam\n\nFor an OOF frame, the parent frame that's associated with our parent\nstyle context is the *placeholder's* parent -- not the OOF frame's\nparent.\n\nMozReview-Commit-ID: CUSBkWDqxWz",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 111,
"line": "      // boxed to get the correct parent.\n",
"lineno": 111,
"revdate": [1515140761.0, -28800]
}, {
"node": "7a30d386b21a20eca4852969885413f606bdbd99",
"author": "KuoE0 \u003ckuoe0.tw@gmail.com\u003e",
"desc": "Bug 1428276 - Make ExpectedOwnerForChild deal with abs.pos. anon boxes. r=heycam\n\nFor an OOF frame, the parent frame that's associated with our parent\nstyle context is the *placeholder's* parent -- not the OOF frame's\nparent.\n\nMozReview-Commit-ID: CUSBkWDqxWz",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 112,
"line": "      parent = parent-\u003eGetInFlowParent();\n",
"lineno": 112,
"revdate": [1515140761.0, -28800]
}, {
"node": "1b05406b224819cfc636963bc9e0df0f04a92d7f",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1375674: Track the owner that represents the changes handled, and fix a bunch of issues while at it. r=heycam\n\nIn particular, this fixes:\n\n * Restyling of \u003carea\u003e elements that reuse the primary frame mapping for the\n   image map.\n\n * Restyling of children of display: contents elements when the display:\n   contents element generates a hint.\n\n * Restyling of out-of-flows (if my analysis in the bug is right).\n\n * Restyling of the ::backdrop pseudo-element.\n\n * Restyling of the Viewport frame.\n\nI only managed to do a reftest for the second one, but the rest of them are\ncovered by the assertions added.\n\nMozReview-Commit-ID: E7QtiQ1vPqu",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 84,
"line": "    }\n",
"lineno": 113,
"revdate": [1498239095.0, -7200]
}, {
"node": "1b05406b224819cfc636963bc9e0df0f04a92d7f",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1375674: Track the owner that represents the changes handled, and fix a bunch of issues while at it. r=heycam\n\nIn particular, this fixes:\n\n * Restyling of \u003carea\u003e elements that reuse the primary frame mapping for the\n   image map.\n\n * Restyling of children of display: contents elements when the display:\n   contents element generates a hint.\n\n * Restyling of out-of-flows (if my analysis in the bug is right).\n\n * Restyling of the ::backdrop pseudo-element.\n\n * Restyling of the Viewport frame.\n\nI only managed to do a reftest for the second one, but the rest of them are\ncovered by the assertions added.\n\nMozReview-Commit-ID: E7QtiQ1vPqu",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 85,
"line": "    parent = FirstContinuationOrPartOfIBSplit(parent);\n",
"lineno": 114,
"revdate": [1498239095.0, -7200]
}, {
"node": "1b05406b224819cfc636963bc9e0df0f04a92d7f",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1375674: Track the owner that represents the changes handled, and fix a bunch of issues while at it. r=heycam\n\nIn particular, this fixes:\n\n * Restyling of \u003carea\u003e elements that reuse the primary frame mapping for the\n   image map.\n\n * Restyling of children of display: contents elements when the display:\n   contents element generates a hint.\n\n * Restyling of out-of-flows (if my analysis in the bug is right).\n\n * Restyling of the ::backdrop pseudo-element.\n\n * Restyling of the Viewport frame.\n\nI only managed to do a reftest for the second one, but the rest of them are\ncovered by the assertions added.\n\nMozReview-Commit-ID: E7QtiQ1vPqu",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 86,
"line": "  }\n",
"lineno": 115,
"revdate": [1498239095.0, -7200]
}, {
"node": "1b05406b224819cfc636963bc9e0df0f04a92d7f",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1375674: Track the owner that represents the changes handled, and fix a bunch of issues while at it. r=heycam\n\nIn particular, this fixes:\n\n * Restyling of \u003carea\u003e elements that reuse the primary frame mapping for the\n   image map.\n\n * Restyling of children of display: contents elements when the display:\n   contents element generates a hint.\n\n * Restyling of out-of-flows (if my analysis in the bug is right).\n\n * Restyling of the ::backdrop pseudo-element.\n\n * Restyling of the Viewport frame.\n\nI only managed to do a reftest for the second one, but the rest of them are\ncovered by the assertions added.\n\nMozReview-Commit-ID: E7QtiQ1vPqu",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 87,
"line": "\n",
"lineno": 116,
"revdate": [1498239095.0, -7200]
}, {
"node": "1b05406b224819cfc636963bc9e0df0f04a92d7f",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1375674: Track the owner that represents the changes handled, and fix a bunch of issues while at it. r=heycam\n\nIn particular, this fixes:\n\n * Restyling of \u003carea\u003e elements that reuse the primary frame mapping for the\n   image map.\n\n * Restyling of children of display: contents elements when the display:\n   contents element generates a hint.\n\n * Restyling of out-of-flows (if my analysis in the bug is right).\n\n * Restyling of the ::backdrop pseudo-element.\n\n * Restyling of the Viewport frame.\n\nI only managed to do a reftest for the second one, but the rest of them are\ncovered by the assertions added.\n\nMozReview-Commit-ID: E7QtiQ1vPqu",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 88,
"line": "  return parent;\n",
"lineno": 117,
"revdate": [1498239095.0, -7200]
}, {
"node": "1b05406b224819cfc636963bc9e0df0f04a92d7f",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1375674: Track the owner that represents the changes handled, and fix a bunch of issues while at it. r=heycam\n\nIn particular, this fixes:\n\n * Restyling of \u003carea\u003e elements that reuse the primary frame mapping for the\n   image map.\n\n * Restyling of children of display: contents elements when the display:\n   contents element generates a hint.\n\n * Restyling of out-of-flows (if my analysis in the bug is right).\n\n * Restyling of the ::backdrop pseudo-element.\n\n * Restyling of the Viewport frame.\n\nI only managed to do a reftest for the second one, but the rest of them are\ncovered by the assertions added.\n\nMozReview-Commit-ID: E7QtiQ1vPqu",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 89,
"line": "}\n",
"lineno": 118,
"revdate": [1498239095.0, -7200]
}, {
"node": "1b05406b224819cfc636963bc9e0df0f04a92d7f",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1375674: Track the owner that represents the changes handled, and fix a bunch of issues while at it. r=heycam\n\nIn particular, this fixes:\n\n * Restyling of \u003carea\u003e elements that reuse the primary frame mapping for the\n   image map.\n\n * Restyling of children of display: contents elements when the display:\n   contents element generates a hint.\n\n * Restyling of out-of-flows (if my analysis in the bug is right).\n\n * Restyling of the ::backdrop pseudo-element.\n\n * Restyling of the Viewport frame.\n\nI only managed to do a reftest for the second one, but the rest of them are\ncovered by the assertions added.\n\nMozReview-Commit-ID: E7QtiQ1vPqu",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 90,
"line": "\n",
"lineno": 119,
"revdate": [1498239095.0, -7200]
}, {
"node": "1b05406b224819cfc636963bc9e0df0f04a92d7f",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1375674: Track the owner that represents the changes handled, and fix a bunch of issues while at it. r=heycam\n\nIn particular, this fixes:\n\n * Restyling of \u003carea\u003e elements that reuse the primary frame mapping for the\n   image map.\n\n * Restyling of children of display: contents elements when the display:\n   contents element generates a hint.\n\n * Restyling of out-of-flows (if my analysis in the bug is right).\n\n * Restyling of the ::backdrop pseudo-element.\n\n * Restyling of the Viewport frame.\n\nI only managed to do a reftest for the second one, but the rest of them are\ncovered by the assertions added.\n\nMozReview-Commit-ID: E7QtiQ1vPqu",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 91,
"line": "void\n",
"lineno": 120,
"revdate": [1498239095.0, -7200]
}, {
"node": "1b05406b224819cfc636963bc9e0df0f04a92d7f",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1375674: Track the owner that represents the changes handled, and fix a bunch of issues while at it. r=heycam\n\nIn particular, this fixes:\n\n * Restyling of \u003carea\u003e elements that reuse the primary frame mapping for the\n   image map.\n\n * Restyling of children of display: contents elements when the display:\n   contents element generates a hint.\n\n * Restyling of out-of-flows (if my analysis in the bug is right).\n\n * Restyling of the ::backdrop pseudo-element.\n\n * Restyling of the Viewport frame.\n\nI only managed to do a reftest for the second one, but the rest of them are\ncovered by the assertions added.\n\nMozReview-Commit-ID: E7QtiQ1vPqu",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 92,
"line": "ServoRestyleState::AssertOwner(const ServoRestyleState& aParent) const\n",
"lineno": 121,
"revdate": [1498239095.0, -7200]
}, {
"node": "1b05406b224819cfc636963bc9e0df0f04a92d7f",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1375674: Track the owner that represents the changes handled, and fix a bunch of issues while at it. r=heycam\n\nIn particular, this fixes:\n\n * Restyling of \u003carea\u003e elements that reuse the primary frame mapping for the\n   image map.\n\n * Restyling of children of display: contents elements when the display:\n   contents element generates a hint.\n\n * Restyling of out-of-flows (if my analysis in the bug is right).\n\n * Restyling of the ::backdrop pseudo-element.\n\n * Restyling of the Viewport frame.\n\nI only managed to do a reftest for the second one, but the rest of them are\ncovered by the assertions added.\n\nMozReview-Commit-ID: E7QtiQ1vPqu",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 93,
"line": "{\n",
"lineno": 122,
"revdate": [1498239095.0, -7200]
}, {
"node": "1b05406b224819cfc636963bc9e0df0f04a92d7f",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1375674: Track the owner that represents the changes handled, and fix a bunch of issues while at it. r=heycam\n\nIn particular, this fixes:\n\n * Restyling of \u003carea\u003e elements that reuse the primary frame mapping for the\n   image map.\n\n * Restyling of children of display: contents elements when the display:\n   contents element generates a hint.\n\n * Restyling of out-of-flows (if my analysis in the bug is right).\n\n * Restyling of the ::backdrop pseudo-element.\n\n * Restyling of the Viewport frame.\n\nI only managed to do a reftest for the second one, but the rest of them are\ncovered by the assertions added.\n\nMozReview-Commit-ID: E7QtiQ1vPqu",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 94,
"line": "  MOZ_ASSERT(mOwner);\n",
"lineno": 123,
"revdate": [1498239095.0, -7200]
}, {
"node": "1b05406b224819cfc636963bc9e0df0f04a92d7f",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1375674: Track the owner that represents the changes handled, and fix a bunch of issues while at it. r=heycam\n\nIn particular, this fixes:\n\n * Restyling of \u003carea\u003e elements that reuse the primary frame mapping for the\n   image map.\n\n * Restyling of children of display: contents elements when the display:\n   contents element generates a hint.\n\n * Restyling of out-of-flows (if my analysis in the bug is right).\n\n * Restyling of the ::backdrop pseudo-element.\n\n * Restyling of the Viewport frame.\n\nI only managed to do a reftest for the second one, but the rest of them are\ncovered by the assertions added.\n\nMozReview-Commit-ID: E7QtiQ1vPqu",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 95,
"line": "  MOZ_ASSERT(!mOwner-\u003eHasAnyStateBits(NS_FRAME_OUT_OF_FLOW));\n",
"lineno": 124,
"revdate": [1498239095.0, -7200]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 92,
"line": "  // We allow aParent.mOwner to be null, for cases when we're not starting at\n",
"lineno": 125,
"revdate": [1501290678.0, 14400]
}, {
"node": "ce3e3c2f159845603124c4e1ee0b78a284713136",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1391736.  Relax the ExpectedOwnerForChild assert in the ServoRestyleState constructor.  r=emilio",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 120,
"line": "  // the root of the tree.  We also allow aParent.mOwner to be somewhere up our\n",
"lineno": 126,
"revdate": [1506976609.0, 14400]
}, {
"node": "ce3e3c2f159845603124c4e1ee0b78a284713136",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1391736.  Relax the ExpectedOwnerForChild assert in the ServoRestyleState constructor.  r=emilio",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 121,
"line": "  // expected owner chain not our immediate owner, which allows us creating long\n",
"lineno": 127,
"revdate": [1506976609.0, 14400]
}, {
"node": "ce3e3c2f159845603124c4e1ee0b78a284713136",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1391736.  Relax the ExpectedOwnerForChild assert in the ServoRestyleState constructor.  r=emilio",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 122,
"line": "  // chains of ServoRestyleStates in some cases where it's just not worth it.\n",
"lineno": 128,
"revdate": [1506976609.0, 14400]
}, {
"node": "ce3e3c2f159845603124c4e1ee0b78a284713136",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1391736.  Relax the ExpectedOwnerForChild assert in the ServoRestyleState constructor.  r=emilio",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 123,
"line": "#ifdef DEBUG\n",
"lineno": 129,
"revdate": [1506976609.0, 14400]
}, {
"node": "ce3e3c2f159845603124c4e1ee0b78a284713136",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1391736.  Relax the ExpectedOwnerForChild assert in the ServoRestyleState constructor.  r=emilio",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 124,
"line": "  if (aParent.mOwner) {\n",
"lineno": 130,
"revdate": [1506976609.0, 14400]
}, {
"node": "ce3e3c2f159845603124c4e1ee0b78a284713136",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1391736.  Relax the ExpectedOwnerForChild assert in the ServoRestyleState constructor.  r=emilio",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 125,
"line": "    const nsIFrame* owner = ExpectedOwnerForChild(*mOwner);\n",
"lineno": 131,
"revdate": [1506976609.0, 14400]
}, {
"node": "ce3e3c2f159845603124c4e1ee0b78a284713136",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1391736.  Relax the ExpectedOwnerForChild assert in the ServoRestyleState constructor.  r=emilio",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 126,
"line": "    if (owner != aParent.mOwner) {\n",
"lineno": 132,
"revdate": [1506976609.0, 14400]
}, {
"node": "ce3e3c2f159845603124c4e1ee0b78a284713136",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1391736.  Relax the ExpectedOwnerForChild assert in the ServoRestyleState constructor.  r=emilio",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 127,
"line": "      MOZ_ASSERT(IsAnonBox(*owner),\n",
"lineno": 133,
"revdate": [1506976609.0, 14400]
}, {
"node": "ce3e3c2f159845603124c4e1ee0b78a284713136",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1391736.  Relax the ExpectedOwnerForChild assert in the ServoRestyleState constructor.  r=emilio",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 128,
"line": "                 \"Should only have expected owner weirdness when anon boxes are involved\");\n",
"lineno": 134,
"revdate": [1506976609.0, 14400]
}, {
"node": "ce3e3c2f159845603124c4e1ee0b78a284713136",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1391736.  Relax the ExpectedOwnerForChild assert in the ServoRestyleState constructor.  r=emilio",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 129,
"line": "      bool found = false;\n",
"lineno": 135,
"revdate": [1506976609.0, 14400]
}, {
"node": "ce3e3c2f159845603124c4e1ee0b78a284713136",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1391736.  Relax the ExpectedOwnerForChild assert in the ServoRestyleState constructor.  r=emilio",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 130,
"line": "      for (; owner; owner = ExpectedOwnerForChild(*owner)) {\n",
"lineno": 136,
"revdate": [1506976609.0, 14400]
}, {
"node": "ce3e3c2f159845603124c4e1ee0b78a284713136",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1391736.  Relax the ExpectedOwnerForChild assert in the ServoRestyleState constructor.  r=emilio",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 131,
"line": "        if (owner == aParent.mOwner) {\n",
"lineno": 137,
"revdate": [1506976609.0, 14400]
}, {
"node": "ce3e3c2f159845603124c4e1ee0b78a284713136",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1391736.  Relax the ExpectedOwnerForChild assert in the ServoRestyleState constructor.  r=emilio",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 132,
"line": "          found = true;\n",
"lineno": 138,
"revdate": [1506976609.0, 14400]
}, {
"node": "ce3e3c2f159845603124c4e1ee0b78a284713136",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1391736.  Relax the ExpectedOwnerForChild assert in the ServoRestyleState constructor.  r=emilio",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 133,
"line": "          break;\n",
"lineno": 139,
"revdate": [1506976609.0, 14400]
}, {
"node": "ce3e3c2f159845603124c4e1ee0b78a284713136",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1391736.  Relax the ExpectedOwnerForChild assert in the ServoRestyleState constructor.  r=emilio",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 134,
"line": "        }\n",
"lineno": 140,
"revdate": [1506976609.0, 14400]
}, {
"node": "ce3e3c2f159845603124c4e1ee0b78a284713136",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1391736.  Relax the ExpectedOwnerForChild assert in the ServoRestyleState constructor.  r=emilio",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 135,
"line": "      }\n",
"lineno": 141,
"revdate": [1506976609.0, 14400]
}, {
"node": "ce3e3c2f159845603124c4e1ee0b78a284713136",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1391736.  Relax the ExpectedOwnerForChild assert in the ServoRestyleState constructor.  r=emilio",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 136,
"line": "      MOZ_ASSERT(found, \"Must have aParent.mOwner on our expected owner chain\");\n",
"lineno": 142,
"revdate": [1506976609.0, 14400]
}, {
"node": "ce3e3c2f159845603124c4e1ee0b78a284713136",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1391736.  Relax the ExpectedOwnerForChild assert in the ServoRestyleState constructor.  r=emilio",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 137,
"line": "    }\n",
"lineno": 143,
"revdate": [1506976609.0, 14400]
}, {
"node": "ce3e3c2f159845603124c4e1ee0b78a284713136",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1391736.  Relax the ExpectedOwnerForChild assert in the ServoRestyleState constructor.  r=emilio",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 138,
"line": "  }\n",
"lineno": 144,
"revdate": [1506976609.0, 14400]
}, {
"node": "ce3e3c2f159845603124c4e1ee0b78a284713136",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1391736.  Relax the ExpectedOwnerForChild assert in the ServoRestyleState constructor.  r=emilio",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 139,
"line": "#endif\n",
"lineno": 145,
"revdate": [1506976609.0, 14400]
}, {
"node": "1b05406b224819cfc636963bc9e0df0f04a92d7f",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1375674: Track the owner that represents the changes handled, and fix a bunch of issues while at it. r=heycam\n\nIn particular, this fixes:\n\n * Restyling of \u003carea\u003e elements that reuse the primary frame mapping for the\n   image map.\n\n * Restyling of children of display: contents elements when the display:\n   contents element generates a hint.\n\n * Restyling of out-of-flows (if my analysis in the bug is right).\n\n * Restyling of the ::backdrop pseudo-element.\n\n * Restyling of the Viewport frame.\n\nI only managed to do a reftest for the second one, but the rest of them are\ncovered by the assertions added.\n\nMozReview-Commit-ID: E7QtiQ1vPqu",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 97,
"line": "}\n",
"lineno": 146,
"revdate": [1498239095.0, -7200]
}, {
"node": "1b05406b224819cfc636963bc9e0df0f04a92d7f",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1375674: Track the owner that represents the changes handled, and fix a bunch of issues while at it. r=heycam\n\nIn particular, this fixes:\n\n * Restyling of \u003carea\u003e elements that reuse the primary frame mapping for the\n   image map.\n\n * Restyling of children of display: contents elements when the display:\n   contents element generates a hint.\n\n * Restyling of out-of-flows (if my analysis in the bug is right).\n\n * Restyling of the ::backdrop pseudo-element.\n\n * Restyling of the Viewport frame.\n\nI only managed to do a reftest for the second one, but the rest of them are\ncovered by the assertions added.\n\nMozReview-Commit-ID: E7QtiQ1vPqu",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 98,
"line": "\n",
"lineno": 147,
"revdate": [1498239095.0, -7200]
}, {
"node": "1b05406b224819cfc636963bc9e0df0f04a92d7f",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1375674: Track the owner that represents the changes handled, and fix a bunch of issues while at it. r=heycam\n\nIn particular, this fixes:\n\n * Restyling of \u003carea\u003e elements that reuse the primary frame mapping for the\n   image map.\n\n * Restyling of children of display: contents elements when the display:\n   contents element generates a hint.\n\n * Restyling of out-of-flows (if my analysis in the bug is right).\n\n * Restyling of the ::backdrop pseudo-element.\n\n * Restyling of the Viewport frame.\n\nI only managed to do a reftest for the second one, but the rest of them are\ncovered by the assertions added.\n\nMozReview-Commit-ID: E7QtiQ1vPqu",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 99,
"line": "nsChangeHint\n",
"lineno": 148,
"revdate": [1498239095.0, -7200]
}, {
"node": "1b05406b224819cfc636963bc9e0df0f04a92d7f",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1375674: Track the owner that represents the changes handled, and fix a bunch of issues while at it. r=heycam\n\nIn particular, this fixes:\n\n * Restyling of \u003carea\u003e elements that reuse the primary frame mapping for the\n   image map.\n\n * Restyling of children of display: contents elements when the display:\n   contents element generates a hint.\n\n * Restyling of out-of-flows (if my analysis in the bug is right).\n\n * Restyling of the ::backdrop pseudo-element.\n\n * Restyling of the Viewport frame.\n\nI only managed to do a reftest for the second one, but the rest of them are\ncovered by the assertions added.\n\nMozReview-Commit-ID: E7QtiQ1vPqu",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 100,
"line": "ServoRestyleState::ChangesHandledFor(const nsIFrame& aFrame) const\n",
"lineno": 149,
"revdate": [1498239095.0, -7200]
}, {
"node": "1b05406b224819cfc636963bc9e0df0f04a92d7f",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1375674: Track the owner that represents the changes handled, and fix a bunch of issues while at it. r=heycam\n\nIn particular, this fixes:\n\n * Restyling of \u003carea\u003e elements that reuse the primary frame mapping for the\n   image map.\n\n * Restyling of children of display: contents elements when the display:\n   contents element generates a hint.\n\n * Restyling of out-of-flows (if my analysis in the bug is right).\n\n * Restyling of the ::backdrop pseudo-element.\n\n * Restyling of the Viewport frame.\n\nI only managed to do a reftest for the second one, but the rest of them are\ncovered by the assertions added.\n\nMozReview-Commit-ID: E7QtiQ1vPqu",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 101,
"line": "{\n",
"lineno": 150,
"revdate": [1498239095.0, -7200]
}, {
"node": "1b05406b224819cfc636963bc9e0df0f04a92d7f",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1375674: Track the owner that represents the changes handled, and fix a bunch of issues while at it. r=heycam\n\nIn particular, this fixes:\n\n * Restyling of \u003carea\u003e elements that reuse the primary frame mapping for the\n   image map.\n\n * Restyling of children of display: contents elements when the display:\n   contents element generates a hint.\n\n * Restyling of out-of-flows (if my analysis in the bug is right).\n\n * Restyling of the ::backdrop pseudo-element.\n\n * Restyling of the Viewport frame.\n\nI only managed to do a reftest for the second one, but the rest of them are\ncovered by the assertions added.\n\nMozReview-Commit-ID: E7QtiQ1vPqu",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 102,
"line": "  if (!mOwner) {\n",
"lineno": 151,
"revdate": [1498239095.0, -7200]
}, {
"node": "1b05406b224819cfc636963bc9e0df0f04a92d7f",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1375674: Track the owner that represents the changes handled, and fix a bunch of issues while at it. r=heycam\n\nIn particular, this fixes:\n\n * Restyling of \u003carea\u003e elements that reuse the primary frame mapping for the\n   image map.\n\n * Restyling of children of display: contents elements when the display:\n   contents element generates a hint.\n\n * Restyling of out-of-flows (if my analysis in the bug is right).\n\n * Restyling of the ::backdrop pseudo-element.\n\n * Restyling of the Viewport frame.\n\nI only managed to do a reftest for the second one, but the rest of them are\ncovered by the assertions added.\n\nMozReview-Commit-ID: E7QtiQ1vPqu",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 103,
"line": "    MOZ_ASSERT(!mChangesHandled);\n",
"lineno": 152,
"revdate": [1498239095.0, -7200]
}, {
"node": "1b05406b224819cfc636963bc9e0df0f04a92d7f",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1375674: Track the owner that represents the changes handled, and fix a bunch of issues while at it. r=heycam\n\nIn particular, this fixes:\n\n * Restyling of \u003carea\u003e elements that reuse the primary frame mapping for the\n   image map.\n\n * Restyling of children of display: contents elements when the display:\n   contents element generates a hint.\n\n * Restyling of out-of-flows (if my analysis in the bug is right).\n\n * Restyling of the ::backdrop pseudo-element.\n\n * Restyling of the Viewport frame.\n\nI only managed to do a reftest for the second one, but the rest of them are\ncovered by the assertions added.\n\nMozReview-Commit-ID: E7QtiQ1vPqu",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 104,
"line": "    return mChangesHandled;\n",
"lineno": 153,
"revdate": [1498239095.0, -7200]
}, {
"node": "1b05406b224819cfc636963bc9e0df0f04a92d7f",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1375674: Track the owner that represents the changes handled, and fix a bunch of issues while at it. r=heycam\n\nIn particular, this fixes:\n\n * Restyling of \u003carea\u003e elements that reuse the primary frame mapping for the\n   image map.\n\n * Restyling of children of display: contents elements when the display:\n   contents element generates a hint.\n\n * Restyling of out-of-flows (if my analysis in the bug is right).\n\n * Restyling of the ::backdrop pseudo-element.\n\n * Restyling of the Viewport frame.\n\nI only managed to do a reftest for the second one, but the rest of them are\ncovered by the assertions added.\n\nMozReview-Commit-ID: E7QtiQ1vPqu",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 105,
"line": "  }\n",
"lineno": 154,
"revdate": [1498239095.0, -7200]
}, {
"node": "1b05406b224819cfc636963bc9e0df0f04a92d7f",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1375674: Track the owner that represents the changes handled, and fix a bunch of issues while at it. r=heycam\n\nIn particular, this fixes:\n\n * Restyling of \u003carea\u003e elements that reuse the primary frame mapping for the\n   image map.\n\n * Restyling of children of display: contents elements when the display:\n   contents element generates a hint.\n\n * Restyling of out-of-flows (if my analysis in the bug is right).\n\n * Restyling of the ::backdrop pseudo-element.\n\n * Restyling of the Viewport frame.\n\nI only managed to do a reftest for the second one, but the rest of them are\ncovered by the assertions added.\n\nMozReview-Commit-ID: E7QtiQ1vPqu",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 106,
"line": "\n",
"lineno": 155,
"revdate": [1498239095.0, -7200]
}, {
"node": "1b05406b224819cfc636963bc9e0df0f04a92d7f",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1375674: Track the owner that represents the changes handled, and fix a bunch of issues while at it. r=heycam\n\nIn particular, this fixes:\n\n * Restyling of \u003carea\u003e elements that reuse the primary frame mapping for the\n   image map.\n\n * Restyling of children of display: contents elements when the display:\n   contents element generates a hint.\n\n * Restyling of out-of-flows (if my analysis in the bug is right).\n\n * Restyling of the ::backdrop pseudo-element.\n\n * Restyling of the Viewport frame.\n\nI only managed to do a reftest for the second one, but the rest of them are\ncovered by the assertions added.\n\nMozReview-Commit-ID: E7QtiQ1vPqu",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 107,
"line": "  MOZ_ASSERT(mOwner == ExpectedOwnerForChild(aFrame),\n",
"lineno": 156,
"revdate": [1498239095.0, -7200]
}, {
"node": "1b05406b224819cfc636963bc9e0df0f04a92d7f",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1375674: Track the owner that represents the changes handled, and fix a bunch of issues while at it. r=heycam\n\nIn particular, this fixes:\n\n * Restyling of \u003carea\u003e elements that reuse the primary frame mapping for the\n   image map.\n\n * Restyling of children of display: contents elements when the display:\n   contents element generates a hint.\n\n * Restyling of out-of-flows (if my analysis in the bug is right).\n\n * Restyling of the ::backdrop pseudo-element.\n\n * Restyling of the Viewport frame.\n\nI only managed to do a reftest for the second one, but the rest of them are\ncovered by the assertions added.\n\nMozReview-Commit-ID: E7QtiQ1vPqu",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 108,
"line": "             \"Missed some frame in the hierarchy?\");\n",
"lineno": 157,
"revdate": [1498239095.0, -7200]
}, {
"node": "1b05406b224819cfc636963bc9e0df0f04a92d7f",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1375674: Track the owner that represents the changes handled, and fix a bunch of issues while at it. r=heycam\n\nIn particular, this fixes:\n\n * Restyling of \u003carea\u003e elements that reuse the primary frame mapping for the\n   image map.\n\n * Restyling of children of display: contents elements when the display:\n   contents element generates a hint.\n\n * Restyling of out-of-flows (if my analysis in the bug is right).\n\n * Restyling of the ::backdrop pseudo-element.\n\n * Restyling of the Viewport frame.\n\nI only managed to do a reftest for the second one, but the rest of them are\ncovered by the assertions added.\n\nMozReview-Commit-ID: E7QtiQ1vPqu",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 109,
"line": "  return mChangesHandled;\n",
"lineno": 158,
"revdate": [1498239095.0, -7200]
}, {
"node": "1b05406b224819cfc636963bc9e0df0f04a92d7f",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1375674: Track the owner that represents the changes handled, and fix a bunch of issues while at it. r=heycam\n\nIn particular, this fixes:\n\n * Restyling of \u003carea\u003e elements that reuse the primary frame mapping for the\n   image map.\n\n * Restyling of children of display: contents elements when the display:\n   contents element generates a hint.\n\n * Restyling of out-of-flows (if my analysis in the bug is right).\n\n * Restyling of the ::backdrop pseudo-element.\n\n * Restyling of the Viewport frame.\n\nI only managed to do a reftest for the second one, but the rest of them are\ncovered by the assertions added.\n\nMozReview-Commit-ID: E7QtiQ1vPqu",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 110,
"line": "}\n",
"lineno": 159,
"revdate": [1498239095.0, -7200]
}, {
"node": "1b05406b224819cfc636963bc9e0df0f04a92d7f",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1375674: Track the owner that represents the changes handled, and fix a bunch of issues while at it. r=heycam\n\nIn particular, this fixes:\n\n * Restyling of \u003carea\u003e elements that reuse the primary frame mapping for the\n   image map.\n\n * Restyling of children of display: contents elements when the display:\n   contents element generates a hint.\n\n * Restyling of out-of-flows (if my analysis in the bug is right).\n\n * Restyling of the ::backdrop pseudo-element.\n\n * Restyling of the Viewport frame.\n\nI only managed to do a reftest for the second one, but the rest of them are\ncovered by the assertions added.\n\nMozReview-Commit-ID: E7QtiQ1vPqu",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 111,
"line": "#endif\n",
"lineno": 160,
"revdate": [1498239095.0, -7200]
}, {
"node": "1b05406b224819cfc636963bc9e0df0f04a92d7f",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1375674: Track the owner that represents the changes handled, and fix a bunch of issues while at it. r=heycam\n\nIn particular, this fixes:\n\n * Restyling of \u003carea\u003e elements that reuse the primary frame mapping for the\n   image map.\n\n * Restyling of children of display: contents elements when the display:\n   contents element generates a hint.\n\n * Restyling of out-of-flows (if my analysis in the bug is right).\n\n * Restyling of the ::backdrop pseudo-element.\n\n * Restyling of the Viewport frame.\n\nI only managed to do a reftest for the second one, but the rest of them are\ncovered by the assertions added.\n\nMozReview-Commit-ID: E7QtiQ1vPqu",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 112,
"line": "\n",
"lineno": 161,
"revdate": [1498239095.0, -7200]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 126,
"line": "void\n",
"lineno": 162,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 127,
"line": "ServoRestyleState::AddPendingWrapperRestyle(nsIFrame* aWrapperFrame)\n",
"lineno": 163,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 128,
"line": "{\n",
"lineno": 164,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 129,
"line": "  MOZ_ASSERT(aWrapperFrame-\u003eStyleContext()-\u003eIsWrapperAnonBox(),\n",
"lineno": 165,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 130,
"line": "             \"All our wrappers are anon boxes, and why would we restyle \"\n",
"lineno": 166,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 131,
"line": "             \"non-inheriting ones?\");\n",
"lineno": 167,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 132,
"line": "  MOZ_ASSERT(aWrapperFrame-\u003eStyleContext()-\u003eIsInheritingAnonBox(),\n",
"lineno": 168,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 133,
"line": "             \"All our wrappers are anon boxes, and why would we restyle \"\n",
"lineno": 169,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 134,
"line": "             \"non-inheriting ones?\");\n",
"lineno": 170,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 135,
"line": "  MOZ_ASSERT(aWrapperFrame-\u003eStyleContext()-\u003eGetPseudo() !=\n",
"lineno": 171,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 136,
"line": "             nsCSSAnonBoxes::cellContent,\n",
"lineno": 172,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 137,
"line": "             \"Someone should be using TableAwareParentFor\");\n",
"lineno": 173,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 138,
"line": "  MOZ_ASSERT(aWrapperFrame-\u003eStyleContext()-\u003eGetPseudo() !=\n",
"lineno": 174,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 139,
"line": "             nsCSSAnonBoxes::tableWrapper,\n",
"lineno": 175,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 140,
"line": "             \"Someone should be using TableAwareParentFor\");\n",
"lineno": 176,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 141,
"line": "  // Make sure we only add first continuations.\n",
"lineno": 177,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 142,
"line": "  aWrapperFrame = aWrapperFrame-\u003eFirstContinuation();\n",
"lineno": 178,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 143,
"line": "  nsIFrame* last = mPendingWrapperRestyles.SafeLastElement(nullptr);\n",
"lineno": 179,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 144,
"line": "  if (last == aWrapperFrame) {\n",
"lineno": 180,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 145,
"line": "    // Already queued up, nothing to do.\n",
"lineno": 181,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 146,
"line": "    return;\n",
"lineno": 182,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 147,
"line": "  }\n",
"lineno": 183,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 148,
"line": "\n",
"lineno": 184,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 149,
"line": "  // Make sure to queue up parents before children.  But don't queue up\n",
"lineno": 185,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 150,
"line": "  // ancestors of non-anonymous boxes here; those are handled when we traverse\n",
"lineno": 186,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 151,
"line": "  // their non-anonymous kids.\n",
"lineno": 187,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 152,
"line": "  if (aWrapperFrame-\u003eParentIsWrapperAnonBox()) {\n",
"lineno": 188,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 153,
"line": "    AddPendingWrapperRestyle(TableAwareParentFor(aWrapperFrame));\n",
"lineno": 189,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 154,
"line": "  }\n",
"lineno": 190,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 155,
"line": "\n",
"lineno": 191,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 156,
"line": "  // If the append fails, we'll fail to restyle properly, but that's probably\n",
"lineno": 192,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 157,
"line": "  // better than crashing.\n",
"lineno": 193,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 158,
"line": "  if (mPendingWrapperRestyles.AppendElement(aWrapperFrame, fallible)) {\n",
"lineno": 194,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 159,
"line": "    aWrapperFrame-\u003eSetIsWrapperAnonBoxNeedingRestyle(true);\n",
"lineno": 195,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 160,
"line": "  }\n",
"lineno": 196,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 161,
"line": "}\n",
"lineno": 197,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 162,
"line": "\n",
"lineno": 198,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 163,
"line": "void\n",
"lineno": 199,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 164,
"line": "ServoRestyleState::ProcessWrapperRestyles(nsIFrame* aParentFrame)\n",
"lineno": 200,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 165,
"line": "{\n",
"lineno": 201,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 166,
"line": "  size_t i = mPendingWrapperRestyleOffset;\n",
"lineno": 202,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 167,
"line": "  while (i \u003c mPendingWrapperRestyles.Length()) {\n",
"lineno": 203,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 168,
"line": "    i += ProcessMaybeNestedWrapperRestyle(aParentFrame, i);\n",
"lineno": 204,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 169,
"line": "  }\n",
"lineno": 205,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 170,
"line": "\n",
"lineno": 206,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 171,
"line": "  mPendingWrapperRestyles.TruncateLength(mPendingWrapperRestyleOffset);\n",
"lineno": 207,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 172,
"line": "}\n",
"lineno": 208,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 173,
"line": "\n",
"lineno": 209,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 174,
"line": "size_t\n",
"lineno": 210,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 175,
"line": "ServoRestyleState::ProcessMaybeNestedWrapperRestyle(nsIFrame* aParent,\n",
"lineno": 211,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 176,
"line": "                                                    size_t aIndex)\n",
"lineno": 212,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 177,
"line": "{\n",
"lineno": 213,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 178,
"line": "  // The frame at index aIndex is something we should restyle ourselves, but\n",
"lineno": 214,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 179,
"line": "  // following frames may need separate ServoRestyleStates to restyle.\n",
"lineno": 215,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 180,
"line": "  MOZ_ASSERT(aIndex \u003c mPendingWrapperRestyles.Length());\n",
"lineno": 216,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 181,
"line": "\n",
"lineno": 217,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 182,
"line": "  nsIFrame* cur = mPendingWrapperRestyles[aIndex];\n",
"lineno": 218,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 183,
"line": "  MOZ_ASSERT(cur-\u003eStyleContext()-\u003eIsWrapperAnonBox());\n",
"lineno": 219,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 184,
"line": "\n",
"lineno": 220,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 185,
"line": "  // Where is cur supposed to inherit from?  From its parent frame, except in\n",
"lineno": 221,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 186,
"line": "  // the case when cur is a table, in which case it should be its grandparent.\n",
"lineno": 222,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 187,
"line": "  // Also, not in the case when the resulting frame would be a first-line; in\n",
"lineno": 223,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 188,
"line": "  // that case we should be inheriting from the block, and the first-line will\n",
"lineno": 224,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 189,
"line": "  // do its fixup later if needed.\n",
"lineno": 225,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 190,
"line": "  //\n",
"lineno": 226,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 191,
"line": "  // Note that after we do all that fixup the parent we get might still not be\n",
"lineno": 227,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 192,
"line": "  // aParent; for example aParent could be a scrollframe, in which case we\n",
"lineno": 228,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 193,
"line": "  // should inherit from the scrollcontent frame.  Or the parent might be some\n",
"lineno": 229,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 194,
"line": "  // continuation of aParent.\n",
"lineno": 230,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 195,
"line": "  //\n",
"lineno": 231,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 196,
"line": "  // Try to assert as much as we can about the parent we actually end up using\n",
"lineno": 232,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 197,
"line": "  // without triggering bogus asserts in all those various edge cases.\n",
"lineno": 233,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 198,
"line": "  nsIFrame* parent = cur-\u003eGetParent();\n",
"lineno": 234,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 199,
"line": "  if (cur-\u003eIsTableFrame()) {\n",
"lineno": 235,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 200,
"line": "    MOZ_ASSERT(parent-\u003eIsTableWrapperFrame());\n",
"lineno": 236,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 201,
"line": "    parent = parent-\u003eGetParent();\n",
"lineno": 237,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 202,
"line": "  }\n",
"lineno": 238,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 203,
"line": "  if (parent-\u003eIsLineFrame()) {\n",
"lineno": 239,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 204,
"line": "    parent = parent-\u003eGetParent();\n",
"lineno": 240,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 205,
"line": "  }\n",
"lineno": 241,
"revdate": [1502424626.0, 14400]
}, {
"node": "ca0fcfb8cec2e0237c91c4b31a5a95db32f85bac",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1390389.  Fix anon box restyling assertions to correctly handle ib splits. r=xidorn\n\nMozReview-Commit-ID: AtBFlvLyg6b",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 207,
"line": "  MOZ_ASSERT(FirstContinuationOrPartOfIBSplit(parent) == aParent ||\n",
"lineno": 242,
"revdate": [1504185133.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 207,
"line": "             (parent-\u003eStyleContext()-\u003eIsInheritingAnonBox() &&\n",
"lineno": 243,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 208,
"line": "              parent-\u003eGetContent() == aParent-\u003eGetContent()));\n",
"lineno": 244,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 209,
"line": "\n",
"lineno": 245,
"revdate": [1502424626.0, 14400]
}, {
"node": "4b97d4e53e02ffae46ffb3268d95d022509f47ed",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1401739.  Make sure to always call UpdateStyleOfChildAnonBox with the first continuation as \"this\".  r=emilio\n\nMozReview-Commit-ID: KhfvBuCeoex",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 211,
"line": "  // Now \"this\" is a ServoRestyleState for aParent, so if parent is not a next\n",
"lineno": 246,
"revdate": [1506351519.0, 14400]
}, {
"node": "ca0fcfb8cec2e0237c91c4b31a5a95db32f85bac",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1390389.  Fix anon box restyling assertions to correctly handle ib splits. r=xidorn\n\nMozReview-Commit-ID: AtBFlvLyg6b",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 212,
"line": "  // continuation (possibly across ib splits) of aParent we need a new\n",
"lineno": 247,
"revdate": [1504185133.0, 14400]
}, {
"node": "ca0fcfb8cec2e0237c91c4b31a5a95db32f85bac",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1390389.  Fix anon box restyling assertions to correctly handle ib splits. r=xidorn\n\nMozReview-Commit-ID: AtBFlvLyg6b",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 213,
"line": "  // ServoRestyleState for the kid.\n",
"lineno": 248,
"revdate": [1504185133.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 212,
"line": "  Maybe\u003cServoRestyleState\u003e parentRestyleState;\n",
"lineno": 249,
"revdate": [1502424626.0, 14400]
}, {
"node": "4b97d4e53e02ffae46ffb3268d95d022509f47ed",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1401739.  Make sure to always call UpdateStyleOfChildAnonBox with the first continuation as \"this\".  r=emilio\n\nMozReview-Commit-ID: KhfvBuCeoex",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 215,
"line": "  nsIFrame* parentForRestyle =\n",
"lineno": 250,
"revdate": [1506351519.0, 14400]
}, {
"node": "4b97d4e53e02ffae46ffb3268d95d022509f47ed",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1401739.  Make sure to always call UpdateStyleOfChildAnonBox with the first continuation as \"this\".  r=emilio\n\nMozReview-Commit-ID: KhfvBuCeoex",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 216,
"line": "    nsLayoutUtils::FirstContinuationOrIBSplitSibling(parent);\n",
"lineno": 251,
"revdate": [1506351519.0, 14400]
}, {
"node": "4b97d4e53e02ffae46ffb3268d95d022509f47ed",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1401739.  Make sure to always call UpdateStyleOfChildAnonBox with the first continuation as \"this\".  r=emilio\n\nMozReview-Commit-ID: KhfvBuCeoex",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 217,
"line": "  if (parentForRestyle != aParent) {\n",
"lineno": 252,
"revdate": [1506351519.0, 14400]
}, {
"node": "4b97d4e53e02ffae46ffb3268d95d022509f47ed",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1401739.  Make sure to always call UpdateStyleOfChildAnonBox with the first continuation as \"this\".  r=emilio\n\nMozReview-Commit-ID: KhfvBuCeoex",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 218,
"line": "    parentRestyleState.emplace(*parentForRestyle, *this, nsChangeHint_Empty,\n",
"lineno": 253,
"revdate": [1506351519.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 215,
"line": "                               Type::InFlow);\n",
"lineno": 254,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 216,
"line": "  }\n",
"lineno": 255,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 217,
"line": "  ServoRestyleState& curRestyleState =\n",
"lineno": 256,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 218,
"line": "    parentRestyleState ? *parentRestyleState : *this;\n",
"lineno": 257,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 219,
"line": "\n",
"lineno": 258,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 220,
"line": "  // This frame may already have been restyled.  Even if it has, we can't just\n",
"lineno": 259,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 221,
"line": "  // return, because the next frame may be a kid of it that does need restyling.\n",
"lineno": 260,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 222,
"line": "  if (cur-\u003eIsWrapperAnonBoxNeedingRestyle()) {\n",
"lineno": 261,
"revdate": [1502424626.0, 14400]
}, {
"node": "ca0fcfb8cec2e0237c91c4b31a5a95db32f85bac",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1390389.  Fix anon box restyling assertions to correctly handle ib splits. r=xidorn\n\nMozReview-Commit-ID: AtBFlvLyg6b",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 227,
"line": "    parentForRestyle-\u003eUpdateStyleOfChildAnonBox(cur, curRestyleState);\n",
"lineno": 262,
"revdate": [1504185133.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 224,
"line": "    cur-\u003eSetIsWrapperAnonBoxNeedingRestyle(false);\n",
"lineno": 263,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 225,
"line": "  }\n",
"lineno": 264,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 226,
"line": "\n",
"lineno": 265,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 227,
"line": "  size_t numProcessed = 1;\n",
"lineno": 266,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 228,
"line": "\n",
"lineno": 267,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 229,
"line": "  // Note: no overflow possible here, since aIndex \u003c length.\n",
"lineno": 268,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 230,
"line": "  if (aIndex + 1 \u003c mPendingWrapperRestyles.Length()) {\n",
"lineno": 269,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 231,
"line": "    nsIFrame* next = mPendingWrapperRestyles[aIndex + 1];\n",
"lineno": 270,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 232,
"line": "    if (TableAwareParentFor(next) == cur &&\n",
"lineno": 271,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 233,
"line": "        next-\u003eIsWrapperAnonBoxNeedingRestyle()) {\n",
"lineno": 272,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 234,
"line": "      // It might be nice if we could do better than nsChangeHint_Empty.  On\n",
"lineno": 273,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 235,
"line": "      // the other hand, presumably our mChangesHandled already has the bits\n",
"lineno": 274,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 236,
"line": "      // we really want here so in practice it doesn't matter.\n",
"lineno": 275,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 237,
"line": "      ServoRestyleState childState(*cur, curRestyleState, nsChangeHint_Empty,\n",
"lineno": 276,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 238,
"line": "                                   Type::InFlow,\n",
"lineno": 277,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 239,
"line": "                                   /* aAssertWrapperRestyleLength = */ false);\n",
"lineno": 278,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 240,
"line": "      numProcessed += childState.ProcessMaybeNestedWrapperRestyle(cur,\n",
"lineno": 279,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 241,
"line": "                                                                  aIndex + 1);\n",
"lineno": 280,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 242,
"line": "    }\n",
"lineno": 281,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 243,
"line": "  }\n",
"lineno": 282,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 244,
"line": "\n",
"lineno": 283,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 245,
"line": "  return numProcessed;\n",
"lineno": 284,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 246,
"line": "}\n",
"lineno": 285,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 247,
"line": "\n",
"lineno": 286,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 248,
"line": "nsIFrame*\n",
"lineno": 287,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 249,
"line": "ServoRestyleState::TableAwareParentFor(const nsIFrame* aChild)\n",
"lineno": 288,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 250,
"line": "{\n",
"lineno": 289,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 251,
"line": "  // We want to get the anon box parent for aChild. where aChild has\n",
"lineno": 290,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 252,
"line": "  // ParentIsWrapperAnonBox().\n",
"lineno": 291,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 253,
"line": "  //\n",
"lineno": 292,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 254,
"line": "  // For the most part this is pretty straightforward, but there are two\n",
"lineno": 293,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 255,
"line": "  // wrinkles.  First, if aChild is a table, then we really want the parent of\n",
"lineno": 294,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 256,
"line": "  // its table wrapper.\n",
"lineno": 295,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 257,
"line": "  if (aChild-\u003eIsTableFrame()) {\n",
"lineno": 296,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 258,
"line": "    aChild = aChild-\u003eGetParent();\n",
"lineno": 297,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 259,
"line": "    MOZ_ASSERT(aChild-\u003eIsTableWrapperFrame());\n",
"lineno": 298,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 260,
"line": "  }\n",
"lineno": 299,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 261,
"line": "\n",
"lineno": 300,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 262,
"line": "  nsIFrame* parent = aChild-\u003eGetParent();\n",
"lineno": 301,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 263,
"line": "  // Now if parent is a cell-content frame, we actually want the cellframe.\n",
"lineno": 302,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 264,
"line": "  if (parent-\u003eStyleContext()-\u003eGetPseudo() == nsCSSAnonBoxes::cellContent) {\n",
"lineno": 303,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 265,
"line": "    parent = parent-\u003eGetParent();\n",
"lineno": 304,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 266,
"line": "  } else if (parent-\u003eIsTableWrapperFrame()) {\n",
"lineno": 305,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 267,
"line": "    // Must be a caption.  In that case we want the table here.\n",
"lineno": 306,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 268,
"line": "    MOZ_ASSERT(aChild-\u003eStyleDisplay()-\u003emDisplay == StyleDisplay::TableCaption);\n",
"lineno": 307,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 269,
"line": "    parent = parent-\u003ePrincipalChildList().FirstChild();\n",
"lineno": 308,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 270,
"line": "  }\n",
"lineno": 309,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 271,
"line": "  return parent;\n",
"lineno": 310,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 272,
"line": "}\n",
"lineno": 311,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 273,
"line": "\n",
"lineno": 312,
"revdate": [1502424626.0, 14400]
}, {
"node": "769a86b5787dfd7d2bbd10584a54979320c260d9",
"author": "Emilio Cobos \u00c1lvarez \u003cecoal95@gmail.com\u003e",
"desc": "Bug 1285474: Add mozilla::RestyleManagerBase to share logic between RestyleManager and ServoRestyleManager. r=bholley\n\nPartially implement some restyling APIs to take rid of some gecko-only code\npaths.\n\nMozReview-Commit-ID: L5i6Kr2Qars\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 14,
"line": "ServoRestyleManager::ServoRestyleManager(nsPresContext* aPresContext)\n",
"lineno": 313,
"revdate": [1467961726.0, 25200]
}, {
"node": "16eb31796cc63efda371ab2f1f7641df2d708b0c",
"author": "Cameron McCormack \u003ccam@mcc.id.au\u003e",
"desc": "Bug 1297899 - Part 4: Store concrete restyle manager type on RestyleManager. r=bholley\n\nMozReview-Commit-ID: AmsNPqPVm8c",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 22,
"line": "  : RestyleManager(StyleBackendType::Servo, aPresContext)\n",
"lineno": 314,
"revdate": [1486956092.0, -28800]
}, {
"node": "7c852ac4acf83d5d1776e98a6af36193bd97a9e5",
"author": "Bobby Holley \u003cbobbyholley@gmail.com\u003e",
"desc": "Bug 1317016 - Basic infrastructure for RestyleHint-driven traversal. r=emilio\n\nMozReview-Commit-ID: 7wH5XcILVmX\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 21,
"line": "  , mReentrantChanges(nullptr)\n",
"lineno": 315,
"revdate": [1478067084.0, 25200]
}, {
"node": "1d0b39b33148fd7f655760dd23a225ba9a1e6849",
"author": "Cameron McCormack \u003ccam@mcc.id.au\u003e",
"desc": "Bug 1270956 - Stub out some ServoRestyleManager methods. r=bholley\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 15,
"line": "{\n",
"lineno": 316,
"revdate": [1462420897.0, -36000]
}, {
"node": "1d0b39b33148fd7f655760dd23a225ba9a1e6849",
"author": "Cameron McCormack \u003ccam@mcc.id.au\u003e",
"desc": "Bug 1270956 - Stub out some ServoRestyleManager methods. r=bholley\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 16,
"line": "}\n",
"lineno": 317,
"revdate": [1462420897.0, -36000]
}, {
"node": "1d0b39b33148fd7f655760dd23a225ba9a1e6849",
"author": "Cameron McCormack \u003ccam@mcc.id.au\u003e",
"desc": "Bug 1270956 - Stub out some ServoRestyleManager methods. r=bholley\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 17,
"line": "\n",
"lineno": 318,
"revdate": [1462420897.0, -36000]
}, {
"node": "f3ab6216d197647011cc48b90fff685cb875c983",
"author": "Cameron McCormack \u003ccam@mcc.id.au\u003e",
"desc": "Bug 1248864 - Part 2: Add skeleton ServoRestyleManager and a RestyleManagerHandle smart pointer. r=dholbert",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 19,
"line": "void\n",
"lineno": 319,
"revdate": [1456297272.0, -39600]
}, {
"node": "f3ab6216d197647011cc48b90fff685cb875c983",
"author": "Cameron McCormack \u003ccam@mcc.id.au\u003e",
"desc": "Bug 1248864 - Part 2: Add skeleton ServoRestyleManager and a RestyleManagerHandle smart pointer. r=dholbert",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 20,
"line": "ServoRestyleManager::PostRestyleEvent(Element* aElement,\n",
"lineno": 320,
"revdate": [1456297272.0, -39600]
}, {
"node": "f3ab6216d197647011cc48b90fff685cb875c983",
"author": "Cameron McCormack \u003ccam@mcc.id.au\u003e",
"desc": "Bug 1248864 - Part 2: Add skeleton ServoRestyleManager and a RestyleManagerHandle smart pointer. r=dholbert",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 21,
"line": "                                      nsRestyleHint aRestyleHint,\n",
"lineno": 321,
"revdate": [1456297272.0, -39600]
}, {
"node": "f3ab6216d197647011cc48b90fff685cb875c983",
"author": "Cameron McCormack \u003ccam@mcc.id.au\u003e",
"desc": "Bug 1248864 - Part 2: Add skeleton ServoRestyleManager and a RestyleManagerHandle smart pointer. r=dholbert",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 22,
"line": "                                      nsChangeHint aMinChangeHint)\n",
"lineno": 322,
"revdate": [1456297272.0, -39600]
}, {
"node": "f3ab6216d197647011cc48b90fff685cb875c983",
"author": "Cameron McCormack \u003ccam@mcc.id.au\u003e",
"desc": "Bug 1248864 - Part 2: Add skeleton ServoRestyleManager and a RestyleManagerHandle smart pointer. r=dholbert",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 23,
"line": "{\n",
"lineno": 323,
"revdate": [1456297272.0, -39600]
}, {
"node": "d34b196990a0bbeaca6deef32b83daac57c6fb09",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1330874: Preserve neutral style changes for stylo. r=heycam\n\nSince we use the presence of a change hint to determine whether we should\nrecreate a style context, we can't just strip them out on CalcStyleDifference.\n\nMozReview-Commit-ID: GLhbTc2W3d7\nSigned-off-by: Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 33,
"line": "  MOZ_ASSERT(!(aMinChangeHint & nsChangeHint_NeutralChange),\n",
"lineno": 324,
"revdate": [1484386773.0, -3600]
}, {
"node": "d34b196990a0bbeaca6deef32b83daac57c6fb09",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1330874: Preserve neutral style changes for stylo. r=heycam\n\nSince we use the presence of a change hint to determine whether we should\nrecreate a style context, we can't just strip them out on CalcStyleDifference.\n\nMozReview-Commit-ID: GLhbTc2W3d7\nSigned-off-by: Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 34,
"line": "             \"Didn't expect explicit change hints to be neutral!\");\n",
"lineno": 325,
"revdate": [1484386773.0, -3600]
}, {
"node": "769a86b5787dfd7d2bbd10584a54979320c260d9",
"author": "Emilio Cobos \u00c1lvarez \u003cecoal95@gmail.com\u003e",
"desc": "Bug 1285474: Add mozilla::RestyleManagerBase to share logic between RestyleManager and ServoRestyleManager. r=bholley\n\nPartially implement some restyling APIs to take rid of some gecko-only code\npaths.\n\nMozReview-Commit-ID: L5i6Kr2Qars\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 30,
"line": "  if (MOZ_UNLIKELY(IsDisconnected()) ||\n",
"lineno": 326,
"revdate": [1467961726.0, 25200]
}, {
"node": "769a86b5787dfd7d2bbd10584a54979320c260d9",
"author": "Emilio Cobos \u00c1lvarez \u003cecoal95@gmail.com\u003e",
"desc": "Bug 1285474: Add mozilla::RestyleManagerBase to share logic between RestyleManager and ServoRestyleManager. r=bholley\n\nPartially implement some restyling APIs to take rid of some gecko-only code\npaths.\n\nMozReview-Commit-ID: L5i6Kr2Qars\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 31,
"line": "      MOZ_UNLIKELY(PresContext()-\u003ePresShell()-\u003eIsDestroying())) {\n",
"lineno": 327,
"revdate": [1467961726.0, 25200]
}, {
"node": "769a86b5787dfd7d2bbd10584a54979320c260d9",
"author": "Emilio Cobos \u00c1lvarez \u003cecoal95@gmail.com\u003e",
"desc": "Bug 1285474: Add mozilla::RestyleManagerBase to share logic between RestyleManager and ServoRestyleManager. r=bholley\n\nPartially implement some restyling APIs to take rid of some gecko-only code\npaths.\n\nMozReview-Commit-ID: L5i6Kr2Qars\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 32,
"line": "    return;\n",
"lineno": 328,
"revdate": [1467961726.0, 25200]
}, {
"node": "769a86b5787dfd7d2bbd10584a54979320c260d9",
"author": "Emilio Cobos \u00c1lvarez \u003cecoal95@gmail.com\u003e",
"desc": "Bug 1285474: Add mozilla::RestyleManagerBase to share logic between RestyleManager and ServoRestyleManager. r=bholley\n\nPartially implement some restyling APIs to take rid of some gecko-only code\npaths.\n\nMozReview-Commit-ID: L5i6Kr2Qars\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 33,
"line": "  }\n",
"lineno": 329,
"revdate": [1467961726.0, 25200]
}, {
"node": "769a86b5787dfd7d2bbd10584a54979320c260d9",
"author": "Emilio Cobos \u00c1lvarez \u003cecoal95@gmail.com\u003e",
"desc": "Bug 1285474: Add mozilla::RestyleManagerBase to share logic between RestyleManager and ServoRestyleManager. r=bholley\n\nPartially implement some restyling APIs to take rid of some gecko-only code\npaths.\n\nMozReview-Commit-ID: L5i6Kr2Qars\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 34,
"line": "\n",
"lineno": 330,
"revdate": [1467961726.0, 25200]
}, {
"node": "1029e1a5b03d2d1a81f11c1a8d2720be7ee4b3bd",
"author": "Bobby Holley \u003cbobbyholley@gmail.com\u003e",
"desc": "Bug 1343362 - Allow restyle hints to be posted during change hint handling. r=emilio\n\nMozReview-Commit-ID: 6ZU24tLQCjV\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 42,
"line": "  // We allow posting restyles from within change hint handling, but not from\n",
"lineno": 331,
"revdate": [1488420434.0, 28800]
}, {
"node": "1029e1a5b03d2d1a81f11c1a8d2720be7ee4b3bd",
"author": "Bobby Holley \u003cbobbyholley@gmail.com\u003e",
"desc": "Bug 1343362 - Allow restyle hints to be posted during change hint handling. r=emilio\n\nMozReview-Commit-ID: 6ZU24tLQCjV\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 43,
"line": "  // within the restyle algorithm itself.\n",
"lineno": 332,
"revdate": [1488420434.0, 28800]
}, {
"node": "1029e1a5b03d2d1a81f11c1a8d2720be7ee4b3bd",
"author": "Bobby Holley \u003cbobbyholley@gmail.com\u003e",
"desc": "Bug 1343362 - Allow restyle hints to be posted during change hint handling. r=emilio\n\nMozReview-Commit-ID: 6ZU24tLQCjV\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 44,
"line": "  MOZ_ASSERT(!ServoStyleSet::IsInServoTraversal());\n",
"lineno": 333,
"revdate": [1488420434.0, 28800]
}, {
"node": "2fe14ee4e5a868c5ce44d26f0bc5445532156e7f",
"author": "Hiroyuki Ikezoe \u003chikezoe@mozilla.com\u003e",
"desc": "Bug 1328787 - Part 13: Call nsAnimationManager.UpdateAnimations(). r=heycam\n\nMozReview-Commit-ID: CcA3dJaxuYY",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 46,
"line": "\n",
"lineno": 334,
"revdate": [1485662340.0, -32400]
}, {
"node": "457ed7c4de58f7fb64d296c787ac1a3a4be074b9",
"author": "Cameron McCormack \u003ccam@mcc.id.au\u003e",
"desc": "Bug 1331294 - Part 3: Make ServoRestyleManager::PostRestyleEvent not check HasPendingRestyles() before returning early. r=bholley\n\nIf there are pending restyles, and we were called with zero change and restyle\nhints, then we're still not going to do any extra work.  So we may as\nwell return early after only checking the hints.\n\nMozReview-Commit-ID: ACCGtDZcOJ0",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 47,
"line": "  if (aRestyleHint == 0 && !aMinChangeHint) {\n",
"lineno": 335,
"revdate": [1486694550.0, -28800]
}, {
"node": "5daa5c05033142561e0377f4b16b212fbbe8f811",
"author": "Emilio Cobos \u00c1lvarez \u003cecoal95@gmail.com\u003e",
"desc": "Bug 1287951: stylo: Add support for computing style hints from Servo. r=heycam\n\nMozReview-Commit-ID: ALuJxcfAMuL\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 57,
"line": "    return; // Nothing to do.\n",
"lineno": 336,
"revdate": [1468890175.0, 25200]
}, {
"node": "5daa5c05033142561e0377f4b16b212fbbe8f811",
"author": "Emilio Cobos \u00c1lvarez \u003cecoal95@gmail.com\u003e",
"desc": "Bug 1287951: stylo: Add support for computing style hints from Servo. r=heycam\n\nMozReview-Commit-ID: ALuJxcfAMuL\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 58,
"line": "  }\n",
"lineno": 337,
"revdate": [1468890175.0, 25200]
}, {
"node": "5daa5c05033142561e0377f4b16b212fbbe8f811",
"author": "Emilio Cobos \u00c1lvarez \u003cecoal95@gmail.com\u003e",
"desc": "Bug 1287951: stylo: Add support for computing style hints from Servo. r=heycam\n\nMozReview-Commit-ID: ALuJxcfAMuL\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 59,
"line": "\n",
"lineno": 338,
"revdate": [1468890175.0, 25200]
}, {
"node": "b46807aa128f157b740142528e1e6eb5cf436f50",
"author": "Wei-Cheng Pan \u003cwpan@mozilla.com\u003e",
"desc": "Bug 1366964 - Update style context generation after style resolved. r=heycam\n\nAdds another restyle generation which represents the dirty state of raw\nstyle changes, so that getComputedStyle() wont be confused by optimizations\nmade by style engines.\n\nMozReview-Commit-ID: 7RYeNCzFygO",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 133,
"line": "  // Assuming the restyle hints will invalidate cached style for\n",
"lineno": 339,
"revdate": [1495520027.0, -28800]
}, {
"node": "b46807aa128f157b740142528e1e6eb5cf436f50",
"author": "Wei-Cheng Pan \u003cwpan@mozilla.com\u003e",
"desc": "Bug 1366964 - Update style context generation after style resolved. r=heycam\n\nAdds another restyle generation which represents the dirty state of raw\nstyle changes, so that getComputedStyle() wont be confused by optimizations\nmade by style engines.\n\nMozReview-Commit-ID: 7RYeNCzFygO",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 134,
"line": "  // getComputedStyle, since we don't know if any of the restyling that we do\n",
"lineno": 340,
"revdate": [1495520027.0, -28800]
}, {
"node": "b46807aa128f157b740142528e1e6eb5cf436f50",
"author": "Wei-Cheng Pan \u003cwpan@mozilla.com\u003e",
"desc": "Bug 1366964 - Update style context generation after style resolved. r=heycam\n\nAdds another restyle generation which represents the dirty state of raw\nstyle changes, so that getComputedStyle() wont be confused by optimizations\nmade by style engines.\n\nMozReview-Commit-ID: 7RYeNCzFygO",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 135,
"line": "  // would affect undisplayed elements.\n",
"lineno": 341,
"revdate": [1495520027.0, -28800]
}, {
"node": "b46807aa128f157b740142528e1e6eb5cf436f50",
"author": "Wei-Cheng Pan \u003cwpan@mozilla.com\u003e",
"desc": "Bug 1366964 - Update style context generation after style resolved. r=heycam\n\nAdds another restyle generation which represents the dirty state of raw\nstyle changes, so that getComputedStyle() wont be confused by optimizations\nmade by style engines.\n\nMozReview-Commit-ID: 7RYeNCzFygO",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 136,
"line": "  if (aRestyleHint) {\n",
"lineno": 342,
"revdate": [1495520027.0, -28800]
}, {
"node": "b46807aa128f157b740142528e1e6eb5cf436f50",
"author": "Wei-Cheng Pan \u003cwpan@mozilla.com\u003e",
"desc": "Bug 1366964 - Update style context generation after style resolved. r=heycam\n\nAdds another restyle generation which represents the dirty state of raw\nstyle changes, so that getComputedStyle() wont be confused by optimizations\nmade by style engines.\n\nMozReview-Commit-ID: 7RYeNCzFygO",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 137,
"line": "    IncrementUndisplayedRestyleGeneration();\n",
"lineno": 343,
"revdate": [1495520027.0, -28800]
}, {
"node": "b46807aa128f157b740142528e1e6eb5cf436f50",
"author": "Wei-Cheng Pan \u003cwpan@mozilla.com\u003e",
"desc": "Bug 1366964 - Update style context generation after style resolved. r=heycam\n\nAdds another restyle generation which represents the dirty state of raw\nstyle changes, so that getComputedStyle() wont be confused by optimizations\nmade by style engines.\n\nMozReview-Commit-ID: 7RYeNCzFygO",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 138,
"line": "  }\n",
"lineno": 344,
"revdate": [1495520027.0, -28800]
}, {
"node": "b46807aa128f157b740142528e1e6eb5cf436f50",
"author": "Wei-Cheng Pan \u003cwpan@mozilla.com\u003e",
"desc": "Bug 1366964 - Update style context generation after style resolved. r=heycam\n\nAdds another restyle generation which represents the dirty state of raw\nstyle changes, so that getComputedStyle() wont be confused by optimizations\nmade by style engines.\n\nMozReview-Commit-ID: 7RYeNCzFygO",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 139,
"line": "\n",
"lineno": 345,
"revdate": [1495520027.0, -28800]
}, {
"node": "1029e1a5b03d2d1a81f11c1a8d2720be7ee4b3bd",
"author": "Bobby Holley \u003cbobbyholley@gmail.com\u003e",
"desc": "Bug 1343362 - Allow restyle hints to be posted during change hint handling. r=emilio\n\nMozReview-Commit-ID: 6ZU24tLQCjV\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 50,
"line": "  // Processing change hints sometimes causes new change hints to be generated,\n",
"lineno": 346,
"revdate": [1488420434.0, 28800]
}, {
"node": "1029e1a5b03d2d1a81f11c1a8d2720be7ee4b3bd",
"author": "Bobby Holley \u003cbobbyholley@gmail.com\u003e",
"desc": "Bug 1343362 - Allow restyle hints to be posted during change hint handling. r=emilio\n\nMozReview-Commit-ID: 6ZU24tLQCjV\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 51,
"line": "  // and very occasionally, additional restyle hints. We collect the change\n",
"lineno": 347,
"revdate": [1488420434.0, 28800]
}, {
"node": "1029e1a5b03d2d1a81f11c1a8d2720be7ee4b3bd",
"author": "Bobby Holley \u003cbobbyholley@gmail.com\u003e",
"desc": "Bug 1343362 - Allow restyle hints to be posted during change hint handling. r=emilio\n\nMozReview-Commit-ID: 6ZU24tLQCjV\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 52,
"line": "  // hints manually to avoid re-traversing the DOM to find them.\n",
"lineno": 348,
"revdate": [1488420434.0, 28800]
}, {
"node": "1029e1a5b03d2d1a81f11c1a8d2720be7ee4b3bd",
"author": "Bobby Holley \u003cbobbyholley@gmail.com\u003e",
"desc": "Bug 1343362 - Allow restyle hints to be posted during change hint handling. r=emilio\n\nMozReview-Commit-ID: 6ZU24tLQCjV\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 53,
"line": "  if (mReentrantChanges && !aRestyleHint) {\n",
"lineno": 349,
"revdate": [1488420434.0, 28800]
}, {
"node": "7c852ac4acf83d5d1776e98a6af36193bd97a9e5",
"author": "Bobby Holley \u003cbobbyholley@gmail.com\u003e",
"desc": "Bug 1317016 - Basic infrastructure for RestyleHint-driven traversal. r=emilio\n\nMozReview-Commit-ID: 7wH5XcILVmX\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 48,
"line": "    mReentrantChanges-\u003eAppendElement(ReentrantChange { aElement, aMinChangeHint });\n",
"lineno": 350,
"revdate": [1478067084.0, 25200]
}, {
"node": "7c852ac4acf83d5d1776e98a6af36193bd97a9e5",
"author": "Bobby Holley \u003cbobbyholley@gmail.com\u003e",
"desc": "Bug 1317016 - Basic infrastructure for RestyleHint-driven traversal. r=emilio\n\nMozReview-Commit-ID: 7wH5XcILVmX\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 49,
"line": "    return;\n",
"lineno": 351,
"revdate": [1478067084.0, 25200]
}, {
"node": "7c852ac4acf83d5d1776e98a6af36193bd97a9e5",
"author": "Bobby Holley \u003cbobbyholley@gmail.com\u003e",
"desc": "Bug 1317016 - Basic infrastructure for RestyleHint-driven traversal. r=emilio\n\nMozReview-Commit-ID: 7wH5XcILVmX\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 50,
"line": "  }\n",
"lineno": 352,
"revdate": [1478067084.0, 25200]
}, {
"node": "7c852ac4acf83d5d1776e98a6af36193bd97a9e5",
"author": "Bobby Holley \u003cbobbyholley@gmail.com\u003e",
"desc": "Bug 1317016 - Basic infrastructure for RestyleHint-driven traversal. r=emilio\n\nMozReview-Commit-ID: 7wH5XcILVmX\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 51,
"line": "\n",
"lineno": 353,
"revdate": [1478067084.0, 25200]
}, {
"node": "a418fa4ad28555c8ea6bea2e6a9f2d079822112f",
"author": "Boris Chiou \u003cboris.chiou@gmail.com\u003e",
"desc": "Bug 1355758 - Update RestyleManager::mAnimationGeneration for non-animation update. r=heycam\n\nWe use RestyleManager::mAnimationGeneration as the animation index of a\nnew created transition, and Element.getAnimations() uses this index to\nsort the order of transitions. We increase mAnimationGeneration one per\nrestyle cycle if there is any non-animation update.\n\nMozReview-Commit-ID: KmirBzI7CXi",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 58,
"line": "  if (aRestyleHint & ~eRestyle_AllHintsWithAnimations) {\n",
"lineno": 354,
"revdate": [1492764257.0, -28800]
}, {
"node": "a418fa4ad28555c8ea6bea2e6a9f2d079822112f",
"author": "Boris Chiou \u003cboris.chiou@gmail.com\u003e",
"desc": "Bug 1355758 - Update RestyleManager::mAnimationGeneration for non-animation update. r=heycam\n\nWe use RestyleManager::mAnimationGeneration as the animation index of a\nnew created transition, and Element.getAnimations() uses this index to\nsort the order of transitions. We increase mAnimationGeneration one per\nrestyle cycle if there is any non-animation update.\n\nMozReview-Commit-ID: KmirBzI7CXi",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 59,
"line": "    mHaveNonAnimationRestyles = true;\n",
"lineno": 355,
"revdate": [1492764257.0, -28800]
}, {
"node": "a418fa4ad28555c8ea6bea2e6a9f2d079822112f",
"author": "Boris Chiou \u003cboris.chiou@gmail.com\u003e",
"desc": "Bug 1355758 - Update RestyleManager::mAnimationGeneration for non-animation update. r=heycam\n\nWe use RestyleManager::mAnimationGeneration as the animation index of a\nnew created transition, and Element.getAnimations() uses this index to\nsort the order of transitions. We increase mAnimationGeneration one per\nrestyle cycle if there is any non-animation update.\n\nMozReview-Commit-ID: KmirBzI7CXi",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 60,
"line": "  }\n",
"lineno": 356,
"revdate": [1492764257.0, -28800]
}, {
"node": "a418fa4ad28555c8ea6bea2e6a9f2d079822112f",
"author": "Boris Chiou \u003cboris.chiou@gmail.com\u003e",
"desc": "Bug 1355758 - Update RestyleManager::mAnimationGeneration for non-animation update. r=heycam\n\nWe use RestyleManager::mAnimationGeneration as the animation index of a\nnew created transition, and Element.getAnimations() uses this index to\nsort the order of transitions. We increase mAnimationGeneration one per\nrestyle cycle if there is any non-animation update.\n\nMozReview-Commit-ID: KmirBzI7CXi",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 61,
"line": "\n",
"lineno": 357,
"revdate": [1492764257.0, -28800]
}, {
"node": "77cf36250272fcd1f27d27e669e0e6d7e3638324",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1368240: Manually expand later sibling hints. r=heycam\n\nThis will help keeping RestyleData small, and the amount of complexity we need\nto handle during the traversal down.\n\nMozReview-Commit-ID: 2a0FF40tr66\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 66,
"line": "  if (aRestyleHint & eRestyle_LaterSiblings) {\n",
"lineno": 358,
"revdate": [1496985551.0, -7200]
}, {
"node": "77cf36250272fcd1f27d27e669e0e6d7e3638324",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1368240: Manually expand later sibling hints. r=heycam\n\nThis will help keeping RestyleData small, and the amount of complexity we need\nto handle during the traversal down.\n\nMozReview-Commit-ID: 2a0FF40tr66\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 67,
"line": "    aRestyleHint &= ~eRestyle_LaterSiblings;\n",
"lineno": 359,
"revdate": [1496985551.0, -7200]
}, {
"node": "77cf36250272fcd1f27d27e669e0e6d7e3638324",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1368240: Manually expand later sibling hints. r=heycam\n\nThis will help keeping RestyleData small, and the amount of complexity we need\nto handle during the traversal down.\n\nMozReview-Commit-ID: 2a0FF40tr66\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 68,
"line": "\n",
"lineno": 360,
"revdate": [1496985551.0, -7200]
}, {
"node": "77cf36250272fcd1f27d27e669e0e6d7e3638324",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1368240: Manually expand later sibling hints. r=heycam\n\nThis will help keeping RestyleData small, and the amount of complexity we need\nto handle during the traversal down.\n\nMozReview-Commit-ID: 2a0FF40tr66\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 69,
"line": "    nsRestyleHint siblingHint = eRestyle_Subtree;\n",
"lineno": 361,
"revdate": [1496985551.0, -7200]
}, {
"node": "77cf36250272fcd1f27d27e669e0e6d7e3638324",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1368240: Manually expand later sibling hints. r=heycam\n\nThis will help keeping RestyleData small, and the amount of complexity we need\nto handle during the traversal down.\n\nMozReview-Commit-ID: 2a0FF40tr66\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 70,
"line": "    Element* current = aElement-\u003eGetNextElementSibling();\n",
"lineno": 362,
"revdate": [1496985551.0, -7200]
}, {
"node": "77cf36250272fcd1f27d27e669e0e6d7e3638324",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1368240: Manually expand later sibling hints. r=heycam\n\nThis will help keeping RestyleData small, and the amount of complexity we need\nto handle during the traversal down.\n\nMozReview-Commit-ID: 2a0FF40tr66\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 71,
"line": "    while (current) {\n",
"lineno": 363,
"revdate": [1496985551.0, -7200]
}, {
"node": "77cf36250272fcd1f27d27e669e0e6d7e3638324",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1368240: Manually expand later sibling hints. r=heycam\n\nThis will help keeping RestyleData small, and the amount of complexity we need\nto handle during the traversal down.\n\nMozReview-Commit-ID: 2a0FF40tr66\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 72,
"line": "      Servo_NoteExplicitHints(current, siblingHint, nsChangeHint(0));\n",
"lineno": 364,
"revdate": [1496985551.0, -7200]
}, {
"node": "77cf36250272fcd1f27d27e669e0e6d7e3638324",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1368240: Manually expand later sibling hints. r=heycam\n\nThis will help keeping RestyleData small, and the amount of complexity we need\nto handle during the traversal down.\n\nMozReview-Commit-ID: 2a0FF40tr66\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 73,
"line": "      current = current-\u003eGetNextElementSibling();\n",
"lineno": 365,
"revdate": [1496985551.0, -7200]
}, {
"node": "77cf36250272fcd1f27d27e669e0e6d7e3638324",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1368240: Manually expand later sibling hints. r=heycam\n\nThis will help keeping RestyleData small, and the amount of complexity we need\nto handle during the traversal down.\n\nMozReview-Commit-ID: 2a0FF40tr66\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 74,
"line": "    }\n",
"lineno": 366,
"revdate": [1496985551.0, -7200]
}, {
"node": "77cf36250272fcd1f27d27e669e0e6d7e3638324",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1368240: Manually expand later sibling hints. r=heycam\n\nThis will help keeping RestyleData small, and the amount of complexity we need\nto handle during the traversal down.\n\nMozReview-Commit-ID: 2a0FF40tr66\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 75,
"line": "  }\n",
"lineno": 367,
"revdate": [1496985551.0, -7200]
}, {
"node": "77cf36250272fcd1f27d27e669e0e6d7e3638324",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1368240: Manually expand later sibling hints. r=heycam\n\nThis will help keeping RestyleData small, and the amount of complexity we need\nto handle during the traversal down.\n\nMozReview-Commit-ID: 2a0FF40tr66\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 76,
"line": "\n",
"lineno": 368,
"revdate": [1496985551.0, -7200]
}, {
"node": "77cf36250272fcd1f27d27e669e0e6d7e3638324",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1368240: Manually expand later sibling hints. r=heycam\n\nThis will help keeping RestyleData small, and the amount of complexity we need\nto handle during the traversal down.\n\nMozReview-Commit-ID: 2a0FF40tr66\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 77,
"line": "  if (aRestyleHint || aMinChangeHint) {\n",
"lineno": 369,
"revdate": [1496985551.0, -7200]
}, {
"node": "77cf36250272fcd1f27d27e669e0e6d7e3638324",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1368240: Manually expand later sibling hints. r=heycam\n\nThis will help keeping RestyleData small, and the amount of complexity we need\nto handle during the traversal down.\n\nMozReview-Commit-ID: 2a0FF40tr66\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 78,
"line": "    Servo_NoteExplicitHints(aElement, aRestyleHint, aMinChangeHint);\n",
"lineno": 370,
"revdate": [1496985551.0, -7200]
}, {
"node": "77cf36250272fcd1f27d27e669e0e6d7e3638324",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1368240: Manually expand later sibling hints. r=heycam\n\nThis will help keeping RestyleData small, and the amount of complexity we need\nto handle during the traversal down.\n\nMozReview-Commit-ID: 2a0FF40tr66\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 79,
"line": "  }\n",
"lineno": 371,
"revdate": [1496985551.0, -7200]
}, {
"node": "f3ab6216d197647011cc48b90fff685cb875c983",
"author": "Cameron McCormack \u003ccam@mcc.id.au\u003e",
"desc": "Bug 1248864 - Part 2: Add skeleton ServoRestyleManager and a RestyleManagerHandle smart pointer. r=dholbert",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 25,
"line": "}\n",
"lineno": 372,
"revdate": [1456297272.0, -39600]
}, {
"node": "f3ab6216d197647011cc48b90fff685cb875c983",
"author": "Cameron McCormack \u003ccam@mcc.id.au\u003e",
"desc": "Bug 1248864 - Part 2: Add skeleton ServoRestyleManager and a RestyleManagerHandle smart pointer. r=dholbert",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 26,
"line": "\n",
"lineno": 373,
"revdate": [1456297272.0, -39600]
}, {
"node": "3bce1540107cb517e3f9f0a19cc08562edfd0076",
"author": "Hiroyuki Ikezoe \u003chikezoe@mozilla.com\u003e",
"desc": "Bug 1364799 - Add PostRestyleEventForCSSRuleChanges to distinguish PostRestyleEvent. r=birtles,heycam\n\nThe difference is that PostRestyleEventForCSSRuleChanges sets\nmRestyleForCSSRuleChanges true. In a subsequent patch,\nwe propagate a new TraversalRestyleBehavior flag to servo side\nif mRestyleForCSSRuleChanges is true.\n\nMozReview-Commit-ID: IKsBbm09uT9",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 69,
"line": "void\n",
"lineno": 374,
"revdate": [1495322186.0, -32400]
}, {
"node": "142539198f30655b00a358163e539d7443f21c53",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1357583: Tidy the PostRestyleEventForCSSRuleChanges API. r=heycam\n\nMozReview-Commit-ID: BtOWWC5knsi",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 70,
"line": "ServoRestyleManager::PostRestyleEventForCSSRuleChanges()\n",
"lineno": 375,
"revdate": [1495813591.0, -7200]
}, {
"node": "3bce1540107cb517e3f9f0a19cc08562edfd0076",
"author": "Hiroyuki Ikezoe \u003chikezoe@mozilla.com\u003e",
"desc": "Bug 1364799 - Add PostRestyleEventForCSSRuleChanges to distinguish PostRestyleEvent. r=birtles,heycam\n\nThe difference is that PostRestyleEventForCSSRuleChanges sets\nmRestyleForCSSRuleChanges true. In a subsequent patch,\nwe propagate a new TraversalRestyleBehavior flag to servo side\nif mRestyleForCSSRuleChanges is true.\n\nMozReview-Commit-ID: IKsBbm09uT9",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 74,
"line": "{\n",
"lineno": 376,
"revdate": [1495322186.0, -32400]
}, {
"node": "3bce1540107cb517e3f9f0a19cc08562edfd0076",
"author": "Hiroyuki Ikezoe \u003chikezoe@mozilla.com\u003e",
"desc": "Bug 1364799 - Add PostRestyleEventForCSSRuleChanges to distinguish PostRestyleEvent. r=birtles,heycam\n\nThe difference is that PostRestyleEventForCSSRuleChanges sets\nmRestyleForCSSRuleChanges true. In a subsequent patch,\nwe propagate a new TraversalRestyleBehavior flag to servo side\nif mRestyleForCSSRuleChanges is true.\n\nMozReview-Commit-ID: IKsBbm09uT9",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 75,
"line": "  mRestyleForCSSRuleChanges = true;\n",
"lineno": 377,
"revdate": [1495322186.0, -32400]
}, {
"node": "142539198f30655b00a358163e539d7443f21c53",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1357583: Tidy the PostRestyleEventForCSSRuleChanges API. r=heycam\n\nMozReview-Commit-ID: BtOWWC5knsi",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 73,
"line": "  mPresContext-\u003ePresShell()-\u003eEnsureStyleFlush();\n",
"lineno": 378,
"revdate": [1495813591.0, -7200]
}, {
"node": "3bce1540107cb517e3f9f0a19cc08562edfd0076",
"author": "Hiroyuki Ikezoe \u003chikezoe@mozilla.com\u003e",
"desc": "Bug 1364799 - Add PostRestyleEventForCSSRuleChanges to distinguish PostRestyleEvent. r=birtles,heycam\n\nThe difference is that PostRestyleEventForCSSRuleChanges sets\nmRestyleForCSSRuleChanges true. In a subsequent patch,\nwe propagate a new TraversalRestyleBehavior flag to servo side\nif mRestyleForCSSRuleChanges is true.\n\nMozReview-Commit-ID: IKsBbm09uT9",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 78,
"line": "}\n",
"lineno": 379,
"revdate": [1495322186.0, -32400]
}, {
"node": "3bce1540107cb517e3f9f0a19cc08562edfd0076",
"author": "Hiroyuki Ikezoe \u003chikezoe@mozilla.com\u003e",
"desc": "Bug 1364799 - Add PostRestyleEventForCSSRuleChanges to distinguish PostRestyleEvent. r=birtles,heycam\n\nThe difference is that PostRestyleEventForCSSRuleChanges sets\nmRestyleForCSSRuleChanges true. In a subsequent patch,\nwe propagate a new TraversalRestyleBehavior flag to servo side\nif mRestyleForCSSRuleChanges is true.\n\nMozReview-Commit-ID: IKsBbm09uT9",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 79,
"line": "\n",
"lineno": 380,
"revdate": [1495322186.0, -32400]
}, {
"node": "89a0a21e64c404625890ef18cf7b17ae52b9a240",
"author": "Hiroyuki Ikezoe \u003chikezoe@mozilla.com\u003e",
"desc": "Bug 1379516 - Mark animation timerline marker for stylo. r=birtles\n\nMozReview-Commit-ID: GkPSXEk4xua",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 190,
"line": "void\n",
"lineno": 381,
"revdate": [1502408651.0, -32400]
}, {
"node": "dedcbcd211227eb2fbf866d61a0a83d69090366b",
"author": "Hiroyuki Ikezoe \u003chikezoe@mozilla.com\u003e",
"desc": "Bug 1368889 - Post animation restyle hint againt pseudo element instead of its parent. r=birtles\n\nTo traverse pseudo elements in animation-only restyle, the pseudo element\nitself needs the animation-only dirty bit.\n\nMozReview-Commit-ID: 11RfVqnPXfJ",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 77,
"line": "ServoRestyleManager::PostRestyleEventForAnimations(\n",
"lineno": 382,
"revdate": [1496884945.0, -32400]
}, {
"node": "dedcbcd211227eb2fbf866d61a0a83d69090366b",
"author": "Hiroyuki Ikezoe \u003chikezoe@mozilla.com\u003e",
"desc": "Bug 1368889 - Post animation restyle hint againt pseudo element instead of its parent. r=birtles\n\nTo traverse pseudo elements in animation-only restyle, the pseudo element\nitself needs the animation-only dirty bit.\n\nMozReview-Commit-ID: 11RfVqnPXfJ",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 78,
"line": "  Element* aElement,\n",
"lineno": 383,
"revdate": [1496884945.0, -32400]
}, {
"node": "dedcbcd211227eb2fbf866d61a0a83d69090366b",
"author": "Hiroyuki Ikezoe \u003chikezoe@mozilla.com\u003e",
"desc": "Bug 1368889 - Post animation restyle hint againt pseudo element instead of its parent. r=birtles\n\nTo traverse pseudo elements in animation-only restyle, the pseudo element\nitself needs the animation-only dirty bit.\n\nMozReview-Commit-ID: 11RfVqnPXfJ",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 79,
"line": "  CSSPseudoElementType aPseudoType,\n",
"lineno": 384,
"revdate": [1496884945.0, -32400]
}, {
"node": "dedcbcd211227eb2fbf866d61a0a83d69090366b",
"author": "Hiroyuki Ikezoe \u003chikezoe@mozilla.com\u003e",
"desc": "Bug 1368889 - Post animation restyle hint againt pseudo element instead of its parent. r=birtles\n\nTo traverse pseudo elements in animation-only restyle, the pseudo element\nitself needs the animation-only dirty bit.\n\nMozReview-Commit-ID: 11RfVqnPXfJ",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 80,
"line": "  nsRestyleHint aRestyleHint)\n",
"lineno": 385,
"revdate": [1496884945.0, -32400]
}, {
"node": "ffe615ac2f20364ffa7e610c4cfa8d18e77c6b69",
"author": "Hiroyuki Ikezoe \u003chikezoe@mozilla.com\u003e",
"desc": "Bug 1341985 - Trigger the second traversal for updating CSS animations. r=birtles,heycam\n\nThe restyle request during restyling is a result of creating/updating/removing\nCSS animations that will come from a SequentialTask which will be implemented\nin a subsequent patch.\n\nMozReview-Commit-ID: JoAqvcN3y51",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 85,
"line": "{\n",
"lineno": 386,
"revdate": [1489114399.0, -32400]
}, {
"node": "dedcbcd211227eb2fbf866d61a0a83d69090366b",
"author": "Hiroyuki Ikezoe \u003chikezoe@mozilla.com\u003e",
"desc": "Bug 1368889 - Post animation restyle hint againt pseudo element instead of its parent. r=birtles\n\nTo traverse pseudo elements in animation-only restyle, the pseudo element\nitself needs the animation-only dirty bit.\n\nMozReview-Commit-ID: 11RfVqnPXfJ",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 82,
"line": "  Element* elementToRestyle =\n",
"lineno": 387,
"revdate": [1496884945.0, -32400]
}, {
"node": "dedcbcd211227eb2fbf866d61a0a83d69090366b",
"author": "Hiroyuki Ikezoe \u003chikezoe@mozilla.com\u003e",
"desc": "Bug 1368889 - Post animation restyle hint againt pseudo element instead of its parent. r=birtles\n\nTo traverse pseudo elements in animation-only restyle, the pseudo element\nitself needs the animation-only dirty bit.\n\nMozReview-Commit-ID: 11RfVqnPXfJ",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 83,
"line": "    EffectCompositor::GetElementToRestyle(aElement, aPseudoType);\n",
"lineno": 388,
"revdate": [1496884945.0, -32400]
}, {
"node": "dedcbcd211227eb2fbf866d61a0a83d69090366b",
"author": "Hiroyuki Ikezoe \u003chikezoe@mozilla.com\u003e",
"desc": "Bug 1368889 - Post animation restyle hint againt pseudo element instead of its parent. r=birtles\n\nTo traverse pseudo elements in animation-only restyle, the pseudo element\nitself needs the animation-only dirty bit.\n\nMozReview-Commit-ID: 11RfVqnPXfJ",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 84,
"line": "\n",
"lineno": 389,
"revdate": [1496884945.0, -32400]
}, {
"node": "dedcbcd211227eb2fbf866d61a0a83d69090366b",
"author": "Hiroyuki Ikezoe \u003chikezoe@mozilla.com\u003e",
"desc": "Bug 1368889 - Post animation restyle hint againt pseudo element instead of its parent. r=birtles\n\nTo traverse pseudo elements in animation-only restyle, the pseudo element\nitself needs the animation-only dirty bit.\n\nMozReview-Commit-ID: 11RfVqnPXfJ",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 85,
"line": "  if (!elementToRestyle) {\n",
"lineno": 390,
"revdate": [1496884945.0, -32400]
}, {
"node": "dedcbcd211227eb2fbf866d61a0a83d69090366b",
"author": "Hiroyuki Ikezoe \u003chikezoe@mozilla.com\u003e",
"desc": "Bug 1368889 - Post animation restyle hint againt pseudo element instead of its parent. r=birtles\n\nTo traverse pseudo elements in animation-only restyle, the pseudo element\nitself needs the animation-only dirty bit.\n\nMozReview-Commit-ID: 11RfVqnPXfJ",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 86,
"line": "    // FIXME: Bug 1371107: When reframing happens,\n",
"lineno": 391,
"revdate": [1496884945.0, -32400]
}, {
"node": "dedcbcd211227eb2fbf866d61a0a83d69090366b",
"author": "Hiroyuki Ikezoe \u003chikezoe@mozilla.com\u003e",
"desc": "Bug 1368889 - Post animation restyle hint againt pseudo element instead of its parent. r=birtles\n\nTo traverse pseudo elements in animation-only restyle, the pseudo element\nitself needs the animation-only dirty bit.\n\nMozReview-Commit-ID: 11RfVqnPXfJ",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 87,
"line": "    // EffectCompositor::mElementsToRestyle still has unbinded old pseudo\n",
"lineno": 392,
"revdate": [1496884945.0, -32400]
}, {
"node": "dedcbcd211227eb2fbf866d61a0a83d69090366b",
"author": "Hiroyuki Ikezoe \u003chikezoe@mozilla.com\u003e",
"desc": "Bug 1368889 - Post animation restyle hint againt pseudo element instead of its parent. r=birtles\n\nTo traverse pseudo elements in animation-only restyle, the pseudo element\nitself needs the animation-only dirty bit.\n\nMozReview-Commit-ID: 11RfVqnPXfJ",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 88,
"line": "    // element. We should drop it.\n",
"lineno": 393,
"revdate": [1496884945.0, -32400]
}, {
"node": "dedcbcd211227eb2fbf866d61a0a83d69090366b",
"author": "Hiroyuki Ikezoe \u003chikezoe@mozilla.com\u003e",
"desc": "Bug 1368889 - Post animation restyle hint againt pseudo element instead of its parent. r=birtles\n\nTo traverse pseudo elements in animation-only restyle, the pseudo element\nitself needs the animation-only dirty bit.\n\nMozReview-Commit-ID: 11RfVqnPXfJ",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 89,
"line": "    return;\n",
"lineno": 394,
"revdate": [1496884945.0, -32400]
}, {
"node": "dedcbcd211227eb2fbf866d61a0a83d69090366b",
"author": "Hiroyuki Ikezoe \u003chikezoe@mozilla.com\u003e",
"desc": "Bug 1368889 - Post animation restyle hint againt pseudo element instead of its parent. r=birtles\n\nTo traverse pseudo elements in animation-only restyle, the pseudo element\nitself needs the animation-only dirty bit.\n\nMozReview-Commit-ID: 11RfVqnPXfJ",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 90,
"line": "  }\n",
"lineno": 395,
"revdate": [1496884945.0, -32400]
}, {
"node": "dedcbcd211227eb2fbf866d61a0a83d69090366b",
"author": "Hiroyuki Ikezoe \u003chikezoe@mozilla.com\u003e",
"desc": "Bug 1368889 - Post animation restyle hint againt pseudo element instead of its parent. r=birtles\n\nTo traverse pseudo elements in animation-only restyle, the pseudo element\nitself needs the animation-only dirty bit.\n\nMozReview-Commit-ID: 11RfVqnPXfJ",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 91,
"line": "\n",
"lineno": 396,
"revdate": [1496884945.0, -32400]
}, {
"node": "89a0a21e64c404625890ef18cf7b17ae52b9a240",
"author": "Hiroyuki Ikezoe \u003chikezoe@mozilla.com\u003e",
"desc": "Bug 1379516 - Mark animation timerline marker for stylo. r=birtles\n\nMozReview-Commit-ID: GkPSXEk4xua",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 206,
"line": "  AutoRestyleTimelineMarker marker(mPresContext-\u003eGetDocShell(),\n",
"lineno": 397,
"revdate": [1502408651.0, -32400]
}, {
"node": "89a0a21e64c404625890ef18cf7b17ae52b9a240",
"author": "Hiroyuki Ikezoe \u003chikezoe@mozilla.com\u003e",
"desc": "Bug 1379516 - Mark animation timerline marker for stylo. r=birtles\n\nMozReview-Commit-ID: GkPSXEk4xua",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 207,
"line": "                                   true /* animation-only */);\n",
"lineno": 398,
"revdate": [1502408651.0, -32400]
}, {
"node": "dedcbcd211227eb2fbf866d61a0a83d69090366b",
"author": "Hiroyuki Ikezoe \u003chikezoe@mozilla.com\u003e",
"desc": "Bug 1368889 - Post animation restyle hint againt pseudo element instead of its parent. r=birtles\n\nTo traverse pseudo elements in animation-only restyle, the pseudo element\nitself needs the animation-only dirty bit.\n\nMozReview-Commit-ID: 11RfVqnPXfJ",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 92,
"line": "  Servo_NoteExplicitHints(elementToRestyle, aRestyleHint, nsChangeHint(0));\n",
"lineno": 399,
"revdate": [1496884945.0, -32400]
}, {
"node": "ffe615ac2f20364ffa7e610c4cfa8d18e77c6b69",
"author": "Hiroyuki Ikezoe \u003chikezoe@mozilla.com\u003e",
"desc": "Bug 1341985 - Trigger the second traversal for updating CSS animations. r=birtles,heycam\n\nThe restyle request during restyling is a result of creating/updating/removing\nCSS animations that will come from a SequentialTask which will be implemented\nin a subsequent patch.\n\nMozReview-Commit-ID: JoAqvcN3y51",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 87,
"line": "}\n",
"lineno": 400,
"revdate": [1489114399.0, -32400]
}, {
"node": "ffe615ac2f20364ffa7e610c4cfa8d18e77c6b69",
"author": "Hiroyuki Ikezoe \u003chikezoe@mozilla.com\u003e",
"desc": "Bug 1341985 - Trigger the second traversal for updating CSS animations. r=birtles,heycam\n\nThe restyle request during restyling is a result of creating/updating/removing\nCSS animations that will come from a SequentialTask which will be implemented\nin a subsequent patch.\n\nMozReview-Commit-ID: JoAqvcN3y51",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 88,
"line": "\n",
"lineno": 401,
"revdate": [1489114399.0, -32400]
}, {
"node": "f3ab6216d197647011cc48b90fff685cb875c983",
"author": "Cameron McCormack \u003ccam@mcc.id.au\u003e",
"desc": "Bug 1248864 - Part 2: Add skeleton ServoRestyleManager and a RestyleManagerHandle smart pointer. r=dholbert",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 27,
"line": "void\n",
"lineno": 402,
"revdate": [1456297272.0, -39600]
}, {
"node": "f3ab6216d197647011cc48b90fff685cb875c983",
"author": "Cameron McCormack \u003ccam@mcc.id.au\u003e",
"desc": "Bug 1248864 - Part 2: Add skeleton ServoRestyleManager and a RestyleManagerHandle smart pointer. r=dholbert",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 34,
"line": "ServoRestyleManager::RebuildAllStyleData(nsChangeHint aExtraHint,\n",
"lineno": 403,
"revdate": [1456297272.0, -39600]
}, {
"node": "f3ab6216d197647011cc48b90fff685cb875c983",
"author": "Cameron McCormack \u003ccam@mcc.id.au\u003e",
"desc": "Bug 1248864 - Part 2: Add skeleton ServoRestyleManager and a RestyleManagerHandle smart pointer. r=dholbert",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 35,
"line": "                                         nsRestyleHint aRestyleHint)\n",
"lineno": 404,
"revdate": [1456297272.0, -39600]
}, {
"node": "f3ab6216d197647011cc48b90fff685cb875c983",
"author": "Cameron McCormack \u003ccam@mcc.id.au\u003e",
"desc": "Bug 1248864 - Part 2: Add skeleton ServoRestyleManager and a RestyleManagerHandle smart pointer. r=dholbert",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 36,
"line": "{\n",
"lineno": 405,
"revdate": [1456297272.0, -39600]
}, {
"node": "8bcc71a220fc996d4769f0048351258fef613413",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1365902: Make ServoStyleSet::RebuildAllStyleData async. r=heycam\n\nMozReview-Commit-ID: D9Ri4gO3F6G",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 77,
"line": "   // NOTE(emilio): GeckoRestlyeManager does a sync style flush, which seems not\n",
"lineno": 406,
"revdate": [1495038812.0, -7200]
}, {
"node": "8bcc71a220fc996d4769f0048351258fef613413",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1365902: Make ServoStyleSet::RebuildAllStyleData async. r=heycam\n\nMozReview-Commit-ID: D9Ri4gO3F6G",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 78,
"line": "   // to be needed in my testing.\n",
"lineno": 407,
"revdate": [1495038812.0, -7200]
}, {
"node": "8bcc71a220fc996d4769f0048351258fef613413",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1365902: Make ServoStyleSet::RebuildAllStyleData async. r=heycam\n\nMozReview-Commit-ID: D9Ri4gO3F6G",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 79,
"line": "  PostRebuildAllStyleDataEvent(aExtraHint, aRestyleHint);\n",
"lineno": 408,
"revdate": [1495038812.0, -7200]
}, {
"node": "f3ab6216d197647011cc48b90fff685cb875c983",
"author": "Cameron McCormack \u003ccam@mcc.id.au\u003e",
"desc": "Bug 1248864 - Part 2: Add skeleton ServoRestyleManager and a RestyleManagerHandle smart pointer. r=dholbert",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 38,
"line": "}\n",
"lineno": 409,
"revdate": [1456297272.0, -39600]
}, {
"node": "f3ab6216d197647011cc48b90fff685cb875c983",
"author": "Cameron McCormack \u003ccam@mcc.id.au\u003e",
"desc": "Bug 1248864 - Part 2: Add skeleton ServoRestyleManager and a RestyleManagerHandle smart pointer. r=dholbert",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 39,
"line": "\n",
"lineno": 410,
"revdate": [1456297272.0, -39600]
}, {
"node": "f3ab6216d197647011cc48b90fff685cb875c983",
"author": "Cameron McCormack \u003ccam@mcc.id.au\u003e",
"desc": "Bug 1248864 - Part 2: Add skeleton ServoRestyleManager and a RestyleManagerHandle smart pointer. r=dholbert",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 40,
"line": "void\n",
"lineno": 411,
"revdate": [1456297272.0, -39600]
}, {
"node": "f3ab6216d197647011cc48b90fff685cb875c983",
"author": "Cameron McCormack \u003ccam@mcc.id.au\u003e",
"desc": "Bug 1248864 - Part 2: Add skeleton ServoRestyleManager and a RestyleManagerHandle smart pointer. r=dholbert",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 41,
"line": "ServoRestyleManager::PostRebuildAllStyleDataEvent(nsChangeHint aExtraHint,\n",
"lineno": 412,
"revdate": [1456297272.0, -39600]
}, {
"node": "f3ab6216d197647011cc48b90fff685cb875c983",
"author": "Cameron McCormack \u003ccam@mcc.id.au\u003e",
"desc": "Bug 1248864 - Part 2: Add skeleton ServoRestyleManager and a RestyleManagerHandle smart pointer. r=dholbert",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 42,
"line": "                                                  nsRestyleHint aRestyleHint)\n",
"lineno": 413,
"revdate": [1456297272.0, -39600]
}, {
"node": "f3ab6216d197647011cc48b90fff685cb875c983",
"author": "Cameron McCormack \u003ccam@mcc.id.au\u003e",
"desc": "Bug 1248864 - Part 2: Add skeleton ServoRestyleManager and a RestyleManagerHandle smart pointer. r=dholbert",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 43,
"line": "{\n",
"lineno": 414,
"revdate": [1456297272.0, -39600]
}, {
"node": "a59e4b5a87acd31027896ec9855d18241b698c33",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1386602: Avoid recreating the stylist in RebuildAllStyleData. r=heycam\n\nMozReview-Commit-ID: 31G9BLgqEmm",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 222,
"line": "  // NOTE(emilio): The semantics of these methods are quite funny, in the sense\n",
"lineno": 415,
"revdate": [1501677572.0, -7200]
}, {
"node": "a59e4b5a87acd31027896ec9855d18241b698c33",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1386602: Avoid recreating the stylist in RebuildAllStyleData. r=heycam\n\nMozReview-Commit-ID: 31G9BLgqEmm",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 223,
"line": "  // that we're not supposed to need to rebuild the actual stylist data.\n",
"lineno": 416,
"revdate": [1501677572.0, -7200]
}, {
"node": "a59e4b5a87acd31027896ec9855d18241b698c33",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1386602: Avoid recreating the stylist in RebuildAllStyleData. r=heycam\n\nMozReview-Commit-ID: 31G9BLgqEmm",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 224,
"line": "  //\n",
"lineno": 417,
"revdate": [1501677572.0, -7200]
}, {
"node": "a59e4b5a87acd31027896ec9855d18241b698c33",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1386602: Avoid recreating the stylist in RebuildAllStyleData. r=heycam\n\nMozReview-Commit-ID: 31G9BLgqEmm",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 225,
"line": "  // That's handled as part of the MediumFeaturesChanged stuff, if needed.\n",
"lineno": 418,
"revdate": [1501677572.0, -7200]
}, {
"node": "a59e4b5a87acd31027896ec9855d18241b698c33",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1386602: Avoid recreating the stylist in RebuildAllStyleData. r=heycam\n\nMozReview-Commit-ID: 31G9BLgqEmm",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 226,
"line": "  StyleSet()-\u003eClearCachedStyleData();\n",
"lineno": 419,
"revdate": [1501677572.0, -7200]
}, {
"node": "ee2658ed3cfb205700f5e1b095bf5d5ede15c4b2",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1364862: Make PostRebuildAllStyleData async. r=heycam\n\nMozReview-Commit-ID: EM3eUP1dWwA\nSigned-off-by: Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 99,
"line": "\n",
"lineno": 420,
"revdate": [1494864179.0, -7200]
}, {
"node": "4729549d9e8bde4b97c18698683fa6f56891e7fb",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1369321.  Make sure to restyle from all our style roots when rebuilding all style data with stylo.  r=bholley\n\nMozReview-Commit-ID: 5pghPVb2UY1",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 124,
"line": "  DocumentStyleRootIterator iter(mPresContext-\u003eDocument());\n",
"lineno": 421,
"revdate": [1498074776.0, 14400]
}, {
"node": "4729549d9e8bde4b97c18698683fa6f56891e7fb",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1369321.  Make sure to restyle from all our style roots when rebuilding all style data with stylo.  r=bholley\n\nMozReview-Commit-ID: 5pghPVb2UY1",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 125,
"line": "  while (Element* root = iter.GetNextStyleRoot()) {\n",
"lineno": 422,
"revdate": [1498074776.0, 14400]
}, {
"node": "ee2658ed3cfb205700f5e1b095bf5d5ede15c4b2",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1364862: Make PostRebuildAllStyleData async. r=heycam\n\nMozReview-Commit-ID: EM3eUP1dWwA\nSigned-off-by: Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 101,
"line": "    PostRestyleEvent(root, aRestyleHint, aExtraHint);\n",
"lineno": 423,
"revdate": [1494864179.0, -7200]
}, {
"node": "ee2658ed3cfb205700f5e1b095bf5d5ede15c4b2",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1364862: Make PostRebuildAllStyleData async. r=heycam\n\nMozReview-Commit-ID: EM3eUP1dWwA\nSigned-off-by: Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 102,
"line": "  }\n",
"lineno": 424,
"revdate": [1494864179.0, -7200]
}, {
"node": "8bcc71a220fc996d4769f0048351258fef613413",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1365902: Make ServoStyleSet::RebuildAllStyleData async. r=heycam\n\nMozReview-Commit-ID: D9Ri4gO3F6G",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 91,
"line": "\n",
"lineno": 425,
"revdate": [1495038812.0, -7200]
}, {
"node": "8bcc71a220fc996d4769f0048351258fef613413",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1365902: Make ServoStyleSet::RebuildAllStyleData async. r=heycam\n\nMozReview-Commit-ID: D9Ri4gO3F6G",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 92,
"line": "  // TODO(emilio, bz): Extensions can add/remove stylesheets that can affect\n",
"lineno": 426,
"revdate": [1495038812.0, -7200]
}, {
"node": "8bcc71a220fc996d4769f0048351258fef613413",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1365902: Make ServoStyleSet::RebuildAllStyleData async. r=heycam\n\nMozReview-Commit-ID: D9Ri4gO3F6G",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 93,
"line": "  // non-inheriting anon boxes. It's not clear if we want to support that, but\n",
"lineno": 427,
"revdate": [1495038812.0, -7200]
}, {
"node": "8bcc71a220fc996d4769f0048351258fef613413",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1365902: Make ServoStyleSet::RebuildAllStyleData async. r=heycam\n\nMozReview-Commit-ID: D9Ri4gO3F6G",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 94,
"line": "  // if we do, we need to re-selector-match them here.\n",
"lineno": 428,
"revdate": [1495038812.0, -7200]
}, {
"node": "f3ab6216d197647011cc48b90fff685cb875c983",
"author": "Cameron McCormack \u003ccam@mcc.id.au\u003e",
"desc": "Bug 1248864 - Part 2: Add skeleton ServoRestyleManager and a RestyleManagerHandle smart pointer. r=dholbert",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 45,
"line": "}\n",
"lineno": 429,
"revdate": [1456297272.0, -39600]
}, {
"node": "f3ab6216d197647011cc48b90fff685cb875c983",
"author": "Cameron McCormack \u003ccam@mcc.id.au\u003e",
"desc": "Bug 1248864 - Part 2: Add skeleton ServoRestyleManager and a RestyleManagerHandle smart pointer. r=dholbert",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 46,
"line": "\n",
"lineno": 430,
"revdate": [1456297272.0, -39600]
}, {
"node": "7c852ac4acf83d5d1776e98a6af36193bd97a9e5",
"author": "Bobby Holley \u003cbobbyholley@gmail.com\u003e",
"desc": "Bug 1317016 - Basic infrastructure for RestyleHint-driven traversal. r=emilio\n\nMozReview-Commit-ID: 7wH5XcILVmX\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 86,
"line": "/* static */ void\n",
"lineno": 431,
"revdate": [1478067084.0, 25200]
}, {
"node": "50ccf635c7319e78dc7366a3b160ebd27674e679",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1422654: stylo: Avoid restyling XBL-bound element if the binding doesn't have stylesheets. r=heycam\n\nMozReview-Commit-ID: An2McUbpCLk",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 430,
"line": "ServoRestyleManager::ClearServoDataFromSubtree(Element* aElement, IncludeRoot aIncludeRoot)\n",
"lineno": 432,
"revdate": [1512352074.0, -3600]
}, {
"node": "fc55188f14b6819fbf34a425d7af2a2c73ded730",
"author": "Cameron McCormack \u003ccam@mcc.id.au\u003e",
"desc": "Bug 1315894 - Clear dirty bits on entire subtree when stopping in RecreateStyleContexts due to no frame or ReconstructFrame hint. r=emilio\n\nMozReview-Commit-ID: 5ch5gtOn0Zr",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 78,
"line": "{\n",
"lineno": 433,
"revdate": [1478672758.0, -28800]
}, {
"node": "abcdc4570f03657167ba46025677211b27e71444",
"author": "Bobby Holley \u003cbobbyholley@gmail.com\u003e",
"desc": "Bug 1350441 - Make ServoRestyleManager::ClearServoDataFromSubtree a bit smarter. r=heycam\n\nThere's no reason to traverse the entire subtree if we encounter an unstyled section.\n\nMozReview-Commit-ID: 7WeMTI73wR9\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 101,
"line": "  if (!aElement-\u003eHasServoData()) {\n",
"lineno": 434,
"revdate": [1490384953.0, 25200]
}, {
"node": "abcdc4570f03657167ba46025677211b27e71444",
"author": "Bobby Holley \u003cbobbyholley@gmail.com\u003e",
"desc": "Bug 1350441 - Make ServoRestyleManager::ClearServoDataFromSubtree a bit smarter. r=heycam\n\nThere's no reason to traverse the entire subtree if we encounter an unstyled section.\n\nMozReview-Commit-ID: 7WeMTI73wR9\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 102,
"line": "    MOZ_ASSERT(!aElement-\u003eHasDirtyDescendantsForServo());\n",
"lineno": 435,
"revdate": [1490384953.0, 25200]
}, {
"node": "d8cd3f64b530848083e8a6e3d960dbe2c53b200a",
"author": "Hiroyuki Ikezoe \u003chikezoe@mozilla.com\u003e",
"desc": "Bug 1356141 - Don't traverse any elements that needed only for animation-only restyles in normal traversal. r=heycam\n\nBefore this patch, we were setting the dirty descendants bit in animation-only\nrestyles and it triggered unnecessary traversal for elements that does not need\nthe traversal (i.e no need selector matching).\n\nMozReview-Commit-ID: 6pmF3ojVzgb",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 137,
"line": "    MOZ_ASSERT(!aElement-\u003eHasAnimationOnlyDirtyDescendantsForServo());\n",
"lineno": 436,
"revdate": [1497907848.0, -32400]
}, {
"node": "abcdc4570f03657167ba46025677211b27e71444",
"author": "Bobby Holley \u003cbobbyholley@gmail.com\u003e",
"desc": "Bug 1350441 - Make ServoRestyleManager::ClearServoDataFromSubtree a bit smarter. r=heycam\n\nThere's no reason to traverse the entire subtree if we encounter an unstyled section.\n\nMozReview-Commit-ID: 7WeMTI73wR9\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 103,
"line": "    return;\n",
"lineno": 437,
"revdate": [1490384953.0, 25200]
}, {
"node": "abcdc4570f03657167ba46025677211b27e71444",
"author": "Bobby Holley \u003cbobbyholley@gmail.com\u003e",
"desc": "Bug 1350441 - Make ServoRestyleManager::ClearServoDataFromSubtree a bit smarter. r=heycam\n\nThere's no reason to traverse the entire subtree if we encounter an unstyled section.\n\nMozReview-Commit-ID: 7WeMTI73wR9\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 104,
"line": "  }\n",
"lineno": 438,
"revdate": [1490384953.0, 25200]
}, {
"node": "fc55188f14b6819fbf34a425d7af2a2c73ded730",
"author": "Cameron McCormack \u003ccam@mcc.id.au\u003e",
"desc": "Bug 1315894 - Clear dirty bits on entire subtree when stopping in RecreateStyleContexts due to no frame or ReconstructFrame hint. r=emilio\n\nMozReview-Commit-ID: 5ch5gtOn0Zr",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 80,
"line": "\n",
"lineno": 439,
"revdate": [1478672758.0, -28800]
}, {
"node": "7c852ac4acf83d5d1776e98a6af36193bd97a9e5",
"author": "Bobby Holley \u003cbobbyholley@gmail.com\u003e",
"desc": "Bug 1317016 - Basic infrastructure for RestyleHint-driven traversal. r=emilio\n\nMozReview-Commit-ID: 7wH5XcILVmX\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 91,
"line": "  StyleChildrenIterator it(aElement);\n",
"lineno": 440,
"revdate": [1478067084.0, 25200]
}, {
"node": "7c852ac4acf83d5d1776e98a6af36193bd97a9e5",
"author": "Bobby Holley \u003cbobbyholley@gmail.com\u003e",
"desc": "Bug 1317016 - Basic infrastructure for RestyleHint-driven traversal. r=emilio\n\nMozReview-Commit-ID: 7wH5XcILVmX\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 92,
"line": "  for (nsIContent* n = it.GetNextChild(); n; n = it.GetNextChild()) {\n",
"lineno": 441,
"revdate": [1478067084.0, 25200]
}, {
"node": "7c852ac4acf83d5d1776e98a6af36193bd97a9e5",
"author": "Bobby Holley \u003cbobbyholley@gmail.com\u003e",
"desc": "Bug 1317016 - Basic infrastructure for RestyleHint-driven traversal. r=emilio\n\nMozReview-Commit-ID: 7wH5XcILVmX\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 93,
"line": "    if (n-\u003eIsElement()) {\n",
"lineno": 442,
"revdate": [1478067084.0, 25200]
}, {
"node": "50ccf635c7319e78dc7366a3b160ebd27674e679",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1422654: stylo: Avoid restyling XBL-bound element if the binding doesn't have stylesheets. r=heycam\n\nMozReview-Commit-ID: An2McUbpCLk",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 441,
"line": "      ClearServoDataFromSubtree(n-\u003eAsElement(), IncludeRoot::Yes);\n",
"lineno": 443,
"revdate": [1512352074.0, -3600]
}, {
"node": "fc55188f14b6819fbf34a425d7af2a2c73ded730",
"author": "Cameron McCormack \u003ccam@mcc.id.au\u003e",
"desc": "Bug 1315894 - Clear dirty bits on entire subtree when stopping in RecreateStyleContexts due to no frame or ReconstructFrame hint. r=emilio\n\nMozReview-Commit-ID: 5ch5gtOn0Zr",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 87,
"line": "    }\n",
"lineno": 444,
"revdate": [1478672758.0, -28800]
}, {
"node": "fc55188f14b6819fbf34a425d7af2a2c73ded730",
"author": "Cameron McCormack \u003ccam@mcc.id.au\u003e",
"desc": "Bug 1315894 - Clear dirty bits on entire subtree when stopping in RecreateStyleContexts due to no frame or ReconstructFrame hint. r=emilio\n\nMozReview-Commit-ID: 5ch5gtOn0Zr",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 88,
"line": "  }\n",
"lineno": 445,
"revdate": [1478672758.0, -28800]
}, {
"node": "7c852ac4acf83d5d1776e98a6af36193bd97a9e5",
"author": "Bobby Holley \u003cbobbyholley@gmail.com\u003e",
"desc": "Bug 1317016 - Basic infrastructure for RestyleHint-driven traversal. r=emilio\n\nMozReview-Commit-ID: 7wH5XcILVmX\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 97,
"line": "\n",
"lineno": 446,
"revdate": [1478067084.0, 25200]
}, {
"node": "50ccf635c7319e78dc7366a3b160ebd27674e679",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1422654: stylo: Avoid restyling XBL-bound element if the binding doesn't have stylesheets. r=heycam\n\nMozReview-Commit-ID: An2McUbpCLk",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 445,
"line": "  if (MOZ_LIKELY(aIncludeRoot == IncludeRoot::Yes)) {\n",
"lineno": 447,
"revdate": [1512352074.0, -3600]
}, {
"node": "50ccf635c7319e78dc7366a3b160ebd27674e679",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1422654: stylo: Avoid restyling XBL-bound element if the binding doesn't have stylesheets. r=heycam\n\nMozReview-Commit-ID: An2McUbpCLk",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 446,
"line": "    aElement-\u003eClearServoData();\n",
"lineno": 448,
"revdate": [1512352074.0, -3600]
}, {
"node": "50ccf635c7319e78dc7366a3b160ebd27674e679",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1422654: stylo: Avoid restyling XBL-bound element if the binding doesn't have stylesheets. r=heycam\n\nMozReview-Commit-ID: An2McUbpCLk",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 447,
"line": "  }\n",
"lineno": 449,
"revdate": [1512352074.0, -3600]
}, {
"node": "fc55188f14b6819fbf34a425d7af2a2c73ded730",
"author": "Cameron McCormack \u003ccam@mcc.id.au\u003e",
"desc": "Bug 1315894 - Clear dirty bits on entire subtree when stopping in RecreateStyleContexts due to no frame or ReconstructFrame hint. r=emilio\n\nMozReview-Commit-ID: 5ch5gtOn0Zr",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 89,
"line": "}\n",
"lineno": 450,
"revdate": [1478672758.0, -28800]
}, {
"node": "fc55188f14b6819fbf34a425d7af2a2c73ded730",
"author": "Cameron McCormack \u003ccam@mcc.id.au\u003e",
"desc": "Bug 1315894 - Clear dirty bits on entire subtree when stopping in RecreateStyleContexts due to no frame or ReconstructFrame hint. r=emilio\n\nMozReview-Commit-ID: 5ch5gtOn0Zr",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 90,
"line": "\n",
"lineno": 451,
"revdate": [1478672758.0, -28800]
}, {
"node": "e3afa3f3c4b2e62325f644ce5a8b92fa4de2b52b",
"author": "Bobby Holley \u003cbobbyholley@gmail.com\u003e",
"desc": "Bug 1350115 - Squelch post-traversal generated by additional animation traversals when we're styling a fresh subtree. r=heycam,r=birtles\n\nThis patch exists to avoid a crash in layout/style/test/test_animations.html. We end up\ngenerating some ::before content, which causes us to style the new subtree at [1]. In\nStyleNewSubtree, we fail the !postTraversalRequired assertion because\nPrepareAndTraverseSubtree decided to traverse the tree twice (once to style it, and again\nto restyle it for animations), and return that a post-traversal is needed.\n\nThe reason this issue happens with my NAC patches and not without is that we were previously\nfiltering out generated ::before content from the servo traversal, so the servo traversal\nwouldn't have reached it and (presumably) the animation restyle wouldn't have happened and\nwe wouldn't have returned true for needing a post-traversal.\n\n[1] http://searchfox.org/mozilla-central/rev/c48398abd9f0f074c69f2223260939e30e8f99a8/layout/base/nsCSSFrameConstructor.cpp#1918\n\nMozReview-Commit-ID: 8tgzLjV8B3A\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 114,
"line": "/* static */ void\n",
"lineno": 452,
"revdate": [1490307678.0, 25200]
}, {
"node": "e3afa3f3c4b2e62325f644ce5a8b92fa4de2b52b",
"author": "Bobby Holley \u003cbobbyholley@gmail.com\u003e",
"desc": "Bug 1350115 - Squelch post-traversal generated by additional animation traversals when we're styling a fresh subtree. r=heycam,r=birtles\n\nThis patch exists to avoid a crash in layout/style/test/test_animations.html. We end up\ngenerating some ::before content, which causes us to style the new subtree at [1]. In\nStyleNewSubtree, we fail the !postTraversalRequired assertion because\nPrepareAndTraverseSubtree decided to traverse the tree twice (once to style it, and again\nto restyle it for animations), and return that a post-traversal is needed.\n\nThe reason this issue happens with my NAC patches and not without is that we were previously\nfiltering out generated ::before content from the servo traversal, so the servo traversal\nwouldn't have reached it and (presumably) the animation restyle wouldn't have happened and\nwe wouldn't have returned true for needing a post-traversal.\n\n[1] http://searchfox.org/mozilla-central/rev/c48398abd9f0f074c69f2223260939e30e8f99a8/layout/base/nsCSSFrameConstructor.cpp#1918\n\nMozReview-Commit-ID: 8tgzLjV8B3A\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 115,
"line": "ServoRestyleManager::ClearRestyleStateFromSubtree(Element* aElement)\n",
"lineno": 453,
"revdate": [1490307678.0, 25200]
}, {
"node": "d8bea653cdb7567dd59b76f0d5f6ad8aa334c13a",
"author": "Cameron McCormack \u003ccam@mcc.id.au\u003e",
"desc": "Bug 1318238 - Clear all ServoNodeData during style set shutdown. r=bholley\n\nMozReview-Commit-ID: 9MvBTAWeawC",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 93,
"line": "{\n",
"lineno": 454,
"revdate": [1479459250.0, -28800]
}, {
"node": "8d4f4b54141ac107d52688bf2b4392e860ab554d",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1403615: Also follow the NODE_DESCENDANTS_NEED_FRAMES bit in ClearRestyleStateFromSubtree. r=bholley\n\nWe don't follow this bit intentionally because we know that even if it's set,\nwhen none of the other two bits are set there are no other restyle / change\nhints down the tree.\n\nWe rely on the frame constructor to clean the mess up, though, and it doesn't\nreally do a good work about it.\n\nIn particular, the case we're hitting on the test-case is:\n\n\u003cbody descendant-need-frames change=reconstruct style=\"display: table-column-group\"\u003e\n  \u003cdiv descendant-need-frames\u003e\n    \u003cdiv descendant-need-frames\u003e\n      \u003cspan needs-frame\u003e\u003c/span\u003e\n    \u003c/div\u003e\n  \u003c/div\u003e\n\u003c/body\u003e\n\nWhen we see we need to reconstruct the body, we call\nClearRestyleStateFromSubtree, but that doesn't do much now, since we don't\nfollow the descendant-need-frames bits.\n\nThen, when we reconstruct the content, we arrive at[1] when constructing the\nfirst child \u003cdiv\u003e. The \u003cdiv\u003e flags have been cleared, but not the children's!\n\nThen a text-node is inserted in a \u003cdiv\u003e, breaking all sorts of invariants.\n\nThis is the easiest fix. Other fixes include clearing the flags on\nSetAsUndisplayedContent. But that implies not clearing them in\nShouldCreateItemsForChild, and doing that somewhere more sensible.\n\nI suspect it's not too hard, but that's a slightly more risky change, will do it\nif you prefer it.\n\n[1]: http://searchfox.org/mozilla-central/rev/3dbb47302e114219c53e99ebaf50c5cb727358ab/layout/base/nsCSSFrameConstructor.cpp#6092\n\nMozReview-Commit-ID: 7026wkQLQkz\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 418,
"line": "  if (aElement-\u003eHasAnyOfFlags(Element::kAllServoDescendantBits)) {\n",
"lineno": 455,
"revdate": [1506532752.0, -7200]
}, {
"node": "086f36cc278fe6f6cd4fa023dcda4b31950f1d5b",
"author": "Bobby Holley \u003cbobbyholley@gmail.com\u003e",
"desc": "Bug 1343128 - Don't leave stale change hints and other restyle data hanging around in reconstructed subtrees. r=emilio\n\nMozReview-Commit-ID: 4BIvC6lPUmF\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 128,
"line": "    StyleChildrenIterator it(aElement);\n",
"lineno": 456,
"revdate": [1488248968.0, 28800]
}, {
"node": "086f36cc278fe6f6cd4fa023dcda4b31950f1d5b",
"author": "Bobby Holley \u003cbobbyholley@gmail.com\u003e",
"desc": "Bug 1343128 - Don't leave stale change hints and other restyle data hanging around in reconstructed subtrees. r=emilio\n\nMozReview-Commit-ID: 4BIvC6lPUmF\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 129,
"line": "    for (nsIContent* n = it.GetNextChild(); n; n = it.GetNextChild()) {\n",
"lineno": 457,
"revdate": [1488248968.0, 28800]
}, {
"node": "086f36cc278fe6f6cd4fa023dcda4b31950f1d5b",
"author": "Bobby Holley \u003cbobbyholley@gmail.com\u003e",
"desc": "Bug 1343128 - Don't leave stale change hints and other restyle data hanging around in reconstructed subtrees. r=emilio\n\nMozReview-Commit-ID: 4BIvC6lPUmF\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 130,
"line": "      if (n-\u003eIsElement()) {\n",
"lineno": 458,
"revdate": [1488248968.0, 28800]
}, {
"node": "086f36cc278fe6f6cd4fa023dcda4b31950f1d5b",
"author": "Bobby Holley \u003cbobbyholley@gmail.com\u003e",
"desc": "Bug 1343128 - Don't leave stale change hints and other restyle data hanging around in reconstructed subtrees. r=emilio\n\nMozReview-Commit-ID: 4BIvC6lPUmF\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 131,
"line": "        ClearRestyleStateFromSubtree(n-\u003eAsElement());\n",
"lineno": 459,
"revdate": [1488248968.0, 28800]
}, {
"node": "086f36cc278fe6f6cd4fa023dcda4b31950f1d5b",
"author": "Bobby Holley \u003cbobbyholley@gmail.com\u003e",
"desc": "Bug 1343128 - Don't leave stale change hints and other restyle data hanging around in reconstructed subtrees. r=emilio\n\nMozReview-Commit-ID: 4BIvC6lPUmF\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 132,
"line": "      }\n",
"lineno": 460,
"revdate": [1488248968.0, 28800]
}, {
"node": "7c852ac4acf83d5d1776e98a6af36193bd97a9e5",
"author": "Bobby Holley \u003cbobbyholley@gmail.com\u003e",
"desc": "Bug 1317016 - Basic infrastructure for RestyleHint-driven traversal. r=emilio\n\nMozReview-Commit-ID: 7wH5XcILVmX\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 108,
"line": "    }\n",
"lineno": 461,
"revdate": [1478067084.0, 25200]
}, {
"node": "7c852ac4acf83d5d1776e98a6af36193bd97a9e5",
"author": "Bobby Holley \u003cbobbyholley@gmail.com\u003e",
"desc": "Bug 1317016 - Basic infrastructure for RestyleHint-driven traversal. r=emilio\n\nMozReview-Commit-ID: 7wH5XcILVmX\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 109,
"line": "  }\n",
"lineno": 462,
"revdate": [1478067084.0, 25200]
}, {
"node": "d8bea653cdb7567dd59b76f0d5f6ad8aa334c13a",
"author": "Cameron McCormack \u003ccam@mcc.id.au\u003e",
"desc": "Bug 1318238 - Clear all ServoNodeData during style set shutdown. r=bholley\n\nMozReview-Commit-ID: 9MvBTAWeawC",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 97,
"line": "\n",
"lineno": 463,
"revdate": [1479459250.0, -28800]
}, {
"node": "827b15ee4c8d1a72ea7d2c43e6a47c3c3d8853ec",
"author": "Hiroyuki Ikezoe \u003chikezoe@mozilla.com\u003e",
"desc": "Bug 1371450 - Recreate style context only if the element was restyled during the traversal. r=emilio\n\nMozReview-Commit-ID: CBYTB5FeikP",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 253,
"line": "  bool wasRestyled;\n",
"lineno": 464,
"revdate": [1500092171.0, -32400]
}, {
"node": "cbacd472fc222e2f865b5e6c944fbd09e188eb89",
"author": "Hiroyuki Ikezoe \u003chikezoe@mozilla.com\u003e",
"desc": "Bug 1388031 - Cleanup code that was used for verifying styling results for throttled animation flush in post traversal. r=bholley\n\nNow that we do process normal traversal even in the case of throttled animation\nflush so that we don't need to do special handling for the case.\n\nNote about the comment in has_current_styles():\nthe remaining animation hints is not caused by either this patch or the\nprevious patch in this patch series, it's been there in the first place, but\nit should be fixed somehow later. See bug 1389675.\n\nMozReview-Commit-ID: JojHufxNCiS\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 425,
"line": "  Unused \u003c\u003c Servo_TakeChangeHint(aElement, &wasRestyled);\n",
"lineno": 465,
"revdate": [1502481332.0, 25200]
}, {
"node": "86b793bcbcd090a4189814f14204a2e0ea7929ef",
"author": "Bobby Holley \u003cbobbyholley@gmail.com\u003e",
"desc": "Bug 1383332 - Track the restyle root and use it to do less work during the traversal. r=emilio\n\nMozReview-Commit-ID: A8O3JOpsv4E\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 426,
"line": "  aElement-\u003eUnsetFlags(Element::kAllServoDescendantBits);\n",
"lineno": 466,
"revdate": [1500428327.0, 25200]
}, {
"node": "d8bea653cdb7567dd59b76f0d5f6ad8aa334c13a",
"author": "Cameron McCormack \u003ccam@mcc.id.au\u003e",
"desc": "Bug 1318238 - Clear all ServoNodeData during style set shutdown. r=bholley\n\nMozReview-Commit-ID: 9MvBTAWeawC",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 102,
"line": "}\n",
"lineno": 467,
"revdate": [1479459250.0, -28800]
}, {
"node": "d8bea653cdb7567dd59b76f0d5f6ad8aa334c13a",
"author": "Cameron McCormack \u003ccam@mcc.id.au\u003e",
"desc": "Bug 1318238 - Clear all ServoNodeData during style set shutdown. r=bholley\n\nMozReview-Commit-ID: 9MvBTAWeawC",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 103,
"line": "\n",
"lineno": 468,
"revdate": [1479459250.0, -28800]
}, {
"node": "558c843afbd35b6a15d3dbe397048bf0e772f779",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1351339: Compute text style changes when the parent is a display: contents element. r=heycam\n\nMozReview-Commit-ID: GWPNevfP4xc",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 137,
"line": "/**\n",
"lineno": 469,
"revdate": [1494206203.0, -7200]
}, {
"node": "558c843afbd35b6a15d3dbe397048bf0e772f779",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1351339: Compute text style changes when the parent is a display: contents element. r=heycam\n\nMozReview-Commit-ID: GWPNevfP4xc",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 138,
"line": " * This struct takes care of encapsulating some common state that text nodes may\n",
"lineno": 470,
"revdate": [1494206203.0, -7200]
}, {
"node": "558c843afbd35b6a15d3dbe397048bf0e772f779",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1351339: Compute text style changes when the parent is a display: contents element. r=heycam\n\nMozReview-Commit-ID: GWPNevfP4xc",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 139,
"line": " * need to track during the post-traversal.\n",
"lineno": 471,
"revdate": [1494206203.0, -7200]
}, {
"node": "558c843afbd35b6a15d3dbe397048bf0e772f779",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1351339: Compute text style changes when the parent is a display: contents element. r=heycam\n\nMozReview-Commit-ID: GWPNevfP4xc",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 140,
"line": " *\n",
"lineno": 472,
"revdate": [1494206203.0, -7200]
}, {
"node": "558c843afbd35b6a15d3dbe397048bf0e772f779",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1351339: Compute text style changes when the parent is a display: contents element. r=heycam\n\nMozReview-Commit-ID: GWPNevfP4xc",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 141,
"line": " * This is currently used to properly compute change hints when the parent\n",
"lineno": 473,
"revdate": [1494206203.0, -7200]
}, {
"node": "42e6c5b52136692219158700426222a7ae75659d",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1362991: Compute at most one text style context per element. r=heycam\n\nMozReview-Commit-ID: IDTRk47CsRS",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 142,
"line": " * element of this node is a display: contents node, and also to avoid computing\n",
"lineno": 474,
"revdate": [1494247797.0, -7200]
}, {
"node": "42e6c5b52136692219158700426222a7ae75659d",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1362991: Compute at most one text style context per element. r=heycam\n\nMozReview-Commit-ID: IDTRk47CsRS",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 143,
"line": " * the style for text children more than once per element.\n",
"lineno": 475,
"revdate": [1494247797.0, -7200]
}, {
"node": "558c843afbd35b6a15d3dbe397048bf0e772f779",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1351339: Compute text style changes when the parent is a display: contents element. r=heycam\n\nMozReview-Commit-ID: GWPNevfP4xc",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 143,
"line": " */\n",
"lineno": 476,
"revdate": [1494206203.0, -7200]
}, {
"node": "558c843afbd35b6a15d3dbe397048bf0e772f779",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1351339: Compute text style changes when the parent is a display: contents element. r=heycam\n\nMozReview-Commit-ID: GWPNevfP4xc",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 144,
"line": "struct ServoRestyleManager::TextPostTraversalState\n",
"lineno": 477,
"revdate": [1494206203.0, -7200]
}, {
"node": "558c843afbd35b6a15d3dbe397048bf0e772f779",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1351339: Compute text style changes when the parent is a display: contents element. r=heycam\n\nMozReview-Commit-ID: GWPNevfP4xc",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 145,
"line": "{\n",
"lineno": 478,
"revdate": [1494206203.0, -7200]
}, {
"node": "fdde73cf429c62cd1e712afcc196110f8601cb2a",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1374752: Pack together the StyleSet, ChangeList and handled change hints, and use the latter with anonymous boxes while we're at it. r=heycam\n\nMozReview-Commit-ID: DiWcUwD9po5",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 184,
"line": "public:\n",
"lineno": 479,
"revdate": [1497993687.0, -7200]
}, {
"node": "f9d851dcc3740591e1c7a6bdec1bea8b50a3ef3c",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1392170: Don't call ResolveServoStyle unnecessarily for undisplayed and not restyled stuff. r=heycam\n\nIn particular, this avoids the stupid calls in display: none roots.\n\nThe cache stuff should be unnecessary, but there's still some fishy stuff going\non.\n\nMozReview-Commit-ID: LgnW0k1gmsN",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 440,
"line": "  TextPostTraversalState(Element& aParentElement,\n",
"lineno": 480,
"revdate": [1503488057.0, -7200]
}, {
"node": "f9d851dcc3740591e1c7a6bdec1bea8b50a3ef3c",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1392170: Don't call ResolveServoStyle unnecessarily for undisplayed and not restyled stuff. r=heycam\n\nIn particular, this avoids the stupid calls in display: none roots.\n\nThe cache stuff should be unnecessary, but there's still some fishy stuff going\non.\n\nMozReview-Commit-ID: LgnW0k1gmsN",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 441,
"line": "                         ServoStyleContext* aParentContext,\n",
"lineno": 481,
"revdate": [1503488057.0, -7200]
}, {
"node": "de9ea489717f0027d057e7963577a57e4b2f19db",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1368236: Implement the \"hints handled for descendants\" optimization. r=heycam\n\nMozReview-Commit-ID: D6CCmWbEXTs",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 189,
"line": "                         bool aDisplayContentsParentStyleChanged,\n",
"lineno": 482,
"revdate": [1497363443.0, -7200]
}, {
"node": "fdde73cf429c62cd1e712afcc196110f8601cb2a",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1374752: Pack together the StyleSet, ChangeList and handled change hints, and use the latter with anonymous boxes while we're at it. r=heycam\n\nMozReview-Commit-ID: DiWcUwD9po5",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 187,
"line": "                         ServoRestyleState& aParentRestyleState)\n",
"lineno": 483,
"revdate": [1497993687.0, -7200]
}, {
"node": "f9d851dcc3740591e1c7a6bdec1bea8b50a3ef3c",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1392170: Don't call ResolveServoStyle unnecessarily for undisplayed and not restyled stuff. r=heycam\n\nIn particular, this avoids the stupid calls in display: none roots.\n\nThe cache stuff should be unnecessary, but there's still some fishy stuff going\non.\n\nMozReview-Commit-ID: LgnW0k1gmsN",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 444,
"line": "    : mParentElement(aParentElement)\n",
"lineno": 484,
"revdate": [1503488057.0, -7200]
}, {
"node": "f9d851dcc3740591e1c7a6bdec1bea8b50a3ef3c",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1392170: Don't call ResolveServoStyle unnecessarily for undisplayed and not restyled stuff. r=heycam\n\nIn particular, this avoids the stupid calls in display: none roots.\n\nThe cache stuff should be unnecessary, but there's still some fishy stuff going\non.\n\nMozReview-Commit-ID: LgnW0k1gmsN",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 445,
"line": "    , mParentContext(aParentContext)\n",
"lineno": 485,
"revdate": [1503488057.0, -7200]
}, {
"node": "fdde73cf429c62cd1e712afcc196110f8601cb2a",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1374752: Pack together the StyleSet, ChangeList and handled change hints, and use the latter with anonymous boxes while we're at it. r=heycam\n\nMozReview-Commit-ID: DiWcUwD9po5",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 189,
"line": "    , mParentRestyleState(aParentRestyleState)\n",
"lineno": 486,
"revdate": [1497993687.0, -7200]
}, {
"node": "42e6c5b52136692219158700426222a7ae75659d",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1362991: Compute at most one text style context per element. r=heycam\n\nMozReview-Commit-ID: IDTRk47CsRS",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 159,
"line": "    , mStyle(nullptr)\n",
"lineno": 487,
"revdate": [1494247797.0, -7200]
}, {
"node": "42e6c5b52136692219158700426222a7ae75659d",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1362991: Compute at most one text style context per element. r=heycam\n\nMozReview-Commit-ID: IDTRk47CsRS",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 160,
"line": "    , mShouldPostHints(aDisplayContentsParentStyleChanged)\n",
"lineno": 488,
"revdate": [1494247797.0, -7200]
}, {
"node": "558c843afbd35b6a15d3dbe397048bf0e772f779",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1351339: Compute text style changes when the parent is a display: contents element. r=heycam\n\nMozReview-Commit-ID: GWPNevfP4xc",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 152,
"line": "    , mShouldComputeHints(aDisplayContentsParentStyleChanged)\n",
"lineno": 489,
"revdate": [1494206203.0, -7200]
}, {
"node": "558c843afbd35b6a15d3dbe397048bf0e772f779",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1351339: Compute text style changes when the parent is a display: contents element. r=heycam\n\nMozReview-Commit-ID: GWPNevfP4xc",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 153,
"line": "    , mComputedHint(nsChangeHint_Empty)\n",
"lineno": 490,
"revdate": [1494206203.0, -7200]
}, {
"node": "558c843afbd35b6a15d3dbe397048bf0e772f779",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1351339: Compute text style changes when the parent is a display: contents element. r=heycam\n\nMozReview-Commit-ID: GWPNevfP4xc",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 154,
"line": "  {}\n",
"lineno": 491,
"revdate": [1494206203.0, -7200]
}, {
"node": "558c843afbd35b6a15d3dbe397048bf0e772f779",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1351339: Compute text style changes when the parent is a display: contents element. r=heycam\n\nMozReview-Commit-ID: GWPNevfP4xc",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 155,
"line": "\n",
"lineno": 492,
"revdate": [1494206203.0, -7200]
}, {
"node": "fdde73cf429c62cd1e712afcc196110f8601cb2a",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1374752: Pack together the StyleSet, ChangeList and handled change hints, and use the latter with anonymous boxes while we're at it. r=heycam\n\nMozReview-Commit-ID: DiWcUwD9po5",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 196,
"line": "  nsStyleChangeList& ChangeList() { return mParentRestyleState.ChangeList(); }\n",
"lineno": 493,
"revdate": [1497993687.0, -7200]
}, {
"node": "fdde73cf429c62cd1e712afcc196110f8601cb2a",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1374752: Pack together the StyleSet, ChangeList and handled change hints, and use the latter with anonymous boxes while we're at it. r=heycam\n\nMozReview-Commit-ID: DiWcUwD9po5",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 197,
"line": "\n",
"lineno": 494,
"revdate": [1497993687.0, -7200]
}, {
"node": "42e6c5b52136692219158700426222a7ae75659d",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1362991: Compute at most one text style context per element. r=heycam\n\nMozReview-Commit-ID: IDTRk47CsRS",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 165,
"line": "  nsStyleContext& ComputeStyle(nsIContent* aTextNode)\n",
"lineno": 495,
"revdate": [1494247797.0, -7200]
}, {
"node": "42e6c5b52136692219158700426222a7ae75659d",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1362991: Compute at most one text style context per element. r=heycam\n\nMozReview-Commit-ID: IDTRk47CsRS",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 166,
"line": "  {\n",
"lineno": 496,
"revdate": [1494247797.0, -7200]
}, {
"node": "42e6c5b52136692219158700426222a7ae75659d",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1362991: Compute at most one text style context per element. r=heycam\n\nMozReview-Commit-ID: IDTRk47CsRS",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 167,
"line": "    if (!mStyle) {\n",
"lineno": 497,
"revdate": [1494247797.0, -7200]
}, {
"node": "fdde73cf429c62cd1e712afcc196110f8601cb2a",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1374752: Pack together the StyleSet, ChangeList and handled change hints, and use the latter with anonymous boxes while we're at it. r=heycam\n\nMozReview-Commit-ID: DiWcUwD9po5",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 201,
"line": "      mStyle = mParentRestyleState.StyleSet().ResolveStyleForText(\n",
"lineno": 498,
"revdate": [1497993687.0, -7200]
}, {
"node": "f9d851dcc3740591e1c7a6bdec1bea8b50a3ef3c",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1392170: Don't call ResolveServoStyle unnecessarily for undisplayed and not restyled stuff. r=heycam\n\nIn particular, this avoids the stupid calls in display: none roots.\n\nThe cache stuff should be unnecessary, but there's still some fishy stuff going\non.\n\nMozReview-Commit-ID: LgnW0k1gmsN",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 459,
"line": "        aTextNode, &ParentStyle());\n",
"lineno": 499,
"revdate": [1503488057.0, -7200]
}, {
"node": "42e6c5b52136692219158700426222a7ae75659d",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1362991: Compute at most one text style context per element. r=heycam\n\nMozReview-Commit-ID: IDTRk47CsRS",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 169,
"line": "    }\n",
"lineno": 500,
"revdate": [1494247797.0, -7200]
}, {
"node": "42e6c5b52136692219158700426222a7ae75659d",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1362991: Compute at most one text style context per element. r=heycam\n\nMozReview-Commit-ID: IDTRk47CsRS",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 170,
"line": "    MOZ_ASSERT(mStyle);\n",
"lineno": 501,
"revdate": [1494247797.0, -7200]
}, {
"node": "42e6c5b52136692219158700426222a7ae75659d",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1362991: Compute at most one text style context per element. r=heycam\n\nMozReview-Commit-ID: IDTRk47CsRS",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 171,
"line": "    return *mStyle;\n",
"lineno": 502,
"revdate": [1494247797.0, -7200]
}, {
"node": "42e6c5b52136692219158700426222a7ae75659d",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1362991: Compute at most one text style context per element. r=heycam\n\nMozReview-Commit-ID: IDTRk47CsRS",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 172,
"line": "  }\n",
"lineno": 503,
"revdate": [1494247797.0, -7200]
}, {
"node": "42e6c5b52136692219158700426222a7ae75659d",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1362991: Compute at most one text style context per element. r=heycam\n\nMozReview-Commit-ID: IDTRk47CsRS",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 173,
"line": "\n",
"lineno": 504,
"revdate": [1494247797.0, -7200]
}, {
"node": "558c843afbd35b6a15d3dbe397048bf0e772f779",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1351339: Compute text style changes when the parent is a display: contents element. r=heycam\n\nMozReview-Commit-ID: GWPNevfP4xc",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 156,
"line": "  void ComputeHintIfNeeded(nsIContent* aContent,\n",
"lineno": 505,
"revdate": [1494206203.0, -7200]
}, {
"node": "558c843afbd35b6a15d3dbe397048bf0e772f779",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1351339: Compute text style changes when the parent is a display: contents element. r=heycam\n\nMozReview-Commit-ID: GWPNevfP4xc",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 157,
"line": "                           nsIFrame* aTextFrame,\n",
"lineno": 506,
"revdate": [1494206203.0, -7200]
}, {
"node": "fdde73cf429c62cd1e712afcc196110f8601cb2a",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1374752: Pack together the StyleSet, ChangeList and handled change hints, and use the latter with anonymous boxes while we're at it. r=heycam\n\nMozReview-Commit-ID: DiWcUwD9po5",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 210,
"line": "                           nsStyleContext& aNewContext)\n",
"lineno": 507,
"revdate": [1497993687.0, -7200]
}, {
"node": "558c843afbd35b6a15d3dbe397048bf0e772f779",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1351339: Compute text style changes when the parent is a display: contents element. r=heycam\n\nMozReview-Commit-ID: GWPNevfP4xc",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 160,
"line": "  {\n",
"lineno": 508,
"revdate": [1494206203.0, -7200]
}, {
"node": "558c843afbd35b6a15d3dbe397048bf0e772f779",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1351339: Compute text style changes when the parent is a display: contents element. r=heycam\n\nMozReview-Commit-ID: GWPNevfP4xc",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 161,
"line": "    MOZ_ASSERT(aTextFrame);\n",
"lineno": 509,
"revdate": [1494206203.0, -7200]
}, {
"node": "558c843afbd35b6a15d3dbe397048bf0e772f779",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1351339: Compute text style changes when the parent is a display: contents element. r=heycam\n\nMozReview-Commit-ID: GWPNevfP4xc",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 162,
"line": "    MOZ_ASSERT(aNewContext.GetPseudo() == nsCSSAnonBoxes::mozText);\n",
"lineno": 510,
"revdate": [1494206203.0, -7200]
}, {
"node": "558c843afbd35b6a15d3dbe397048bf0e772f779",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1351339: Compute text style changes when the parent is a display: contents element. r=heycam\n\nMozReview-Commit-ID: GWPNevfP4xc",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 163,
"line": "\n",
"lineno": 511,
"revdate": [1494206203.0, -7200]
}, {
"node": "558c843afbd35b6a15d3dbe397048bf0e772f779",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1351339: Compute text style changes when the parent is a display: contents element. r=heycam\n\nMozReview-Commit-ID: GWPNevfP4xc",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 164,
"line": "    if (MOZ_LIKELY(!mShouldPostHints)) {\n",
"lineno": 512,
"revdate": [1494206203.0, -7200]
}, {
"node": "558c843afbd35b6a15d3dbe397048bf0e772f779",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1351339: Compute text style changes when the parent is a display: contents element. r=heycam\n\nMozReview-Commit-ID: GWPNevfP4xc",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 165,
"line": "      return;\n",
"lineno": 513,
"revdate": [1494206203.0, -7200]
}, {
"node": "558c843afbd35b6a15d3dbe397048bf0e772f779",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1351339: Compute text style changes when the parent is a display: contents element. r=heycam\n\nMozReview-Commit-ID: GWPNevfP4xc",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 166,
"line": "    }\n",
"lineno": 514,
"revdate": [1494206203.0, -7200]
}, {
"node": "558c843afbd35b6a15d3dbe397048bf0e772f779",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1351339: Compute text style changes when the parent is a display: contents element. r=heycam\n\nMozReview-Commit-ID: GWPNevfP4xc",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 167,
"line": "\n",
"lineno": 515,
"revdate": [1494206203.0, -7200]
}, {
"node": "4d5e5d40c7ee04bba9fc8b96322a9aa10c220107",
"author": "Manish Goregaokar \u003cmanishearth@gmail.com\u003e",
"desc": "Bug 1367904 - Part 11: stylo: Use ServoStyleContext in ServoStyleSet/ServoRestyleManager; r=bholley\n\nMozReview-Commit-ID: JJOBixTSCZq\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 308,
"line": "    ServoStyleContext* oldContext = aTextFrame-\u003eStyleContext()-\u003eAsServo();\n",
"lineno": 516,
"revdate": [1500316924.0, 25200]
}, {
"node": "558c843afbd35b6a15d3dbe397048bf0e772f779",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1351339: Compute text style changes when the parent is a display: contents element. r=heycam\n\nMozReview-Commit-ID: GWPNevfP4xc",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 169,
"line": "    MOZ_ASSERT(oldContext-\u003eGetPseudo() == nsCSSAnonBoxes::mozText);\n",
"lineno": 517,
"revdate": [1494206203.0, -7200]
}, {
"node": "558c843afbd35b6a15d3dbe397048bf0e772f779",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1351339: Compute text style changes when the parent is a display: contents element. r=heycam\n\nMozReview-Commit-ID: GWPNevfP4xc",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 170,
"line": "\n",
"lineno": 518,
"revdate": [1494206203.0, -7200]
}, {
"node": "558c843afbd35b6a15d3dbe397048bf0e772f779",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1351339: Compute text style changes when the parent is a display: contents element. r=heycam\n\nMozReview-Commit-ID: GWPNevfP4xc",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 171,
"line": "    // We rely on the fact that all the text children for the same element share\n",
"lineno": 519,
"revdate": [1494206203.0, -7200]
}, {
"node": "558c843afbd35b6a15d3dbe397048bf0e772f779",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1351339: Compute text style changes when the parent is a display: contents element. r=heycam\n\nMozReview-Commit-ID: GWPNevfP4xc",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 172,
"line": "    // style to avoid recomputing style differences for all of them.\n",
"lineno": 520,
"revdate": [1494206203.0, -7200]
}, {
"node": "558c843afbd35b6a15d3dbe397048bf0e772f779",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1351339: Compute text style changes when the parent is a display: contents element. r=heycam\n\nMozReview-Commit-ID: GWPNevfP4xc",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 173,
"line": "    //\n",
"lineno": 521,
"revdate": [1494206203.0, -7200]
}, {
"node": "558c843afbd35b6a15d3dbe397048bf0e772f779",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1351339: Compute text style changes when the parent is a display: contents element. r=heycam\n\nMozReview-Commit-ID: GWPNevfP4xc",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 174,
"line": "    // TODO(emilio): The above may not be true for ::first-{line,letter}, but\n",
"lineno": 522,
"revdate": [1494206203.0, -7200]
}, {
"node": "558c843afbd35b6a15d3dbe397048bf0e772f779",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1351339: Compute text style changes when the parent is a display: contents element. r=heycam\n\nMozReview-Commit-ID: GWPNevfP4xc",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 175,
"line": "    // we'll cross that bridge when we support those in stylo.\n",
"lineno": 523,
"revdate": [1494206203.0, -7200]
}, {
"node": "558c843afbd35b6a15d3dbe397048bf0e772f779",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1351339: Compute text style changes when the parent is a display: contents element. r=heycam\n\nMozReview-Commit-ID: GWPNevfP4xc",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 178,
"line": "    if (mShouldComputeHints) {\n",
"lineno": 524,
"revdate": [1494206203.0, -7200]
}, {
"node": "558c843afbd35b6a15d3dbe397048bf0e772f779",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1351339: Compute text style changes when the parent is a display: contents element. r=heycam\n\nMozReview-Commit-ID: GWPNevfP4xc",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 179,
"line": "      mShouldComputeHints = false;\n",
"lineno": 525,
"revdate": [1494206203.0, -7200]
}, {
"node": "558c843afbd35b6a15d3dbe397048bf0e772f779",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1351339: Compute text style changes when the parent is a display: contents element. r=heycam\n\nMozReview-Commit-ID: GWPNevfP4xc",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 180,
"line": "      uint32_t equalStructs, samePointerStructs;\n",
"lineno": 526,
"revdate": [1494206203.0, -7200]
}, {
"node": "558c843afbd35b6a15d3dbe397048bf0e772f779",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1351339: Compute text style changes when the parent is a display: contents element. r=heycam\n\nMozReview-Commit-ID: GWPNevfP4xc",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 181,
"line": "      mComputedHint =\n",
"lineno": 527,
"revdate": [1494206203.0, -7200]
}, {
"node": "558c843afbd35b6a15d3dbe397048bf0e772f779",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1351339: Compute text style changes when the parent is a display: contents element. r=heycam\n\nMozReview-Commit-ID: GWPNevfP4xc",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 182,
"line": "        oldContext-\u003eCalcStyleDifference(&aNewContext,\n",
"lineno": 528,
"revdate": [1494206203.0, -7200]
}, {
"node": "558c843afbd35b6a15d3dbe397048bf0e772f779",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1351339: Compute text style changes when the parent is a display: contents element. r=heycam\n\nMozReview-Commit-ID: GWPNevfP4xc",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 183,
"line": "                                        &equalStructs,\n",
"lineno": 529,
"revdate": [1494206203.0, -7200]
}, {
"node": "558c843afbd35b6a15d3dbe397048bf0e772f779",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1351339: Compute text style changes when the parent is a display: contents element. r=heycam\n\nMozReview-Commit-ID: GWPNevfP4xc",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 184,
"line": "                                        &samePointerStructs);\n",
"lineno": 530,
"revdate": [1494206203.0, -7200]
}, {
"node": "fdde73cf429c62cd1e712afcc196110f8601cb2a",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1374752: Pack together the StyleSet, ChangeList and handled change hints, and use the latter with anonymous boxes while we're at it. r=heycam\n\nMozReview-Commit-ID: DiWcUwD9po5",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 234,
"line": "      mComputedHint = NS_RemoveSubsumedHints(\n",
"lineno": 531,
"revdate": [1497993687.0, -7200]
}, {
"node": "1b05406b224819cfc636963bc9e0df0f04a92d7f",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1375674: Track the owner that represents the changes handled, and fix a bunch of issues while at it. r=heycam\n\nIn particular, this fixes:\n\n * Restyling of \u003carea\u003e elements that reuse the primary frame mapping for the\n   image map.\n\n * Restyling of children of display: contents elements when the display:\n   contents element generates a hint.\n\n * Restyling of out-of-flows (if my analysis in the bug is right).\n\n * Restyling of the ::backdrop pseudo-element.\n\n * Restyling of the Viewport frame.\n\nI only managed to do a reftest for the second one, but the rest of them are\ncovered by the assertions added.\n\nMozReview-Commit-ID: E7QtiQ1vPqu",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 319,
"line": "        mComputedHint, mParentRestyleState.ChangesHandledFor(*aTextFrame));\n",
"lineno": 532,
"revdate": [1498239095.0, -7200]
}, {
"node": "558c843afbd35b6a15d3dbe397048bf0e772f779",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1351339: Compute text style changes when the parent is a display: contents element. r=heycam\n\nMozReview-Commit-ID: GWPNevfP4xc",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 185,
"line": "    }\n",
"lineno": 533,
"revdate": [1494206203.0, -7200]
}, {
"node": "558c843afbd35b6a15d3dbe397048bf0e772f779",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1351339: Compute text style changes when the parent is a display: contents element. r=heycam\n\nMozReview-Commit-ID: GWPNevfP4xc",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 186,
"line": "\n",
"lineno": 534,
"revdate": [1494206203.0, -7200]
}, {
"node": "558c843afbd35b6a15d3dbe397048bf0e772f779",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1351339: Compute text style changes when the parent is a display: contents element. r=heycam\n\nMozReview-Commit-ID: GWPNevfP4xc",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 187,
"line": "    if (mComputedHint) {\n",
"lineno": 535,
"revdate": [1494206203.0, -7200]
}, {
"node": "fdde73cf429c62cd1e712afcc196110f8601cb2a",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1374752: Pack together the StyleSet, ChangeList and handled change hints, and use the latter with anonymous boxes while we're at it. r=heycam\n\nMozReview-Commit-ID: DiWcUwD9po5",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 239,
"line": "      mParentRestyleState.ChangeList().AppendChange(\n",
"lineno": 536,
"revdate": [1497993687.0, -7200]
}, {
"node": "fdde73cf429c62cd1e712afcc196110f8601cb2a",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1374752: Pack together the StyleSet, ChangeList and handled change hints, and use the latter with anonymous boxes while we're at it. r=heycam\n\nMozReview-Commit-ID: DiWcUwD9po5",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 240,
"line": "        aTextFrame, aContent, mComputedHint);\n",
"lineno": 537,
"revdate": [1497993687.0, -7200]
}, {
"node": "558c843afbd35b6a15d3dbe397048bf0e772f779",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1351339: Compute text style changes when the parent is a display: contents element. r=heycam\n\nMozReview-Commit-ID: GWPNevfP4xc",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 189,
"line": "    }\n",
"lineno": 538,
"revdate": [1494206203.0, -7200]
}, {
"node": "558c843afbd35b6a15d3dbe397048bf0e772f779",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1351339: Compute text style changes when the parent is a display: contents element. r=heycam\n\nMozReview-Commit-ID: GWPNevfP4xc",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 190,
"line": "  }\n",
"lineno": 539,
"revdate": [1494206203.0, -7200]
}, {
"node": "fdde73cf429c62cd1e712afcc196110f8601cb2a",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1374752: Pack together the StyleSet, ChangeList and handled change hints, and use the latter with anonymous boxes while we're at it. r=heycam\n\nMozReview-Commit-ID: DiWcUwD9po5",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 243,
"line": "\n",
"lineno": 540,
"revdate": [1497993687.0, -7200]
}, {
"node": "fdde73cf429c62cd1e712afcc196110f8601cb2a",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1374752: Pack together the StyleSet, ChangeList and handled change hints, and use the latter with anonymous boxes while we're at it. r=heycam\n\nMozReview-Commit-ID: DiWcUwD9po5",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 244,
"line": "private:\n",
"lineno": 541,
"revdate": [1497993687.0, -7200]
}, {
"node": "f9d851dcc3740591e1c7a6bdec1bea8b50a3ef3c",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1392170: Don't call ResolveServoStyle unnecessarily for undisplayed and not restyled stuff. r=heycam\n\nIn particular, this avoids the stupid calls in display: none roots.\n\nThe cache stuff should be unnecessary, but there's still some fishy stuff going\non.\n\nMozReview-Commit-ID: LgnW0k1gmsN",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 502,
"line": "  ServoStyleContext& ParentStyle() {\n",
"lineno": 542,
"revdate": [1503488057.0, -7200]
}, {
"node": "f9d851dcc3740591e1c7a6bdec1bea8b50a3ef3c",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1392170: Don't call ResolveServoStyle unnecessarily for undisplayed and not restyled stuff. r=heycam\n\nIn particular, this avoids the stupid calls in display: none roots.\n\nThe cache stuff should be unnecessary, but there's still some fishy stuff going\non.\n\nMozReview-Commit-ID: LgnW0k1gmsN",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 503,
"line": "    if (!mParentContext) {\n",
"lineno": 543,
"revdate": [1503488057.0, -7200]
}, {
"node": "f9d851dcc3740591e1c7a6bdec1bea8b50a3ef3c",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1392170: Don't call ResolveServoStyle unnecessarily for undisplayed and not restyled stuff. r=heycam\n\nIn particular, this avoids the stupid calls in display: none roots.\n\nThe cache stuff should be unnecessary, but there's still some fishy stuff going\non.\n\nMozReview-Commit-ID: LgnW0k1gmsN",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 504,
"line": "      mLazilyResolvedParentContext =\n",
"lineno": 544,
"revdate": [1503488057.0, -7200]
}, {
"node": "f9d851dcc3740591e1c7a6bdec1bea8b50a3ef3c",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1392170: Don't call ResolveServoStyle unnecessarily for undisplayed and not restyled stuff. r=heycam\n\nIn particular, this avoids the stupid calls in display: none roots.\n\nThe cache stuff should be unnecessary, but there's still some fishy stuff going\non.\n\nMozReview-Commit-ID: LgnW0k1gmsN",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 505,
"line": "        mParentRestyleState.StyleSet().ResolveServoStyle(&mParentElement);\n",
"lineno": 545,
"revdate": [1503488057.0, -7200]
}, {
"node": "f9d851dcc3740591e1c7a6bdec1bea8b50a3ef3c",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1392170: Don't call ResolveServoStyle unnecessarily for undisplayed and not restyled stuff. r=heycam\n\nIn particular, this avoids the stupid calls in display: none roots.\n\nThe cache stuff should be unnecessary, but there's still some fishy stuff going\non.\n\nMozReview-Commit-ID: LgnW0k1gmsN",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 506,
"line": "      mParentContext = mLazilyResolvedParentContext;\n",
"lineno": 546,
"revdate": [1503488057.0, -7200]
}, {
"node": "f9d851dcc3740591e1c7a6bdec1bea8b50a3ef3c",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1392170: Don't call ResolveServoStyle unnecessarily for undisplayed and not restyled stuff. r=heycam\n\nIn particular, this avoids the stupid calls in display: none roots.\n\nThe cache stuff should be unnecessary, but there's still some fishy stuff going\non.\n\nMozReview-Commit-ID: LgnW0k1gmsN",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 507,
"line": "    }\n",
"lineno": 547,
"revdate": [1503488057.0, -7200]
}, {
"node": "f9d851dcc3740591e1c7a6bdec1bea8b50a3ef3c",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1392170: Don't call ResolveServoStyle unnecessarily for undisplayed and not restyled stuff. r=heycam\n\nIn particular, this avoids the stupid calls in display: none roots.\n\nThe cache stuff should be unnecessary, but there's still some fishy stuff going\non.\n\nMozReview-Commit-ID: LgnW0k1gmsN",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 508,
"line": "    return *mParentContext;\n",
"lineno": 548,
"revdate": [1503488057.0, -7200]
}, {
"node": "f9d851dcc3740591e1c7a6bdec1bea8b50a3ef3c",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1392170: Don't call ResolveServoStyle unnecessarily for undisplayed and not restyled stuff. r=heycam\n\nIn particular, this avoids the stupid calls in display: none roots.\n\nThe cache stuff should be unnecessary, but there's still some fishy stuff going\non.\n\nMozReview-Commit-ID: LgnW0k1gmsN",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 509,
"line": "  }\n",
"lineno": 549,
"revdate": [1503488057.0, -7200]
}, {
"node": "f9d851dcc3740591e1c7a6bdec1bea8b50a3ef3c",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1392170: Don't call ResolveServoStyle unnecessarily for undisplayed and not restyled stuff. r=heycam\n\nIn particular, this avoids the stupid calls in display: none roots.\n\nThe cache stuff should be unnecessary, but there's still some fishy stuff going\non.\n\nMozReview-Commit-ID: LgnW0k1gmsN",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 510,
"line": "\n",
"lineno": 550,
"revdate": [1503488057.0, -7200]
}, {
"node": "f9d851dcc3740591e1c7a6bdec1bea8b50a3ef3c",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1392170: Don't call ResolveServoStyle unnecessarily for undisplayed and not restyled stuff. r=heycam\n\nIn particular, this avoids the stupid calls in display: none roots.\n\nThe cache stuff should be unnecessary, but there's still some fishy stuff going\non.\n\nMozReview-Commit-ID: LgnW0k1gmsN",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 511,
"line": "  Element& mParentElement;\n",
"lineno": 551,
"revdate": [1503488057.0, -7200]
}, {
"node": "f9d851dcc3740591e1c7a6bdec1bea8b50a3ef3c",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1392170: Don't call ResolveServoStyle unnecessarily for undisplayed and not restyled stuff. r=heycam\n\nIn particular, this avoids the stupid calls in display: none roots.\n\nThe cache stuff should be unnecessary, but there's still some fishy stuff going\non.\n\nMozReview-Commit-ID: LgnW0k1gmsN",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 512,
"line": "  ServoStyleContext* mParentContext;\n",
"lineno": 552,
"revdate": [1503488057.0, -7200]
}, {
"node": "f9d851dcc3740591e1c7a6bdec1bea8b50a3ef3c",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1392170: Don't call ResolveServoStyle unnecessarily for undisplayed and not restyled stuff. r=heycam\n\nIn particular, this avoids the stupid calls in display: none roots.\n\nThe cache stuff should be unnecessary, but there's still some fishy stuff going\non.\n\nMozReview-Commit-ID: LgnW0k1gmsN",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 513,
"line": "  RefPtr\u003cServoStyleContext\u003e mLazilyResolvedParentContext;\n",
"lineno": 553,
"revdate": [1503488057.0, -7200]
}, {
"node": "fdde73cf429c62cd1e712afcc196110f8601cb2a",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1374752: Pack together the StyleSet, ChangeList and handled change hints, and use the latter with anonymous boxes while we're at it. r=heycam\n\nMozReview-Commit-ID: DiWcUwD9po5",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 246,
"line": "  ServoRestyleState& mParentRestyleState;\n",
"lineno": 554,
"revdate": [1497993687.0, -7200]
}, {
"node": "fdde73cf429c62cd1e712afcc196110f8601cb2a",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1374752: Pack together the StyleSet, ChangeList and handled change hints, and use the latter with anonymous boxes while we're at it. r=heycam\n\nMozReview-Commit-ID: DiWcUwD9po5",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 247,
"line": "  RefPtr\u003cnsStyleContext\u003e mStyle;\n",
"lineno": 555,
"revdate": [1497993687.0, -7200]
}, {
"node": "fdde73cf429c62cd1e712afcc196110f8601cb2a",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1374752: Pack together the StyleSet, ChangeList and handled change hints, and use the latter with anonymous boxes while we're at it. r=heycam\n\nMozReview-Commit-ID: DiWcUwD9po5",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 248,
"line": "  bool mShouldPostHints;\n",
"lineno": 556,
"revdate": [1497993687.0, -7200]
}, {
"node": "fdde73cf429c62cd1e712afcc196110f8601cb2a",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1374752: Pack together the StyleSet, ChangeList and handled change hints, and use the latter with anonymous boxes while we're at it. r=heycam\n\nMozReview-Commit-ID: DiWcUwD9po5",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 249,
"line": "  bool mShouldComputeHints;\n",
"lineno": 557,
"revdate": [1497993687.0, -7200]
}, {
"node": "fdde73cf429c62cd1e712afcc196110f8601cb2a",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1374752: Pack together the StyleSet, ChangeList and handled change hints, and use the latter with anonymous boxes while we're at it. r=heycam\n\nMozReview-Commit-ID: DiWcUwD9po5",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 250,
"line": "  nsChangeHint mComputedHint;\n",
"lineno": 558,
"revdate": [1497993687.0, -7200]
}, {
"node": "558c843afbd35b6a15d3dbe397048bf0e772f779",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1351339: Compute text style changes when the parent is a display: contents element. r=heycam\n\nMozReview-Commit-ID: GWPNevfP4xc",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 191,
"line": "};\n",
"lineno": 559,
"revdate": [1494206203.0, -7200]
}, {
"node": "558c843afbd35b6a15d3dbe397048bf0e772f779",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1351339: Compute text style changes when the parent is a display: contents element. r=heycam\n\nMozReview-Commit-ID: GWPNevfP4xc",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 192,
"line": "\n",
"lineno": 560,
"revdate": [1494206203.0, -7200]
}, {
"node": "09851f5d647eb9f1a1b104f197ed4a107145d8f0",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1364871: Add a function to update frame pseudo-element styles during the post-traversal, and restyle bullet frames. r=heycam\n\nMozReview-Commit-ID: 9m0jqmxjOb6",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 208,
"line": "static void\n",
"lineno": 561,
"revdate": [1495231102.0, -7200]
}, {
"node": "87dac0783b76c8dcf77e6d3b54a306a9a1186906",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1375674: Don't use the owner's changes handled for the backdrop frame. r=heycam\n\nMozReview-Commit-ID: GpIQwqge8L",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 278,
"line": "UpdateBackdropIfNeeded(nsIFrame* aFrame,\n",
"lineno": 562,
"revdate": [1498238780.0, -7200]
}, {
"node": "87dac0783b76c8dcf77e6d3b54a306a9a1186906",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1375674: Don't use the owner's changes handled for the backdrop frame. r=heycam\n\nMozReview-Commit-ID: GpIQwqge8L",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 279,
"line": "                       ServoStyleSet& aStyleSet,\n",
"lineno": 563,
"revdate": [1498238780.0, -7200]
}, {
"node": "87dac0783b76c8dcf77e6d3b54a306a9a1186906",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1375674: Don't use the owner's changes handled for the backdrop frame. r=heycam\n\nMozReview-Commit-ID: GpIQwqge8L",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 280,
"line": "                       nsStyleChangeList& aChangeList)\n",
"lineno": 564,
"revdate": [1498238780.0, -7200]
}, {
"node": "ca5ce34ad1cf84d8744ab12ef35948d0f4baaac2",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1364871: Restyle ::backdrop too. r=heycam\n\nMozReview-Commit-ID: BGWRiaeZiD8",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 230,
"line": "{\n",
"lineno": 565,
"revdate": [1495231163.0, -7200]
}, {
"node": "ca5ce34ad1cf84d8744ab12ef35948d0f4baaac2",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1364871: Restyle ::backdrop too. r=heycam\n\nMozReview-Commit-ID: BGWRiaeZiD8",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 231,
"line": "  const nsStyleDisplay* display = aFrame-\u003eStyleContext()-\u003eStyleDisplay();\n",
"lineno": 566,
"revdate": [1495231163.0, -7200]
}, {
"node": "ca5ce34ad1cf84d8744ab12ef35948d0f4baaac2",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1364871: Restyle ::backdrop too. r=heycam\n\nMozReview-Commit-ID: BGWRiaeZiD8",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 232,
"line": "  if (display-\u003emTopLayer != NS_STYLE_TOP_LAYER_TOP) {\n",
"lineno": 567,
"revdate": [1495231163.0, -7200]
}, {
"node": "ca5ce34ad1cf84d8744ab12ef35948d0f4baaac2",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1364871: Restyle ::backdrop too. r=heycam\n\nMozReview-Commit-ID: BGWRiaeZiD8",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 233,
"line": "    return;\n",
"lineno": 568,
"revdate": [1495231163.0, -7200]
}, {
"node": "ca5ce34ad1cf84d8744ab12ef35948d0f4baaac2",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1364871: Restyle ::backdrop too. r=heycam\n\nMozReview-Commit-ID: BGWRiaeZiD8",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 234,
"line": "  }\n",
"lineno": 569,
"revdate": [1495231163.0, -7200]
}, {
"node": "ca5ce34ad1cf84d8744ab12ef35948d0f4baaac2",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1364871: Restyle ::backdrop too. r=heycam\n\nMozReview-Commit-ID: BGWRiaeZiD8",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 235,
"line": "\n",
"lineno": 570,
"revdate": [1495231163.0, -7200]
}, {
"node": "ca5ce34ad1cf84d8744ab12ef35948d0f4baaac2",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1364871: Restyle ::backdrop too. r=heycam\n\nMozReview-Commit-ID: BGWRiaeZiD8",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 236,
"line": "  // Elements in the top layer are guaranteed to have absolute or fixed\n",
"lineno": 571,
"revdate": [1495231163.0, -7200]
}, {
"node": "ca5ce34ad1cf84d8744ab12ef35948d0f4baaac2",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1364871: Restyle ::backdrop too. r=heycam\n\nMozReview-Commit-ID: BGWRiaeZiD8",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 237,
"line": "  // position per https://fullscreen.spec.whatwg.org/#new-stacking-layer.\n",
"lineno": 572,
"revdate": [1495231163.0, -7200]
}, {
"node": "ca5ce34ad1cf84d8744ab12ef35948d0f4baaac2",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1364871: Restyle ::backdrop too. r=heycam\n\nMozReview-Commit-ID: BGWRiaeZiD8",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 238,
"line": "  MOZ_ASSERT(display-\u003eIsAbsolutelyPositionedStyle());\n",
"lineno": 573,
"revdate": [1495231163.0, -7200]
}, {
"node": "ca5ce34ad1cf84d8744ab12ef35948d0f4baaac2",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1364871: Restyle ::backdrop too. r=heycam\n\nMozReview-Commit-ID: BGWRiaeZiD8",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 239,
"line": "\n",
"lineno": 574,
"revdate": [1495231163.0, -7200]
}, {
"node": "ca5ce34ad1cf84d8744ab12ef35948d0f4baaac2",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1364871: Restyle ::backdrop too. r=heycam\n\nMozReview-Commit-ID: BGWRiaeZiD8",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 240,
"line": "  nsIFrame* backdropPlaceholder =\n",
"lineno": 575,
"revdate": [1495231163.0, -7200]
}, {
"node": "ca5ce34ad1cf84d8744ab12ef35948d0f4baaac2",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1364871: Restyle ::backdrop too. r=heycam\n\nMozReview-Commit-ID: BGWRiaeZiD8",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 241,
"line": "    aFrame-\u003eGetChildList(nsIFrame::kBackdropList).FirstChild();\n",
"lineno": 576,
"revdate": [1495231163.0, -7200]
}, {
"node": "ca5ce34ad1cf84d8744ab12ef35948d0f4baaac2",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1364871: Restyle ::backdrop too. r=heycam\n\nMozReview-Commit-ID: BGWRiaeZiD8",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 242,
"line": "  if (!backdropPlaceholder) {\n",
"lineno": 577,
"revdate": [1495231163.0, -7200]
}, {
"node": "ca5ce34ad1cf84d8744ab12ef35948d0f4baaac2",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1364871: Restyle ::backdrop too. r=heycam\n\nMozReview-Commit-ID: BGWRiaeZiD8",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 243,
"line": "    return;\n",
"lineno": 578,
"revdate": [1495231163.0, -7200]
}, {
"node": "ca5ce34ad1cf84d8744ab12ef35948d0f4baaac2",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1364871: Restyle ::backdrop too. r=heycam\n\nMozReview-Commit-ID: BGWRiaeZiD8",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 244,
"line": "  }\n",
"lineno": 579,
"revdate": [1495231163.0, -7200]
}, {
"node": "ca5ce34ad1cf84d8744ab12ef35948d0f4baaac2",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1364871: Restyle ::backdrop too. r=heycam\n\nMozReview-Commit-ID: BGWRiaeZiD8",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 245,
"line": "\n",
"lineno": 580,
"revdate": [1495231163.0, -7200]
}, {
"node": "ca5ce34ad1cf84d8744ab12ef35948d0f4baaac2",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1364871: Restyle ::backdrop too. r=heycam\n\nMozReview-Commit-ID: BGWRiaeZiD8",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 246,
"line": "  MOZ_ASSERT(backdropPlaceholder-\u003eIsPlaceholderFrame());\n",
"lineno": 581,
"revdate": [1495231163.0, -7200]
}, {
"node": "ca5ce34ad1cf84d8744ab12ef35948d0f4baaac2",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1364871: Restyle ::backdrop too. r=heycam\n\nMozReview-Commit-ID: BGWRiaeZiD8",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 247,
"line": "  nsIFrame* backdropFrame =\n",
"lineno": 582,
"revdate": [1495231163.0, -7200]
}, {
"node": "ca5ce34ad1cf84d8744ab12ef35948d0f4baaac2",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1364871: Restyle ::backdrop too. r=heycam\n\nMozReview-Commit-ID: BGWRiaeZiD8",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 248,
"line": "    nsPlaceholderFrame::GetRealFrameForPlaceholder(backdropPlaceholder);\n",
"lineno": 583,
"revdate": [1495231163.0, -7200]
}, {
"node": "ca5ce34ad1cf84d8744ab12ef35948d0f4baaac2",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1364871: Restyle ::backdrop too. r=heycam\n\nMozReview-Commit-ID: BGWRiaeZiD8",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 249,
"line": "  MOZ_ASSERT(backdropFrame-\u003eIsBackdropFrame());\n",
"lineno": 584,
"revdate": [1495231163.0, -7200]
}, {
"node": "ca5ce34ad1cf84d8744ab12ef35948d0f4baaac2",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1364871: Restyle ::backdrop too. r=heycam\n\nMozReview-Commit-ID: BGWRiaeZiD8",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 250,
"line": "  MOZ_ASSERT(backdropFrame-\u003eStyleContext()-\u003eGetPseudoType() ==\n",
"lineno": 585,
"revdate": [1495231163.0, -7200]
}, {
"node": "ca5ce34ad1cf84d8744ab12ef35948d0f4baaac2",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1364871: Restyle ::backdrop too. r=heycam\n\nMozReview-Commit-ID: BGWRiaeZiD8",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 251,
"line": "             CSSPseudoElementType::backdrop);\n",
"lineno": 586,
"revdate": [1495231163.0, -7200]
}, {
"node": "ca5ce34ad1cf84d8744ab12ef35948d0f4baaac2",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1364871: Restyle ::backdrop too. r=heycam\n\nMozReview-Commit-ID: BGWRiaeZiD8",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 252,
"line": "\n",
"lineno": 587,
"revdate": [1495231163.0, -7200]
}, {
"node": "ca5ce34ad1cf84d8744ab12ef35948d0f4baaac2",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1364871: Restyle ::backdrop too. r=heycam\n\nMozReview-Commit-ID: BGWRiaeZiD8",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 253,
"line": "  RefPtr\u003cnsStyleContext\u003e newContext =\n",
"lineno": 588,
"revdate": [1495231163.0, -7200]
}, {
"node": "87dac0783b76c8dcf77e6d3b54a306a9a1186906",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1375674: Don't use the owner's changes handled for the backdrop frame. r=heycam\n\nMozReview-Commit-ID: GpIQwqge8L",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 305,
"line": "    aStyleSet.ResolvePseudoElementStyle(aFrame-\u003eGetContent()-\u003eAsElement(),\n",
"lineno": 589,
"revdate": [1498238780.0, -7200]
}, {
"node": "87dac0783b76c8dcf77e6d3b54a306a9a1186906",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1375674: Don't use the owner's changes handled for the backdrop frame. r=heycam\n\nMozReview-Commit-ID: GpIQwqge8L",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 306,
"line": "                                        CSSPseudoElementType::backdrop,\n",
"lineno": 590,
"revdate": [1498238780.0, -7200]
}, {
"node": "4d5e5d40c7ee04bba9fc8b96322a9aa10c220107",
"author": "Manish Goregaokar \u003cmanishearth@gmail.com\u003e",
"desc": "Bug 1367904 - Part 11: stylo: Use ServoStyleContext in ServoStyleSet/ServoRestyleManager; r=bholley\n\nMozReview-Commit-ID: JJOBixTSCZq\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 396,
"line": "                                        aFrame-\u003eStyleContext()-\u003eAsServo(),\n",
"lineno": 591,
"revdate": [1500316924.0, 25200]
}, {
"node": "87dac0783b76c8dcf77e6d3b54a306a9a1186906",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1375674: Don't use the owner's changes handled for the backdrop frame. r=heycam\n\nMozReview-Commit-ID: GpIQwqge8L",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 308,
"line": "                                        /* aPseudoElement = */ nullptr);\n",
"lineno": 592,
"revdate": [1498238780.0, -7200]
}, {
"node": "ca5ce34ad1cf84d8744ab12ef35948d0f4baaac2",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1364871: Restyle ::backdrop too. r=heycam\n\nMozReview-Commit-ID: BGWRiaeZiD8",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 259,
"line": "\n",
"lineno": 593,
"revdate": [1495231163.0, -7200]
}, {
"node": "87dac0783b76c8dcf77e6d3b54a306a9a1186906",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1375674: Don't use the owner's changes handled for the backdrop frame. r=heycam\n\nMozReview-Commit-ID: GpIQwqge8L",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 310,
"line": "  // NOTE(emilio): We can't use the changes handled for the owner of the\n",
"lineno": 594,
"revdate": [1498238780.0, -7200]
}, {
"node": "874f4d1c9ba13ff88229121a6116f32bc2199bf2",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1387942: Relax backdrop frame parenthood assertion, and re-enable test. r=xidorn\n\nMozReview-Commit-ID: 99I3apwe52l",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 559,
"line": "  // backdrop frame, since it's out of flow, and parented to the viewport or\n",
"lineno": 595,
"revdate": [1505198477.0, -7200]
}, {
"node": "874f4d1c9ba13ff88229121a6116f32bc2199bf2",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1387942: Relax backdrop frame parenthood assertion, and re-enable test. r=xidorn\n\nMozReview-Commit-ID: 99I3apwe52l",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 560,
"line": "  // canvas frame (depending on the `position` value).\n",
"lineno": 596,
"revdate": [1505198477.0, -7200]
}, {
"node": "874f4d1c9ba13ff88229121a6116f32bc2199bf2",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1387942: Relax backdrop frame parenthood assertion, and re-enable test. r=xidorn\n\nMozReview-Commit-ID: 99I3apwe52l",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 561,
"line": "  MOZ_ASSERT(backdropFrame-\u003eGetParent()-\u003eIsViewportFrame() ||\n",
"lineno": 597,
"revdate": [1505198477.0, -7200]
}, {
"node": "874f4d1c9ba13ff88229121a6116f32bc2199bf2",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1387942: Relax backdrop frame parenthood assertion, and re-enable test. r=xidorn\n\nMozReview-Commit-ID: 99I3apwe52l",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 562,
"line": "             backdropFrame-\u003eGetParent()-\u003eIsCanvasFrame());\n",
"lineno": 598,
"revdate": [1505198477.0, -7200]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 590,
"line": "  nsTArray\u003cnsIFrame*\u003e wrappersToRestyle;\n",
"lineno": 599,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 591,
"line": "  ServoRestyleState state(aStyleSet, aChangeList, wrappersToRestyle);\n",
"lineno": 600,
"revdate": [1502424626.0, 14400]
}, {
"node": "87dac0783b76c8dcf77e6d3b54a306a9a1186906",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1375674: Don't use the owner's changes handled for the backdrop frame. r=heycam\n\nMozReview-Commit-ID: GpIQwqge8L",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 314,
"line": "  aFrame-\u003eUpdateStyleOfOwnedChildFrame(backdropFrame, newContext, state);\n",
"lineno": 601,
"revdate": [1498238780.0, -7200]
}, {
"node": "ca5ce34ad1cf84d8744ab12ef35948d0f4baaac2",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1364871: Restyle ::backdrop too. r=heycam\n\nMozReview-Commit-ID: BGWRiaeZiD8",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 263,
"line": "}\n",
"lineno": 602,
"revdate": [1495231163.0, -7200]
}, {
"node": "ca5ce34ad1cf84d8744ab12ef35948d0f4baaac2",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1364871: Restyle ::backdrop too. r=heycam\n\nMozReview-Commit-ID: BGWRiaeZiD8",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 264,
"line": "\n",
"lineno": 603,
"revdate": [1495231163.0, -7200]
}, {
"node": "ca5ce34ad1cf84d8744ab12ef35948d0f4baaac2",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1364871: Restyle ::backdrop too. r=heycam\n\nMozReview-Commit-ID: BGWRiaeZiD8",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 265,
"line": "static void\n",
"lineno": 604,
"revdate": [1495231163.0, -7200]
}, {
"node": "bf11951d30a6d14f73a3fda964e57011e60b8dde",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1376640.  Fix dynamic updates when an inline that sits between a first-letter and its block changes style.  r=heycam\n\nMozReview-Commit-ID: 8osMUpYVRvR",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 394,
"line": "UpdateFirstLetterIfNeeded(nsIFrame* aFrame, ServoRestyleState& aRestyleState)\n",
"lineno": 605,
"revdate": [1498713575.0, 25200]
}, {
"node": "bf11951d30a6d14f73a3fda964e57011e60b8dde",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1376640.  Fix dynamic updates when an inline that sits between a first-letter and its block changes style.  r=heycam\n\nMozReview-Commit-ID: 8osMUpYVRvR",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 395,
"line": "{\n",
"lineno": 606,
"revdate": [1498713575.0, 25200]
}, {
"node": "ac3ccd00426152daa9f7afbba00cc6abd59a1039",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1404167: Properly update the styles of first-letter childs of anon boxes. r=bz\n\nMozReview-Commit-ID: Cyxs4FxGj6B\nSigned-off-by: Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 576,
"line": "  MOZ_ASSERT(!aFrame-\u003eIsFrameOfType(nsIFrame::eBlockFrame),\n",
"lineno": 607,
"revdate": [1506649746.0, -7200]
}, {
"node": "ac3ccd00426152daa9f7afbba00cc6abd59a1039",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1404167: Properly update the styles of first-letter childs of anon boxes. r=bz\n\nMozReview-Commit-ID: Cyxs4FxGj6B\nSigned-off-by: Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 577,
"line": "             \"You're probably duplicating work with UpdatePseudoElementStyles!\");\n",
"lineno": 608,
"revdate": [1506649746.0, -7200]
}, {
"node": "bf11951d30a6d14f73a3fda964e57011e60b8dde",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1376640.  Fix dynamic updates when an inline that sits between a first-letter and its block changes style.  r=heycam\n\nMozReview-Commit-ID: 8osMUpYVRvR",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 396,
"line": "  if (!aFrame-\u003eHasFirstLetterChild()) {\n",
"lineno": 609,
"revdate": [1498713575.0, 25200]
}, {
"node": "bf11951d30a6d14f73a3fda964e57011e60b8dde",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1376640.  Fix dynamic updates when an inline that sits between a first-letter and its block changes style.  r=heycam\n\nMozReview-Commit-ID: 8osMUpYVRvR",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 397,
"line": "    return;\n",
"lineno": 610,
"revdate": [1498713575.0, 25200]
}, {
"node": "bf11951d30a6d14f73a3fda964e57011e60b8dde",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1376640.  Fix dynamic updates when an inline that sits between a first-letter and its block changes style.  r=heycam\n\nMozReview-Commit-ID: 8osMUpYVRvR",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 398,
"line": "  }\n",
"lineno": 611,
"revdate": [1498713575.0, 25200]
}, {
"node": "bf11951d30a6d14f73a3fda964e57011e60b8dde",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1376640.  Fix dynamic updates when an inline that sits between a first-letter and its block changes style.  r=heycam\n\nMozReview-Commit-ID: 8osMUpYVRvR",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 399,
"line": "\n",
"lineno": 612,
"revdate": [1498713575.0, 25200]
}, {
"node": "bf11951d30a6d14f73a3fda964e57011e60b8dde",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1376640.  Fix dynamic updates when an inline that sits between a first-letter and its block changes style.  r=heycam\n\nMozReview-Commit-ID: 8osMUpYVRvR",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 400,
"line": "  // We need to find the block the first-letter is associated with so we can\n",
"lineno": 613,
"revdate": [1498713575.0, 25200]
}, {
"node": "bf11951d30a6d14f73a3fda964e57011e60b8dde",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1376640.  Fix dynamic updates when an inline that sits between a first-letter and its block changes style.  r=heycam\n\nMozReview-Commit-ID: 8osMUpYVRvR",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 401,
"line": "  // find the right element for the first-letter's style resolution.  Might as\n",
"lineno": 614,
"revdate": [1498713575.0, 25200]
}, {
"node": "bf11951d30a6d14f73a3fda964e57011e60b8dde",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1376640.  Fix dynamic updates when an inline that sits between a first-letter and its block changes style.  r=heycam\n\nMozReview-Commit-ID: 8osMUpYVRvR",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 402,
"line": "  // well just delegate the whole thing to that block.\n",
"lineno": 615,
"revdate": [1498713575.0, 25200]
}, {
"node": "ac3ccd00426152daa9f7afbba00cc6abd59a1039",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1404167: Properly update the styles of first-letter childs of anon boxes. r=bz\n\nMozReview-Commit-ID: Cyxs4FxGj6B\nSigned-off-by: Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 585,
"line": "  nsIFrame* block = aFrame-\u003eGetParent();\n",
"lineno": 616,
"revdate": [1506649746.0, -7200]
}, {
"node": "bf11951d30a6d14f73a3fda964e57011e60b8dde",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1376640.  Fix dynamic updates when an inline that sits between a first-letter and its block changes style.  r=heycam\n\nMozReview-Commit-ID: 8osMUpYVRvR",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 404,
"line": "  while (!block-\u003eIsFrameOfType(nsIFrame::eBlockFrame)) {\n",
"lineno": 617,
"revdate": [1498713575.0, 25200]
}, {
"node": "bf11951d30a6d14f73a3fda964e57011e60b8dde",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1376640.  Fix dynamic updates when an inline that sits between a first-letter and its block changes style.  r=heycam\n\nMozReview-Commit-ID: 8osMUpYVRvR",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 405,
"line": "    block = block-\u003eGetParent();\n",
"lineno": 618,
"revdate": [1498713575.0, 25200]
}, {
"node": "bf11951d30a6d14f73a3fda964e57011e60b8dde",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1376640.  Fix dynamic updates when an inline that sits between a first-letter and its block changes style.  r=heycam\n\nMozReview-Commit-ID: 8osMUpYVRvR",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 406,
"line": "  }\n",
"lineno": 619,
"revdate": [1498713575.0, 25200]
}, {
"node": "ac3ccd00426152daa9f7afbba00cc6abd59a1039",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1404167: Properly update the styles of first-letter childs of anon boxes. r=bz\n\nMozReview-Commit-ID: Cyxs4FxGj6B\nSigned-off-by: Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 589,
"line": "\n",
"lineno": 620,
"revdate": [1506649746.0, -7200]
}, {
"node": "bf11951d30a6d14f73a3fda964e57011e60b8dde",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1376640.  Fix dynamic updates when an inline that sits between a first-letter and its block changes style.  r=heycam\n\nMozReview-Commit-ID: 8osMUpYVRvR",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 407,
"line": "  static_cast\u003cnsBlockFrame*\u003e(block-\u003eFirstContinuation())-\u003e\n",
"lineno": 621,
"revdate": [1498713575.0, 25200]
}, {
"node": "bf11951d30a6d14f73a3fda964e57011e60b8dde",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1376640.  Fix dynamic updates when an inline that sits between a first-letter and its block changes style.  r=heycam\n\nMozReview-Commit-ID: 8osMUpYVRvR",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 408,
"line": "    UpdateFirstLetterStyle(aRestyleState);\n",
"lineno": 622,
"revdate": [1498713575.0, 25200]
}, {
"node": "bf11951d30a6d14f73a3fda964e57011e60b8dde",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1376640.  Fix dynamic updates when an inline that sits between a first-letter and its block changes style.  r=heycam\n\nMozReview-Commit-ID: 8osMUpYVRvR",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 409,
"line": "}\n",
"lineno": 623,
"revdate": [1498713575.0, 25200]
}, {
"node": "bf11951d30a6d14f73a3fda964e57011e60b8dde",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1376640.  Fix dynamic updates when an inline that sits between a first-letter and its block changes style.  r=heycam\n\nMozReview-Commit-ID: 8osMUpYVRvR",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 410,
"line": "\n",
"lineno": 624,
"revdate": [1498713575.0, 25200]
}, {
"node": "bf11951d30a6d14f73a3fda964e57011e60b8dde",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1376640.  Fix dynamic updates when an inline that sits between a first-letter and its block changes style.  r=heycam\n\nMozReview-Commit-ID: 8osMUpYVRvR",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 411,
"line": "static void\n",
"lineno": 625,
"revdate": [1498713575.0, 25200]
}, {
"node": "346f57883936defca24432a7163bcbe8ebfe1362",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1366721: Restyle additional style contexts in ServoRestyleManager. r=heycam\n\nI was about to assert that other non-primary frames don't have additional style\ncontexts everywhere, but that wouldn't make much sense, given they don't\ncorrespond to an element we could selector-match against.\n\nMozReview-Commit-ID: EtAQbSg6nP6",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 426,
"line": "UpdateOneAdditionalStyleContext(nsIFrame* aFrame,\n",
"lineno": 626,
"revdate": [1500568154.0, -7200]
}, {
"node": "346f57883936defca24432a7163bcbe8ebfe1362",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1366721: Restyle additional style contexts in ServoRestyleManager. r=heycam\n\nI was about to assert that other non-primary frames don't have additional style\ncontexts everywhere, but that wouldn't make much sense, given they don't\ncorrespond to an element we could selector-match against.\n\nMozReview-Commit-ID: EtAQbSg6nP6",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 427,
"line": "                                uint32_t aIndex,\n",
"lineno": 627,
"revdate": [1500568154.0, -7200]
}, {
"node": "346f57883936defca24432a7163bcbe8ebfe1362",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1366721: Restyle additional style contexts in ServoRestyleManager. r=heycam\n\nI was about to assert that other non-primary frames don't have additional style\ncontexts everywhere, but that wouldn't make much sense, given they don't\ncorrespond to an element we could selector-match against.\n\nMozReview-Commit-ID: EtAQbSg6nP6",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 428,
"line": "                                ServoStyleContext& aOldContext,\n",
"lineno": 628,
"revdate": [1500568154.0, -7200]
}, {
"node": "346f57883936defca24432a7163bcbe8ebfe1362",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1366721: Restyle additional style contexts in ServoRestyleManager. r=heycam\n\nI was about to assert that other non-primary frames don't have additional style\ncontexts everywhere, but that wouldn't make much sense, given they don't\ncorrespond to an element we could selector-match against.\n\nMozReview-Commit-ID: EtAQbSg6nP6",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 429,
"line": "                                ServoRestyleState& aRestyleState)\n",
"lineno": 629,
"revdate": [1500568154.0, -7200]
}, {
"node": "346f57883936defca24432a7163bcbe8ebfe1362",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1366721: Restyle additional style contexts in ServoRestyleManager. r=heycam\n\nI was about to assert that other non-primary frames don't have additional style\ncontexts everywhere, but that wouldn't make much sense, given they don't\ncorrespond to an element we could selector-match against.\n\nMozReview-Commit-ID: EtAQbSg6nP6",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 430,
"line": "{\n",
"lineno": 630,
"revdate": [1500568154.0, -7200]
}, {
"node": "346f57883936defca24432a7163bcbe8ebfe1362",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1366721: Restyle additional style contexts in ServoRestyleManager. r=heycam\n\nI was about to assert that other non-primary frames don't have additional style\ncontexts everywhere, but that wouldn't make much sense, given they don't\ncorrespond to an element we could selector-match against.\n\nMozReview-Commit-ID: EtAQbSg6nP6",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 431,
"line": "  auto pseudoType = aOldContext.GetPseudoType();\n",
"lineno": 631,
"revdate": [1500568154.0, -7200]
}, {
"node": "346f57883936defca24432a7163bcbe8ebfe1362",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1366721: Restyle additional style contexts in ServoRestyleManager. r=heycam\n\nI was about to assert that other non-primary frames don't have additional style\ncontexts everywhere, but that wouldn't make much sense, given they don't\ncorrespond to an element we could selector-match against.\n\nMozReview-Commit-ID: EtAQbSg6nP6",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 432,
"line": "  MOZ_ASSERT(pseudoType != CSSPseudoElementType::NotPseudo);\n",
"lineno": 632,
"revdate": [1500568154.0, -7200]
}, {
"node": "346f57883936defca24432a7163bcbe8ebfe1362",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1366721: Restyle additional style contexts in ServoRestyleManager. r=heycam\n\nI was about to assert that other non-primary frames don't have additional style\ncontexts everywhere, but that wouldn't make much sense, given they don't\ncorrespond to an element we could selector-match against.\n\nMozReview-Commit-ID: EtAQbSg6nP6",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 433,
"line": "  MOZ_ASSERT(\n",
"lineno": 633,
"revdate": [1500568154.0, -7200]
}, {
"node": "346f57883936defca24432a7163bcbe8ebfe1362",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1366721: Restyle additional style contexts in ServoRestyleManager. r=heycam\n\nI was about to assert that other non-primary frames don't have additional style\ncontexts everywhere, but that wouldn't make much sense, given they don't\ncorrespond to an element we could selector-match against.\n\nMozReview-Commit-ID: EtAQbSg6nP6",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 434,
"line": "      !nsCSSPseudoElements::PseudoElementSupportsUserActionState(pseudoType));\n",
"lineno": 634,
"revdate": [1500568154.0, -7200]
}, {
"node": "346f57883936defca24432a7163bcbe8ebfe1362",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1366721: Restyle additional style contexts in ServoRestyleManager. r=heycam\n\nI was about to assert that other non-primary frames don't have additional style\ncontexts everywhere, but that wouldn't make much sense, given they don't\ncorrespond to an element we could selector-match against.\n\nMozReview-Commit-ID: EtAQbSg6nP6",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 435,
"line": "\n",
"lineno": 635,
"revdate": [1500568154.0, -7200]
}, {
"node": "346f57883936defca24432a7163bcbe8ebfe1362",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1366721: Restyle additional style contexts in ServoRestyleManager. r=heycam\n\nI was about to assert that other non-primary frames don't have additional style\ncontexts everywhere, but that wouldn't make much sense, given they don't\ncorrespond to an element we could selector-match against.\n\nMozReview-Commit-ID: EtAQbSg6nP6",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 436,
"line": "  RefPtr\u003cServoStyleContext\u003e newContext =\n",
"lineno": 636,
"revdate": [1500568154.0, -7200]
}, {
"node": "346f57883936defca24432a7163bcbe8ebfe1362",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1366721: Restyle additional style contexts in ServoRestyleManager. r=heycam\n\nI was about to assert that other non-primary frames don't have additional style\ncontexts everywhere, but that wouldn't make much sense, given they don't\ncorrespond to an element we could selector-match against.\n\nMozReview-Commit-ID: EtAQbSg6nP6",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 437,
"line": "    aRestyleState.StyleSet().ResolvePseudoElementStyle(\n",
"lineno": 637,
"revdate": [1500568154.0, -7200]
}, {
"node": "346f57883936defca24432a7163bcbe8ebfe1362",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1366721: Restyle additional style contexts in ServoRestyleManager. r=heycam\n\nI was about to assert that other non-primary frames don't have additional style\ncontexts everywhere, but that wouldn't make much sense, given they don't\ncorrespond to an element we could selector-match against.\n\nMozReview-Commit-ID: EtAQbSg6nP6",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 438,
"line": "        aFrame-\u003eGetContent()-\u003eAsElement(),\n",
"lineno": 638,
"revdate": [1500568154.0, -7200]
}, {
"node": "346f57883936defca24432a7163bcbe8ebfe1362",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1366721: Restyle additional style contexts in ServoRestyleManager. r=heycam\n\nI was about to assert that other non-primary frames don't have additional style\ncontexts everywhere, but that wouldn't make much sense, given they don't\ncorrespond to an element we could selector-match against.\n\nMozReview-Commit-ID: EtAQbSg6nP6",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 439,
"line": "        pseudoType,\n",
"lineno": 639,
"revdate": [1500568154.0, -7200]
}, {
"node": "346f57883936defca24432a7163bcbe8ebfe1362",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1366721: Restyle additional style contexts in ServoRestyleManager. r=heycam\n\nI was about to assert that other non-primary frames don't have additional style\ncontexts everywhere, but that wouldn't make much sense, given they don't\ncorrespond to an element we could selector-match against.\n\nMozReview-Commit-ID: EtAQbSg6nP6",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 440,
"line": "        aFrame-\u003eStyleContext()-\u003eAsServo(),\n",
"lineno": 640,
"revdate": [1500568154.0, -7200]
}, {
"node": "346f57883936defca24432a7163bcbe8ebfe1362",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1366721: Restyle additional style contexts in ServoRestyleManager. r=heycam\n\nI was about to assert that other non-primary frames don't have additional style\ncontexts everywhere, but that wouldn't make much sense, given they don't\ncorrespond to an element we could selector-match against.\n\nMozReview-Commit-ID: EtAQbSg6nP6",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 441,
"line": "        /* aPseudoElement = */ nullptr);\n",
"lineno": 641,
"revdate": [1500568154.0, -7200]
}, {
"node": "346f57883936defca24432a7163bcbe8ebfe1362",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1366721: Restyle additional style contexts in ServoRestyleManager. r=heycam\n\nI was about to assert that other non-primary frames don't have additional style\ncontexts everywhere, but that wouldn't make much sense, given they don't\ncorrespond to an element we could selector-match against.\n\nMozReview-Commit-ID: EtAQbSg6nP6",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 442,
"line": "\n",
"lineno": 642,
"revdate": [1500568154.0, -7200]
}, {
"node": "346f57883936defca24432a7163bcbe8ebfe1362",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1366721: Restyle additional style contexts in ServoRestyleManager. r=heycam\n\nI was about to assert that other non-primary frames don't have additional style\ncontexts everywhere, but that wouldn't make much sense, given they don't\ncorrespond to an element we could selector-match against.\n\nMozReview-Commit-ID: EtAQbSg6nP6",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 443,
"line": "  uint32_t equalStructs, samePointerStructs; // Not used, actually.\n",
"lineno": 643,
"revdate": [1500568154.0, -7200]
}, {
"node": "346f57883936defca24432a7163bcbe8ebfe1362",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1366721: Restyle additional style contexts in ServoRestyleManager. r=heycam\n\nI was about to assert that other non-primary frames don't have additional style\ncontexts everywhere, but that wouldn't make much sense, given they don't\ncorrespond to an element we could selector-match against.\n\nMozReview-Commit-ID: EtAQbSg6nP6",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 444,
"line": "  nsChangeHint childHint = aOldContext.CalcStyleDifference(\n",
"lineno": 644,
"revdate": [1500568154.0, -7200]
}, {
"node": "346f57883936defca24432a7163bcbe8ebfe1362",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1366721: Restyle additional style contexts in ServoRestyleManager. r=heycam\n\nI was about to assert that other non-primary frames don't have additional style\ncontexts everywhere, but that wouldn't make much sense, given they don't\ncorrespond to an element we could selector-match against.\n\nMozReview-Commit-ID: EtAQbSg6nP6",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 445,
"line": "    newContext,\n",
"lineno": 645,
"revdate": [1500568154.0, -7200]
}, {
"node": "346f57883936defca24432a7163bcbe8ebfe1362",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1366721: Restyle additional style contexts in ServoRestyleManager. r=heycam\n\nI was about to assert that other non-primary frames don't have additional style\ncontexts everywhere, but that wouldn't make much sense, given they don't\ncorrespond to an element we could selector-match against.\n\nMozReview-Commit-ID: EtAQbSg6nP6",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 446,
"line": "    &equalStructs,\n",
"lineno": 646,
"revdate": [1500568154.0, -7200]
}, {
"node": "346f57883936defca24432a7163bcbe8ebfe1362",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1366721: Restyle additional style contexts in ServoRestyleManager. r=heycam\n\nI was about to assert that other non-primary frames don't have additional style\ncontexts everywhere, but that wouldn't make much sense, given they don't\ncorrespond to an element we could selector-match against.\n\nMozReview-Commit-ID: EtAQbSg6nP6",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 447,
"line": "    &samePointerStructs);\n",
"lineno": 647,
"revdate": [1500568154.0, -7200]
}, {
"node": "346f57883936defca24432a7163bcbe8ebfe1362",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1366721: Restyle additional style contexts in ServoRestyleManager. r=heycam\n\nI was about to assert that other non-primary frames don't have additional style\ncontexts everywhere, but that wouldn't make much sense, given they don't\ncorrespond to an element we could selector-match against.\n\nMozReview-Commit-ID: EtAQbSg6nP6",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 448,
"line": "  if (!aFrame-\u003eHasAnyStateBits(NS_FRAME_OUT_OF_FLOW)) {\n",
"lineno": 648,
"revdate": [1500568154.0, -7200]
}, {
"node": "346f57883936defca24432a7163bcbe8ebfe1362",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1366721: Restyle additional style contexts in ServoRestyleManager. r=heycam\n\nI was about to assert that other non-primary frames don't have additional style\ncontexts everywhere, but that wouldn't make much sense, given they don't\ncorrespond to an element we could selector-match against.\n\nMozReview-Commit-ID: EtAQbSg6nP6",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 449,
"line": "    childHint = NS_RemoveSubsumedHints(\n",
"lineno": 649,
"revdate": [1500568154.0, -7200]
}, {
"node": "346f57883936defca24432a7163bcbe8ebfe1362",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1366721: Restyle additional style contexts in ServoRestyleManager. r=heycam\n\nI was about to assert that other non-primary frames don't have additional style\ncontexts everywhere, but that wouldn't make much sense, given they don't\ncorrespond to an element we could selector-match against.\n\nMozReview-Commit-ID: EtAQbSg6nP6",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 450,
"line": "        childHint, aRestyleState.ChangesHandledFor(*aFrame));\n",
"lineno": 650,
"revdate": [1500568154.0, -7200]
}, {
"node": "346f57883936defca24432a7163bcbe8ebfe1362",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1366721: Restyle additional style contexts in ServoRestyleManager. r=heycam\n\nI was about to assert that other non-primary frames don't have additional style\ncontexts everywhere, but that wouldn't make much sense, given they don't\ncorrespond to an element we could selector-match against.\n\nMozReview-Commit-ID: EtAQbSg6nP6",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 451,
"line": "  }\n",
"lineno": 651,
"revdate": [1500568154.0, -7200]
}, {
"node": "346f57883936defca24432a7163bcbe8ebfe1362",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1366721: Restyle additional style contexts in ServoRestyleManager. r=heycam\n\nI was about to assert that other non-primary frames don't have additional style\ncontexts everywhere, but that wouldn't make much sense, given they don't\ncorrespond to an element we could selector-match against.\n\nMozReview-Commit-ID: EtAQbSg6nP6",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 452,
"line": "\n",
"lineno": 652,
"revdate": [1500568154.0, -7200]
}, {
"node": "346f57883936defca24432a7163bcbe8ebfe1362",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1366721: Restyle additional style contexts in ServoRestyleManager. r=heycam\n\nI was about to assert that other non-primary frames don't have additional style\ncontexts everywhere, but that wouldn't make much sense, given they don't\ncorrespond to an element we could selector-match against.\n\nMozReview-Commit-ID: EtAQbSg6nP6",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 453,
"line": "  if (childHint) {\n",
"lineno": 653,
"revdate": [1500568154.0, -7200]
}, {
"node": "346f57883936defca24432a7163bcbe8ebfe1362",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1366721: Restyle additional style contexts in ServoRestyleManager. r=heycam\n\nI was about to assert that other non-primary frames don't have additional style\ncontexts everywhere, but that wouldn't make much sense, given they don't\ncorrespond to an element we could selector-match against.\n\nMozReview-Commit-ID: EtAQbSg6nP6",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 454,
"line": "    aRestyleState.ChangeList().AppendChange(\n",
"lineno": 654,
"revdate": [1500568154.0, -7200]
}, {
"node": "346f57883936defca24432a7163bcbe8ebfe1362",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1366721: Restyle additional style contexts in ServoRestyleManager. r=heycam\n\nI was about to assert that other non-primary frames don't have additional style\ncontexts everywhere, but that wouldn't make much sense, given they don't\ncorrespond to an element we could selector-match against.\n\nMozReview-Commit-ID: EtAQbSg6nP6",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 455,
"line": "        aFrame, aFrame-\u003eGetContent(), childHint);\n",
"lineno": 655,
"revdate": [1500568154.0, -7200]
}, {
"node": "346f57883936defca24432a7163bcbe8ebfe1362",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1366721: Restyle additional style contexts in ServoRestyleManager. r=heycam\n\nI was about to assert that other non-primary frames don't have additional style\ncontexts everywhere, but that wouldn't make much sense, given they don't\ncorrespond to an element we could selector-match against.\n\nMozReview-Commit-ID: EtAQbSg6nP6",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 456,
"line": "  }\n",
"lineno": 656,
"revdate": [1500568154.0, -7200]
}, {
"node": "346f57883936defca24432a7163bcbe8ebfe1362",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1366721: Restyle additional style contexts in ServoRestyleManager. r=heycam\n\nI was about to assert that other non-primary frames don't have additional style\ncontexts everywhere, but that wouldn't make much sense, given they don't\ncorrespond to an element we could selector-match against.\n\nMozReview-Commit-ID: EtAQbSg6nP6",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 457,
"line": "\n",
"lineno": 657,
"revdate": [1500568154.0, -7200]
}, {
"node": "346f57883936defca24432a7163bcbe8ebfe1362",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1366721: Restyle additional style contexts in ServoRestyleManager. r=heycam\n\nI was about to assert that other non-primary frames don't have additional style\ncontexts everywhere, but that wouldn't make much sense, given they don't\ncorrespond to an element we could selector-match against.\n\nMozReview-Commit-ID: EtAQbSg6nP6",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 458,
"line": "  aFrame-\u003eSetAdditionalStyleContext(aIndex, newContext);\n",
"lineno": 658,
"revdate": [1500568154.0, -7200]
}, {
"node": "346f57883936defca24432a7163bcbe8ebfe1362",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1366721: Restyle additional style contexts in ServoRestyleManager. r=heycam\n\nI was about to assert that other non-primary frames don't have additional style\ncontexts everywhere, but that wouldn't make much sense, given they don't\ncorrespond to an element we could selector-match against.\n\nMozReview-Commit-ID: EtAQbSg6nP6",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 459,
"line": "}\n",
"lineno": 659,
"revdate": [1500568154.0, -7200]
}, {
"node": "346f57883936defca24432a7163bcbe8ebfe1362",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1366721: Restyle additional style contexts in ServoRestyleManager. r=heycam\n\nI was about to assert that other non-primary frames don't have additional style\ncontexts everywhere, but that wouldn't make much sense, given they don't\ncorrespond to an element we could selector-match against.\n\nMozReview-Commit-ID: EtAQbSg6nP6",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 460,
"line": "\n",
"lineno": 660,
"revdate": [1500568154.0, -7200]
}, {
"node": "346f57883936defca24432a7163bcbe8ebfe1362",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1366721: Restyle additional style contexts in ServoRestyleManager. r=heycam\n\nI was about to assert that other non-primary frames don't have additional style\ncontexts everywhere, but that wouldn't make much sense, given they don't\ncorrespond to an element we could selector-match against.\n\nMozReview-Commit-ID: EtAQbSg6nP6",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 461,
"line": "static void\n",
"lineno": 661,
"revdate": [1500568154.0, -7200]
}, {
"node": "346f57883936defca24432a7163bcbe8ebfe1362",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1366721: Restyle additional style contexts in ServoRestyleManager. r=heycam\n\nI was about to assert that other non-primary frames don't have additional style\ncontexts everywhere, but that wouldn't make much sense, given they don't\ncorrespond to an element we could selector-match against.\n\nMozReview-Commit-ID: EtAQbSg6nP6",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 462,
"line": "UpdateAdditionalStyleContexts(nsIFrame* aFrame,\n",
"lineno": 662,
"revdate": [1500568154.0, -7200]
}, {
"node": "346f57883936defca24432a7163bcbe8ebfe1362",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1366721: Restyle additional style contexts in ServoRestyleManager. r=heycam\n\nI was about to assert that other non-primary frames don't have additional style\ncontexts everywhere, but that wouldn't make much sense, given they don't\ncorrespond to an element we could selector-match against.\n\nMozReview-Commit-ID: EtAQbSg6nP6",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 463,
"line": "                              ServoRestyleState& aRestyleState)\n",
"lineno": 663,
"revdate": [1500568154.0, -7200]
}, {
"node": "346f57883936defca24432a7163bcbe8ebfe1362",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1366721: Restyle additional style contexts in ServoRestyleManager. r=heycam\n\nI was about to assert that other non-primary frames don't have additional style\ncontexts everywhere, but that wouldn't make much sense, given they don't\ncorrespond to an element we could selector-match against.\n\nMozReview-Commit-ID: EtAQbSg6nP6",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 464,
"line": "{\n",
"lineno": 664,
"revdate": [1500568154.0, -7200]
}, {
"node": "346f57883936defca24432a7163bcbe8ebfe1362",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1366721: Restyle additional style contexts in ServoRestyleManager. r=heycam\n\nI was about to assert that other non-primary frames don't have additional style\ncontexts everywhere, but that wouldn't make much sense, given they don't\ncorrespond to an element we could selector-match against.\n\nMozReview-Commit-ID: EtAQbSg6nP6",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 465,
"line": "  MOZ_ASSERT(aFrame);\n",
"lineno": 665,
"revdate": [1500568154.0, -7200]
}, {
"node": "346f57883936defca24432a7163bcbe8ebfe1362",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1366721: Restyle additional style contexts in ServoRestyleManager. r=heycam\n\nI was about to assert that other non-primary frames don't have additional style\ncontexts everywhere, but that wouldn't make much sense, given they don't\ncorrespond to an element we could selector-match against.\n\nMozReview-Commit-ID: EtAQbSg6nP6",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 466,
"line": "  MOZ_ASSERT(aFrame-\u003eGetContent() && aFrame-\u003eGetContent()-\u003eIsElement());\n",
"lineno": 666,
"revdate": [1500568154.0, -7200]
}, {
"node": "346f57883936defca24432a7163bcbe8ebfe1362",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1366721: Restyle additional style contexts in ServoRestyleManager. r=heycam\n\nI was about to assert that other non-primary frames don't have additional style\ncontexts everywhere, but that wouldn't make much sense, given they don't\ncorrespond to an element we could selector-match against.\n\nMozReview-Commit-ID: EtAQbSg6nP6",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 467,
"line": "\n",
"lineno": 667,
"revdate": [1500568154.0, -7200]
}, {
"node": "346f57883936defca24432a7163bcbe8ebfe1362",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1366721: Restyle additional style contexts in ServoRestyleManager. r=heycam\n\nI was about to assert that other non-primary frames don't have additional style\ncontexts everywhere, but that wouldn't make much sense, given they don't\ncorrespond to an element we could selector-match against.\n\nMozReview-Commit-ID: EtAQbSg6nP6",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 468,
"line": "  // FIXME(emilio): Consider adding a bit or something to avoid the initial\n",
"lineno": 668,
"revdate": [1500568154.0, -7200]
}, {
"node": "346f57883936defca24432a7163bcbe8ebfe1362",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1366721: Restyle additional style contexts in ServoRestyleManager. r=heycam\n\nI was about to assert that other non-primary frames don't have additional style\ncontexts everywhere, but that wouldn't make much sense, given they don't\ncorrespond to an element we could selector-match against.\n\nMozReview-Commit-ID: EtAQbSg6nP6",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 469,
"line": "  // virtual call?\n",
"lineno": 669,
"revdate": [1500568154.0, -7200]
}, {
"node": "346f57883936defca24432a7163bcbe8ebfe1362",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1366721: Restyle additional style contexts in ServoRestyleManager. r=heycam\n\nI was about to assert that other non-primary frames don't have additional style\ncontexts everywhere, but that wouldn't make much sense, given they don't\ncorrespond to an element we could selector-match against.\n\nMozReview-Commit-ID: EtAQbSg6nP6",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 470,
"line": "  uint32_t index = 0;\n",
"lineno": 670,
"revdate": [1500568154.0, -7200]
}, {
"node": "346f57883936defca24432a7163bcbe8ebfe1362",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1366721: Restyle additional style contexts in ServoRestyleManager. r=heycam\n\nI was about to assert that other non-primary frames don't have additional style\ncontexts everywhere, but that wouldn't make much sense, given they don't\ncorrespond to an element we could selector-match against.\n\nMozReview-Commit-ID: EtAQbSg6nP6",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 471,
"line": "  while (auto* oldContext = aFrame-\u003eGetAdditionalStyleContext(index)) {\n",
"lineno": 671,
"revdate": [1500568154.0, -7200]
}, {
"node": "346f57883936defca24432a7163bcbe8ebfe1362",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1366721: Restyle additional style contexts in ServoRestyleManager. r=heycam\n\nI was about to assert that other non-primary frames don't have additional style\ncontexts everywhere, but that wouldn't make much sense, given they don't\ncorrespond to an element we could selector-match against.\n\nMozReview-Commit-ID: EtAQbSg6nP6",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 472,
"line": "    UpdateOneAdditionalStyleContext(\n",
"lineno": 672,
"revdate": [1500568154.0, -7200]
}, {
"node": "346f57883936defca24432a7163bcbe8ebfe1362",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1366721: Restyle additional style contexts in ServoRestyleManager. r=heycam\n\nI was about to assert that other non-primary frames don't have additional style\ncontexts everywhere, but that wouldn't make much sense, given they don't\ncorrespond to an element we could selector-match against.\n\nMozReview-Commit-ID: EtAQbSg6nP6",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 473,
"line": "        aFrame, index++, *oldContext-\u003eAsServo(), aRestyleState);\n",
"lineno": 673,
"revdate": [1500568154.0, -7200]
}, {
"node": "346f57883936defca24432a7163bcbe8ebfe1362",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1366721: Restyle additional style contexts in ServoRestyleManager. r=heycam\n\nI was about to assert that other non-primary frames don't have additional style\ncontexts everywhere, but that wouldn't make much sense, given they don't\ncorrespond to an element we could selector-match against.\n\nMozReview-Commit-ID: EtAQbSg6nP6",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 474,
"line": "  }\n",
"lineno": 674,
"revdate": [1500568154.0, -7200]
}, {
"node": "346f57883936defca24432a7163bcbe8ebfe1362",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1366721: Restyle additional style contexts in ServoRestyleManager. r=heycam\n\nI was about to assert that other non-primary frames don't have additional style\ncontexts everywhere, but that wouldn't make much sense, given they don't\ncorrespond to an element we could selector-match against.\n\nMozReview-Commit-ID: EtAQbSg6nP6",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 475,
"line": "}\n",
"lineno": 675,
"revdate": [1500568154.0, -7200]
}, {
"node": "346f57883936defca24432a7163bcbe8ebfe1362",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1366721: Restyle additional style contexts in ServoRestyleManager. r=heycam\n\nI was about to assert that other non-primary frames don't have additional style\ncontexts everywhere, but that wouldn't make much sense, given they don't\ncorrespond to an element we could selector-match against.\n\nMozReview-Commit-ID: EtAQbSg6nP6",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 476,
"line": "\n",
"lineno": 676,
"revdate": [1500568154.0, -7200]
}, {
"node": "346f57883936defca24432a7163bcbe8ebfe1362",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1366721: Restyle additional style contexts in ServoRestyleManager. r=heycam\n\nI was about to assert that other non-primary frames don't have additional style\ncontexts everywhere, but that wouldn't make much sense, given they don't\ncorrespond to an element we could selector-match against.\n\nMozReview-Commit-ID: EtAQbSg6nP6",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 477,
"line": "static void\n",
"lineno": 677,
"revdate": [1500568154.0, -7200]
}, {
"node": "09851f5d647eb9f1a1b104f197ed4a107145d8f0",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1364871: Add a function to update frame pseudo-element styles during the post-traversal, and restyle bullet frames. r=heycam\n\nMozReview-Commit-ID: 9m0jqmxjOb6",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 227,
"line": "UpdateFramePseudoElementStyles(nsIFrame* aFrame,\n",
"lineno": 678,
"revdate": [1495231102.0, -7200]
}, {
"node": "fdde73cf429c62cd1e712afcc196110f8601cb2a",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1374752: Pack together the StyleSet, ChangeList and handled change hints, and use the latter with anonymous boxes while we're at it. r=heycam\n\nMozReview-Commit-ID: DiWcUwD9po5",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 307,
"line": "                               ServoRestyleState& aRestyleState)\n",
"lineno": 679,
"revdate": [1497993687.0, -7200]
}, {
"node": "09851f5d647eb9f1a1b104f197ed4a107145d8f0",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1364871: Add a function to update frame pseudo-element styles during the post-traversal, and restyle bullet frames. r=heycam\n\nMozReview-Commit-ID: 9m0jqmxjOb6",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 231,
"line": "{\n",
"lineno": 680,
"revdate": [1495231102.0, -7200]
}, {
"node": "09851f5d647eb9f1a1b104f197ed4a107145d8f0",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1364871: Add a function to update frame pseudo-element styles during the post-traversal, and restyle bullet frames. r=heycam\n\nMozReview-Commit-ID: 9m0jqmxjOb6",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 232,
"line": "  if (aFrame-\u003eIsFrameOfType(nsIFrame::eBlockFrame)) {\n",
"lineno": 681,
"revdate": [1495231102.0, -7200]
}, {
"node": "64a65ce29ca3c2f5d25463aeda3427cabd4a9f9c",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1375315.  Make sure to update block pseudo-element styles on various anonymous blocks.  r=emilio\n\nMozReview-Commit-ID: HBabvfWYgdP",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 294,
"line": "    static_cast\u003cnsBlockFrame*\u003e(aFrame)-\u003eUpdatePseudoElementStyles(aRestyleState);\n",
"lineno": 682,
"revdate": [1498145051.0, 14400]
}, {
"node": "ac3ccd00426152daa9f7afbba00cc6abd59a1039",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1404167: Properly update the styles of first-letter childs of anon boxes. r=bz\n\nMozReview-Commit-ID: Cyxs4FxGj6B\nSigned-off-by: Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 652,
"line": "  } else {\n",
"lineno": 683,
"revdate": [1506649746.0, -7200]
}, {
"node": "ac3ccd00426152daa9f7afbba00cc6abd59a1039",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1404167: Properly update the styles of first-letter childs of anon boxes. r=bz\n\nMozReview-Commit-ID: Cyxs4FxGj6B\nSigned-off-by: Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 653,
"line": "    UpdateFirstLetterIfNeeded(aFrame, aRestyleState);\n",
"lineno": 684,
"revdate": [1506649746.0, -7200]
}, {
"node": "09851f5d647eb9f1a1b104f197ed4a107145d8f0",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1364871: Add a function to update frame pseudo-element styles during the post-traversal, and restyle bullet frames. r=heycam\n\nMozReview-Commit-ID: 9m0jqmxjOb6",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 237,
"line": "  }\n",
"lineno": 685,
"revdate": [1495231102.0, -7200]
}, {
"node": "ca5ce34ad1cf84d8744ab12ef35948d0f4baaac2",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1364871: Restyle ::backdrop too. r=heycam\n\nMozReview-Commit-ID: BGWRiaeZiD8",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 275,
"line": "\n",
"lineno": 686,
"revdate": [1495231163.0, -7200]
}, {
"node": "87dac0783b76c8dcf77e6d3b54a306a9a1186906",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1375674: Don't use the owner's changes handled for the backdrop frame. r=heycam\n\nMozReview-Commit-ID: GpIQwqge8L",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 325,
"line": "  UpdateBackdropIfNeeded(\n",
"lineno": 687,
"revdate": [1498238780.0, -7200]
}, {
"node": "87dac0783b76c8dcf77e6d3b54a306a9a1186906",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1375674: Don't use the owner's changes handled for the backdrop frame. r=heycam\n\nMozReview-Commit-ID: GpIQwqge8L",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 326,
"line": "    aFrame, aRestyleState.StyleSet(), aRestyleState.ChangeList());\n",
"lineno": 688,
"revdate": [1498238780.0, -7200]
}, {
"node": "09851f5d647eb9f1a1b104f197ed4a107145d8f0",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1364871: Add a function to update frame pseudo-element styles during the post-traversal, and restyle bullet frames. r=heycam\n\nMozReview-Commit-ID: 9m0jqmxjOb6",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 238,
"line": "}\n",
"lineno": 689,
"revdate": [1495231102.0, -7200]
}, {
"node": "09851f5d647eb9f1a1b104f197ed4a107145d8f0",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1364871: Add a function to update frame pseudo-element styles during the post-traversal, and restyle bullet frames. r=heycam\n\nMozReview-Commit-ID: 9m0jqmxjOb6",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 239,
"line": "\n",
"lineno": 690,
"revdate": [1495231102.0, -7200]
}, {
"node": "2a54187a362e9809ee0a45c4bb7008705f3016b9",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1390409 part 2 - Replace aParentWasRestyled with a bitflag. r=emilio\n\nMozReview-Commit-ID: 49C1N6LNXi7",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 648,
"line": "enum class ServoPostTraversalFlags : uint32_t\n",
"lineno": 691,
"revdate": [1503896015.0, -36000]
}, {
"node": "2a54187a362e9809ee0a45c4bb7008705f3016b9",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1390409 part 2 - Replace aParentWasRestyled with a bitflag. r=emilio\n\nMozReview-Commit-ID: 49C1N6LNXi7",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 649,
"line": "{\n",
"lineno": 692,
"revdate": [1503896015.0, -36000]
}, {
"node": "2a54187a362e9809ee0a45c4bb7008705f3016b9",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1390409 part 2 - Replace aParentWasRestyled with a bitflag. r=emilio\n\nMozReview-Commit-ID: 49C1N6LNXi7",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 650,
"line": "  Empty = 0,\n",
"lineno": 693,
"revdate": [1503896015.0, -36000]
}, {
"node": "2a54187a362e9809ee0a45c4bb7008705f3016b9",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1390409 part 2 - Replace aParentWasRestyled with a bitflag. r=emilio\n\nMozReview-Commit-ID: 49C1N6LNXi7",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 651,
"line": "  // Whether parent was restyled.\n",
"lineno": 694,
"revdate": [1503896015.0, -36000]
}, {
"node": "2a54187a362e9809ee0a45c4bb7008705f3016b9",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1390409 part 2 - Replace aParentWasRestyled with a bitflag. r=emilio\n\nMozReview-Commit-ID: 49C1N6LNXi7",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 652,
"line": "  ParentWasRestyled = 1 \u003c\u003c 0,\n",
"lineno": 695,
"revdate": [1503896015.0, -36000]
}, {
"node": "a5c00f0df5be05a13ec87004719a0ac4d410cb22",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1390409 part 3 - Send a11y notification for visibility changes. r=emilio\n\nMozReview-Commit-ID: I48OhzekXvD",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 653,
"line": "  // Skip sending accessibility notifications for all descendants.\n",
"lineno": 696,
"revdate": [1503903505.0, -36000]
}, {
"node": "a5c00f0df5be05a13ec87004719a0ac4d410cb22",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1390409 part 3 - Send a11y notification for visibility changes. r=emilio\n\nMozReview-Commit-ID: I48OhzekXvD",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 654,
"line": "  SkipA11yNotifications = 1 \u003c\u003c 1,\n",
"lineno": 697,
"revdate": [1503903505.0, -36000]
}, {
"node": "a5c00f0df5be05a13ec87004719a0ac4d410cb22",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1390409 part 3 - Send a11y notification for visibility changes. r=emilio\n\nMozReview-Commit-ID: I48OhzekXvD",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 655,
"line": "  // Always send accessibility notifications if the element is shown.\n",
"lineno": 698,
"revdate": [1503903505.0, -36000]
}, {
"node": "a5c00f0df5be05a13ec87004719a0ac4d410cb22",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1390409 part 3 - Send a11y notification for visibility changes. r=emilio\n\nMozReview-Commit-ID: I48OhzekXvD",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 656,
"line": "  // The SkipA11yNotifications flag above overrides this flag.\n",
"lineno": 699,
"revdate": [1503903505.0, -36000]
}, {
"node": "a5c00f0df5be05a13ec87004719a0ac4d410cb22",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1390409 part 3 - Send a11y notification for visibility changes. r=emilio\n\nMozReview-Commit-ID: I48OhzekXvD",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 657,
"line": "  SendA11yNotificationsIfShown = 1 \u003c\u003c 2,\n",
"lineno": 700,
"revdate": [1503903505.0, -36000]
}, {
"node": "2a54187a362e9809ee0a45c4bb7008705f3016b9",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1390409 part 2 - Replace aParentWasRestyled with a bitflag. r=emilio\n\nMozReview-Commit-ID: 49C1N6LNXi7",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 653,
"line": "};\n",
"lineno": 701,
"revdate": [1503896015.0, -36000]
}, {
"node": "2a54187a362e9809ee0a45c4bb7008705f3016b9",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1390409 part 2 - Replace aParentWasRestyled with a bitflag. r=emilio\n\nMozReview-Commit-ID: 49C1N6LNXi7",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 654,
"line": "\n",
"lineno": 702,
"revdate": [1503896015.0, -36000]
}, {
"node": "2a54187a362e9809ee0a45c4bb7008705f3016b9",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1390409 part 2 - Replace aParentWasRestyled with a bitflag. r=emilio\n\nMozReview-Commit-ID: 49C1N6LNXi7",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 655,
"line": "MOZ_MAKE_ENUM_CLASS_BITWISE_OPERATORS(ServoPostTraversalFlags)\n",
"lineno": 703,
"revdate": [1503896015.0, -36000]
}, {
"node": "2a54187a362e9809ee0a45c4bb7008705f3016b9",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1390409 part 2 - Replace aParentWasRestyled with a bitflag. r=emilio\n\nMozReview-Commit-ID: 49C1N6LNXi7",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 656,
"line": "\n",
"lineno": 704,
"revdate": [1503896015.0, -36000]
}, {
"node": "a5c00f0df5be05a13ec87004719a0ac4d410cb22",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1390409 part 3 - Send a11y notification for visibility changes. r=emilio\n\nMozReview-Commit-ID: I48OhzekXvD",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 662,
"line": "// Send proper accessibility notifications and return post traversal\n",
"lineno": 705,
"revdate": [1503903505.0, -36000]
}, {
"node": "a5c00f0df5be05a13ec87004719a0ac4d410cb22",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1390409 part 3 - Send a11y notification for visibility changes. r=emilio\n\nMozReview-Commit-ID: I48OhzekXvD",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 663,
"line": "// flags for kids.\n",
"lineno": 706,
"revdate": [1503903505.0, -36000]
}, {
"node": "a5c00f0df5be05a13ec87004719a0ac4d410cb22",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1390409 part 3 - Send a11y notification for visibility changes. r=emilio\n\nMozReview-Commit-ID: I48OhzekXvD",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 664,
"line": "static ServoPostTraversalFlags\n",
"lineno": 707,
"revdate": [1503903505.0, -36000]
}, {
"node": "a5c00f0df5be05a13ec87004719a0ac4d410cb22",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1390409 part 3 - Send a11y notification for visibility changes. r=emilio\n\nMozReview-Commit-ID: I48OhzekXvD",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 665,
"line": "SendA11yNotifications(nsPresContext* aPresContext,\n",
"lineno": 708,
"revdate": [1503903505.0, -36000]
}, {
"node": "a5c00f0df5be05a13ec87004719a0ac4d410cb22",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1390409 part 3 - Send a11y notification for visibility changes. r=emilio\n\nMozReview-Commit-ID: I48OhzekXvD",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 666,
"line": "                      Element* aElement,\n",
"lineno": 709,
"revdate": [1503903505.0, -36000]
}, {
"node": "a5c00f0df5be05a13ec87004719a0ac4d410cb22",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1390409 part 3 - Send a11y notification for visibility changes. r=emilio\n\nMozReview-Commit-ID: I48OhzekXvD",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 667,
"line": "                      nsStyleContext* aOldStyleContext,\n",
"lineno": 710,
"revdate": [1503903505.0, -36000]
}, {
"node": "a5c00f0df5be05a13ec87004719a0ac4d410cb22",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1390409 part 3 - Send a11y notification for visibility changes. r=emilio\n\nMozReview-Commit-ID: I48OhzekXvD",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 668,
"line": "                      nsStyleContext* aNewStyleContext,\n",
"lineno": 711,
"revdate": [1503903505.0, -36000]
}, {
"node": "a5c00f0df5be05a13ec87004719a0ac4d410cb22",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1390409 part 3 - Send a11y notification for visibility changes. r=emilio\n\nMozReview-Commit-ID: I48OhzekXvD",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 669,
"line": "                      ServoPostTraversalFlags aFlags)\n",
"lineno": 712,
"revdate": [1503903505.0, -36000]
}, {
"node": "a5c00f0df5be05a13ec87004719a0ac4d410cb22",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1390409 part 3 - Send a11y notification for visibility changes. r=emilio\n\nMozReview-Commit-ID: I48OhzekXvD",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 670,
"line": "{\n",
"lineno": 713,
"revdate": [1503903505.0, -36000]
}, {
"node": "a5c00f0df5be05a13ec87004719a0ac4d410cb22",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1390409 part 3 - Send a11y notification for visibility changes. r=emilio\n\nMozReview-Commit-ID: I48OhzekXvD",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 671,
"line": "  using Flags = ServoPostTraversalFlags;\n",
"lineno": 714,
"revdate": [1503903505.0, -36000]
}, {
"node": "a5c00f0df5be05a13ec87004719a0ac4d410cb22",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1390409 part 3 - Send a11y notification for visibility changes. r=emilio\n\nMozReview-Commit-ID: I48OhzekXvD",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 672,
"line": "  MOZ_ASSERT(!(aFlags & Flags::SkipA11yNotifications) ||\n",
"lineno": 715,
"revdate": [1503903505.0, -36000]
}, {
"node": "a5c00f0df5be05a13ec87004719a0ac4d410cb22",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1390409 part 3 - Send a11y notification for visibility changes. r=emilio\n\nMozReview-Commit-ID: I48OhzekXvD",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 673,
"line": "             !(aFlags & Flags::SendA11yNotificationsIfShown),\n",
"lineno": 716,
"revdate": [1503903505.0, -36000]
}, {
"node": "a5c00f0df5be05a13ec87004719a0ac4d410cb22",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1390409 part 3 - Send a11y notification for visibility changes. r=emilio\n\nMozReview-Commit-ID: I48OhzekXvD",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 674,
"line": "             \"The two a11y flags should never be set together\");\n",
"lineno": 717,
"revdate": [1503903505.0, -36000]
}, {
"node": "a5c00f0df5be05a13ec87004719a0ac4d410cb22",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1390409 part 3 - Send a11y notification for visibility changes. r=emilio\n\nMozReview-Commit-ID: I48OhzekXvD",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 675,
"line": "\n",
"lineno": 718,
"revdate": [1503903505.0, -36000]
}, {
"node": "a5c00f0df5be05a13ec87004719a0ac4d410cb22",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1390409 part 3 - Send a11y notification for visibility changes. r=emilio\n\nMozReview-Commit-ID: I48OhzekXvD",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 676,
"line": "#ifdef ACCESSIBILITY\n",
"lineno": 719,
"revdate": [1503903505.0, -36000]
}, {
"node": "a5c00f0df5be05a13ec87004719a0ac4d410cb22",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1390409 part 3 - Send a11y notification for visibility changes. r=emilio\n\nMozReview-Commit-ID: I48OhzekXvD",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 677,
"line": "  nsAccessibilityService* accService = GetAccService();\n",
"lineno": 720,
"revdate": [1503903505.0, -36000]
}, {
"node": "a5c00f0df5be05a13ec87004719a0ac4d410cb22",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1390409 part 3 - Send a11y notification for visibility changes. r=emilio\n\nMozReview-Commit-ID: I48OhzekXvD",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 678,
"line": "  if (!accService) {\n",
"lineno": 721,
"revdate": [1503903505.0, -36000]
}, {
"node": "a5c00f0df5be05a13ec87004719a0ac4d410cb22",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1390409 part 3 - Send a11y notification for visibility changes. r=emilio\n\nMozReview-Commit-ID: I48OhzekXvD",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 679,
"line": "    // If we don't have accessibility service, accessibility is not\n",
"lineno": 722,
"revdate": [1503903505.0, -36000]
}, {
"node": "a5c00f0df5be05a13ec87004719a0ac4d410cb22",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1390409 part 3 - Send a11y notification for visibility changes. r=emilio\n\nMozReview-Commit-ID: I48OhzekXvD",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 680,
"line": "    // enabled. Just skip everything.\n",
"lineno": 723,
"revdate": [1503903505.0, -36000]
}, {
"node": "a5c00f0df5be05a13ec87004719a0ac4d410cb22",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1390409 part 3 - Send a11y notification for visibility changes. r=emilio\n\nMozReview-Commit-ID: I48OhzekXvD",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 681,
"line": "    return Flags::Empty;\n",
"lineno": 724,
"revdate": [1503903505.0, -36000]
}, {
"node": "a5c00f0df5be05a13ec87004719a0ac4d410cb22",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1390409 part 3 - Send a11y notification for visibility changes. r=emilio\n\nMozReview-Commit-ID: I48OhzekXvD",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 682,
"line": "  }\n",
"lineno": 725,
"revdate": [1503903505.0, -36000]
}, {
"node": "a5c00f0df5be05a13ec87004719a0ac4d410cb22",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1390409 part 3 - Send a11y notification for visibility changes. r=emilio\n\nMozReview-Commit-ID: I48OhzekXvD",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 683,
"line": "  if (aFlags & Flags::SkipA11yNotifications) {\n",
"lineno": 726,
"revdate": [1503903505.0, -36000]
}, {
"node": "a5c00f0df5be05a13ec87004719a0ac4d410cb22",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1390409 part 3 - Send a11y notification for visibility changes. r=emilio\n\nMozReview-Commit-ID: I48OhzekXvD",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 684,
"line": "    // Propogate the skipping flag to descendants.\n",
"lineno": 727,
"revdate": [1503903505.0, -36000]
}, {
"node": "a5c00f0df5be05a13ec87004719a0ac4d410cb22",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1390409 part 3 - Send a11y notification for visibility changes. r=emilio\n\nMozReview-Commit-ID: I48OhzekXvD",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 685,
"line": "    return Flags::SkipA11yNotifications;\n",
"lineno": 728,
"revdate": [1503903505.0, -36000]
}, {
"node": "a5c00f0df5be05a13ec87004719a0ac4d410cb22",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1390409 part 3 - Send a11y notification for visibility changes. r=emilio\n\nMozReview-Commit-ID: I48OhzekXvD",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 686,
"line": "  }\n",
"lineno": 729,
"revdate": [1503903505.0, -36000]
}, {
"node": "a5c00f0df5be05a13ec87004719a0ac4d410cb22",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1390409 part 3 - Send a11y notification for visibility changes. r=emilio\n\nMozReview-Commit-ID: I48OhzekXvD",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 687,
"line": "\n",
"lineno": 730,
"revdate": [1503903505.0, -36000]
}, {
"node": "a5c00f0df5be05a13ec87004719a0ac4d410cb22",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1390409 part 3 - Send a11y notification for visibility changes. r=emilio\n\nMozReview-Commit-ID: I48OhzekXvD",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 688,
"line": "  bool needsNotify = false;\n",
"lineno": 731,
"revdate": [1503903505.0, -36000]
}, {
"node": "a5c00f0df5be05a13ec87004719a0ac4d410cb22",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1390409 part 3 - Send a11y notification for visibility changes. r=emilio\n\nMozReview-Commit-ID: I48OhzekXvD",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 689,
"line": "  bool isVisible = aNewStyleContext-\u003eStyleVisibility()-\u003eIsVisible();\n",
"lineno": 732,
"revdate": [1503903505.0, -36000]
}, {
"node": "a5c00f0df5be05a13ec87004719a0ac4d410cb22",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1390409 part 3 - Send a11y notification for visibility changes. r=emilio\n\nMozReview-Commit-ID: I48OhzekXvD",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 690,
"line": "  if (aFlags & Flags::SendA11yNotificationsIfShown) {\n",
"lineno": 733,
"revdate": [1503903505.0, -36000]
}, {
"node": "a5c00f0df5be05a13ec87004719a0ac4d410cb22",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1390409 part 3 - Send a11y notification for visibility changes. r=emilio\n\nMozReview-Commit-ID: I48OhzekXvD",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 691,
"line": "    if (!isVisible) {\n",
"lineno": 734,
"revdate": [1503903505.0, -36000]
}, {
"node": "a5c00f0df5be05a13ec87004719a0ac4d410cb22",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1390409 part 3 - Send a11y notification for visibility changes. r=emilio\n\nMozReview-Commit-ID: I48OhzekXvD",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 692,
"line": "      // Propagate the sending-if-shown flag to descendants.\n",
"lineno": 735,
"revdate": [1503903505.0, -36000]
}, {
"node": "a5c00f0df5be05a13ec87004719a0ac4d410cb22",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1390409 part 3 - Send a11y notification for visibility changes. r=emilio\n\nMozReview-Commit-ID: I48OhzekXvD",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 693,
"line": "      return Flags::SendA11yNotificationsIfShown;\n",
"lineno": 736,
"revdate": [1503903505.0, -36000]
}, {
"node": "a5c00f0df5be05a13ec87004719a0ac4d410cb22",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1390409 part 3 - Send a11y notification for visibility changes. r=emilio\n\nMozReview-Commit-ID: I48OhzekXvD",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 694,
"line": "    }\n",
"lineno": 737,
"revdate": [1503903505.0, -36000]
}, {
"node": "a5c00f0df5be05a13ec87004719a0ac4d410cb22",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1390409 part 3 - Send a11y notification for visibility changes. r=emilio\n\nMozReview-Commit-ID: I48OhzekXvD",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 695,
"line": "    // We have asked accessibility service to remove the whole subtree\n",
"lineno": 738,
"revdate": [1503903505.0, -36000]
}, {
"node": "a5c00f0df5be05a13ec87004719a0ac4d410cb22",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1390409 part 3 - Send a11y notification for visibility changes. r=emilio\n\nMozReview-Commit-ID: I48OhzekXvD",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 696,
"line": "    // of element which becomes invisible from the accessible tree, but\n",
"lineno": 739,
"revdate": [1503903505.0, -36000]
}, {
"node": "a5c00f0df5be05a13ec87004719a0ac4d410cb22",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1390409 part 3 - Send a11y notification for visibility changes. r=emilio\n\nMozReview-Commit-ID: I48OhzekXvD",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 697,
"line": "    // this element is visible, so we need to add it back.\n",
"lineno": 740,
"revdate": [1503903505.0, -36000]
}, {
"node": "a5c00f0df5be05a13ec87004719a0ac4d410cb22",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1390409 part 3 - Send a11y notification for visibility changes. r=emilio\n\nMozReview-Commit-ID: I48OhzekXvD",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 698,
"line": "    needsNotify = true;\n",
"lineno": 741,
"revdate": [1503903505.0, -36000]
}, {
"node": "a5c00f0df5be05a13ec87004719a0ac4d410cb22",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1390409 part 3 - Send a11y notification for visibility changes. r=emilio\n\nMozReview-Commit-ID: I48OhzekXvD",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 699,
"line": "  } else {\n",
"lineno": 742,
"revdate": [1503903505.0, -36000]
}, {
"node": "a5c00f0df5be05a13ec87004719a0ac4d410cb22",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1390409 part 3 - Send a11y notification for visibility changes. r=emilio\n\nMozReview-Commit-ID: I48OhzekXvD",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 700,
"line": "    // If we shouldn't skip in any case, we need to check whether our\n",
"lineno": 743,
"revdate": [1503903505.0, -36000]
}, {
"node": "a5c00f0df5be05a13ec87004719a0ac4d410cb22",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1390409 part 3 - Send a11y notification for visibility changes. r=emilio\n\nMozReview-Commit-ID: I48OhzekXvD",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 701,
"line": "    // own visibility has changed.\n",
"lineno": 744,
"revdate": [1503903505.0, -36000]
}, {
"node": "a5c00f0df5be05a13ec87004719a0ac4d410cb22",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1390409 part 3 - Send a11y notification for visibility changes. r=emilio\n\nMozReview-Commit-ID: I48OhzekXvD",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 702,
"line": "    bool wasVisible = aOldStyleContext-\u003eStyleVisibility()-\u003eIsVisible();\n",
"lineno": 745,
"revdate": [1503903505.0, -36000]
}, {
"node": "a5c00f0df5be05a13ec87004719a0ac4d410cb22",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1390409 part 3 - Send a11y notification for visibility changes. r=emilio\n\nMozReview-Commit-ID: I48OhzekXvD",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 703,
"line": "    needsNotify = wasVisible != isVisible;\n",
"lineno": 746,
"revdate": [1503903505.0, -36000]
}, {
"node": "a5c00f0df5be05a13ec87004719a0ac4d410cb22",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1390409 part 3 - Send a11y notification for visibility changes. r=emilio\n\nMozReview-Commit-ID: I48OhzekXvD",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 704,
"line": "  }\n",
"lineno": 747,
"revdate": [1503903505.0, -36000]
}, {
"node": "a5c00f0df5be05a13ec87004719a0ac4d410cb22",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1390409 part 3 - Send a11y notification for visibility changes. r=emilio\n\nMozReview-Commit-ID: I48OhzekXvD",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 705,
"line": "\n",
"lineno": 748,
"revdate": [1503903505.0, -36000]
}, {
"node": "a5c00f0df5be05a13ec87004719a0ac4d410cb22",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1390409 part 3 - Send a11y notification for visibility changes. r=emilio\n\nMozReview-Commit-ID: I48OhzekXvD",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 706,
"line": "  if (needsNotify) {\n",
"lineno": 749,
"revdate": [1503903505.0, -36000]
}, {
"node": "a5c00f0df5be05a13ec87004719a0ac4d410cb22",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1390409 part 3 - Send a11y notification for visibility changes. r=emilio\n\nMozReview-Commit-ID: I48OhzekXvD",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 707,
"line": "    nsIPresShell* presShell = aPresContext-\u003ePresShell();\n",
"lineno": 750,
"revdate": [1503903505.0, -36000]
}, {
"node": "a5c00f0df5be05a13ec87004719a0ac4d410cb22",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1390409 part 3 - Send a11y notification for visibility changes. r=emilio\n\nMozReview-Commit-ID: I48OhzekXvD",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 708,
"line": "    if (isVisible) {\n",
"lineno": 751,
"revdate": [1503903505.0, -36000]
}, {
"node": "a5c00f0df5be05a13ec87004719a0ac4d410cb22",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1390409 part 3 - Send a11y notification for visibility changes. r=emilio\n\nMozReview-Commit-ID: I48OhzekXvD",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 709,
"line": "      accService-\u003eContentRangeInserted(presShell, aElement-\u003eGetParent(),\n",
"lineno": 752,
"revdate": [1503903505.0, -36000]
}, {
"node": "a5c00f0df5be05a13ec87004719a0ac4d410cb22",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1390409 part 3 - Send a11y notification for visibility changes. r=emilio\n\nMozReview-Commit-ID: I48OhzekXvD",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 710,
"line": "                                       aElement, aElement-\u003eGetNextSibling());\n",
"lineno": 753,
"revdate": [1503903505.0, -36000]
}, {
"node": "a5c00f0df5be05a13ec87004719a0ac4d410cb22",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1390409 part 3 - Send a11y notification for visibility changes. r=emilio\n\nMozReview-Commit-ID: I48OhzekXvD",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 711,
"line": "      // We are adding the subtree. Accessibility service would handle\n",
"lineno": 754,
"revdate": [1503903505.0, -36000]
}, {
"node": "a5c00f0df5be05a13ec87004719a0ac4d410cb22",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1390409 part 3 - Send a11y notification for visibility changes. r=emilio\n\nMozReview-Commit-ID: I48OhzekXvD",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 712,
"line": "      // descendants, so we should just skip them from notifying.\n",
"lineno": 755,
"revdate": [1503903505.0, -36000]
}, {
"node": "a5c00f0df5be05a13ec87004719a0ac4d410cb22",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1390409 part 3 - Send a11y notification for visibility changes. r=emilio\n\nMozReview-Commit-ID: I48OhzekXvD",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 713,
"line": "      return Flags::SkipA11yNotifications;\n",
"lineno": 756,
"revdate": [1503903505.0, -36000]
}, {
"node": "a5c00f0df5be05a13ec87004719a0ac4d410cb22",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1390409 part 3 - Send a11y notification for visibility changes. r=emilio\n\nMozReview-Commit-ID: I48OhzekXvD",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 714,
"line": "    }\n",
"lineno": 757,
"revdate": [1503903505.0, -36000]
}, {
"node": "a5c00f0df5be05a13ec87004719a0ac4d410cb22",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1390409 part 3 - Send a11y notification for visibility changes. r=emilio\n\nMozReview-Commit-ID: I48OhzekXvD",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 715,
"line": "    // Remove the subtree of this invisible element, and ask any shown\n",
"lineno": 758,
"revdate": [1503903505.0, -36000]
}, {
"node": "a5c00f0df5be05a13ec87004719a0ac4d410cb22",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1390409 part 3 - Send a11y notification for visibility changes. r=emilio\n\nMozReview-Commit-ID: I48OhzekXvD",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 716,
"line": "    // descendant to add themselves back.\n",
"lineno": 759,
"revdate": [1503903505.0, -36000]
}, {
"node": "a5c00f0df5be05a13ec87004719a0ac4d410cb22",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1390409 part 3 - Send a11y notification for visibility changes. r=emilio\n\nMozReview-Commit-ID: I48OhzekXvD",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 717,
"line": "    accService-\u003eContentRemoved(presShell, aElement);\n",
"lineno": 760,
"revdate": [1503903505.0, -36000]
}, {
"node": "a5c00f0df5be05a13ec87004719a0ac4d410cb22",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1390409 part 3 - Send a11y notification for visibility changes. r=emilio\n\nMozReview-Commit-ID: I48OhzekXvD",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 718,
"line": "    return Flags::SendA11yNotificationsIfShown;\n",
"lineno": 761,
"revdate": [1503903505.0, -36000]
}, {
"node": "a5c00f0df5be05a13ec87004719a0ac4d410cb22",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1390409 part 3 - Send a11y notification for visibility changes. r=emilio\n\nMozReview-Commit-ID: I48OhzekXvD",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 719,
"line": "  }\n",
"lineno": 762,
"revdate": [1503903505.0, -36000]
}, {
"node": "a5c00f0df5be05a13ec87004719a0ac4d410cb22",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1390409 part 3 - Send a11y notification for visibility changes. r=emilio\n\nMozReview-Commit-ID: I48OhzekXvD",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 720,
"line": "#endif\n",
"lineno": 763,
"revdate": [1503903505.0, -36000]
}, {
"node": "a5c00f0df5be05a13ec87004719a0ac4d410cb22",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1390409 part 3 - Send a11y notification for visibility changes. r=emilio\n\nMozReview-Commit-ID: I48OhzekXvD",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 721,
"line": "\n",
"lineno": 764,
"revdate": [1503903505.0, -36000]
}, {
"node": "a5c00f0df5be05a13ec87004719a0ac4d410cb22",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1390409 part 3 - Send a11y notification for visibility changes. r=emilio\n\nMozReview-Commit-ID: I48OhzekXvD",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 722,
"line": "  return Flags::Empty;\n",
"lineno": 765,
"revdate": [1503903505.0, -36000]
}, {
"node": "a5c00f0df5be05a13ec87004719a0ac4d410cb22",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1390409 part 3 - Send a11y notification for visibility changes. r=emilio\n\nMozReview-Commit-ID: I48OhzekXvD",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 723,
"line": "}\n",
"lineno": 766,
"revdate": [1503903505.0, -36000]
}, {
"node": "a5c00f0df5be05a13ec87004719a0ac4d410cb22",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1390409 part 3 - Send a11y notification for visibility changes. r=emilio\n\nMozReview-Commit-ID: I48OhzekXvD",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 724,
"line": "\n",
"lineno": 767,
"revdate": [1503903505.0, -36000]
}, {
"node": "e0477439b222422a105c9e108878fadf1f36354b",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1357461: Ensure not to increment the restyle generation if we haven't restyled after all. r=heycam\n\nThis can happen with content attribute or state changes that end up not\ngenerating any hint.\n\nIn particular, in the media_queries_dynamic.html case, the iframe resize was\ntoggling a few scrollbar attributes, which made us never pass the \"didn't\nrestyle\" test, even though the test really passed.\n\nI'll probably need to add a workaround to assume we use viewport units, so\nprobably won't pass for long.\n\nMozReview-Commit-ID: 2oEfic5yaOy",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 286,
"line": "bool\n",
"lineno": 768,
"revdate": [1496431661.0, -7200]
}, {
"node": "98a02686d1ba70c41f558e8f129a4089554d8e88",
"author": "Hiroyuki Ikezoe \u003chikezoe@mozilla.com\u003e",
"desc": "Bug 1371450 - Don't traverse normal dirty elements in ProcessPostTraversal when we process throttled animations restyle for event handling. r=emilio\n\nWhen we process throttled animations restyle for event handling, we skip normal\ntraversal at all, so after Servo_TraverseSubtree, normally there remains\nunstyled elements which have to be processed in normal traversal later. These\nelements should be skipped in ProcessPostTraversal too since it's not yet styled!\n\nMozReview-Commit-ID: LgyWQpiFZ8e",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 452,
"line": "ServoRestyleManager::ProcessPostTraversal(\n",
"lineno": 769,
"revdate": [1500091754.0, -32400]
}, {
"node": "98a02686d1ba70c41f558e8f129a4089554d8e88",
"author": "Hiroyuki Ikezoe \u003chikezoe@mozilla.com\u003e",
"desc": "Bug 1371450 - Don't traverse normal dirty elements in ProcessPostTraversal when we process throttled animations restyle for event handling. r=emilio\n\nWhen we process throttled animations restyle for event handling, we skip normal\ntraversal at all, so after Servo_TraverseSubtree, normally there remains\nunstyled elements which have to be processed in normal traversal later. These\nelements should be skipped in ProcessPostTraversal too since it's not yet styled!\n\nMozReview-Commit-ID: LgyWQpiFZ8e",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 453,
"line": "  Element* aElement,\n",
"lineno": 770,
"revdate": [1500091754.0, -32400]
}, {
"node": "4d5e5d40c7ee04bba9fc8b96322a9aa10c220107",
"author": "Manish Goregaokar \u003cmanishearth@gmail.com\u003e",
"desc": "Bug 1367904 - Part 11: stylo: Use ServoStyleContext in ServoStyleSet/ServoRestyleManager; r=bholley\n\nMozReview-Commit-ID: JJOBixTSCZq\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 458,
"line": "  ServoStyleContext* aParentContext,\n",
"lineno": 771,
"revdate": [1500316924.0, 25200]
}, {
"node": "98a02686d1ba70c41f558e8f129a4089554d8e88",
"author": "Hiroyuki Ikezoe \u003chikezoe@mozilla.com\u003e",
"desc": "Bug 1371450 - Don't traverse normal dirty elements in ProcessPostTraversal when we process throttled animations restyle for event handling. r=emilio\n\nWhen we process throttled animations restyle for event handling, we skip normal\ntraversal at all, so after Servo_TraverseSubtree, normally there remains\nunstyled elements which have to be processed in normal traversal later. These\nelements should be skipped in ProcessPostTraversal too since it's not yet styled!\n\nMozReview-Commit-ID: LgyWQpiFZ8e",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 455,
"line": "  ServoRestyleState& aRestyleState,\n",
"lineno": 772,
"revdate": [1500091754.0, -32400]
}, {
"node": "2a54187a362e9809ee0a45c4bb7008705f3016b9",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1390409 part 2 - Replace aParentWasRestyled with a bitflag. r=emilio\n\nMozReview-Commit-ID: 49C1N6LNXi7",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 662,
"line": "  ServoPostTraversalFlags aFlags)\n",
"lineno": 773,
"revdate": [1503896015.0, -36000]
}, {
"node": "6ba3d1fe1de9e8dbb77e49c18bda7b602e3c8a08",
"author": "Emilio Cobos \u00c1lvarez \u003cecoal95@gmail.com\u003e",
"desc": "Bug 1286445: stylo: Support restyles of non-pseudo content on state change. r=heycam\n\nThis includes, for example :hover.\n\nAlso removes the call to IsStyledByServo() in the document constructor, it's not\nonly unnecessary, but also we call UpdateStyleBackendType() too early.\n\nMozReview-Commit-ID: 4YfCdmLoSxu\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 100,
"line": "{\n",
"lineno": 774,
"revdate": [1468442567.0, 25200]
}, {
"node": "a300522006bc5e93e841e0132fa940874180afcd",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324661 part 1.  When recreating style contexts for elements in stylo, use the right frame (not the primary frame!) for tables.  r=bholley,emilio\n\nFor a table, the primary frame is the table wrapper anonymous box.  That\nanonymous box inherits style from its _child_ table frame, which is the frame that\nhas the actual style for the element.  So we want to use the stylo-computed\nstyle for the table frame, and then compute an updated style for the table\nwrapper too, because some things (like absolute positioning) are done for the\ntable wrapper anonymous box, not the table frame.",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 151,
"line": "  nsIFrame* styleFrame = nsLayoutUtils::GetStyleFrame(aElement);\n",
"lineno": 775,
"revdate": [1487361159.0, 18000]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 705,
"line": "  nsIFrame* primaryFrame = aElement-\u003eGetPrimaryFrame();\n",
"lineno": 776,
"revdate": [1502424626.0, 14400]
}, {
"node": "c49ec67995bcee88868679ff1e8410bb980393ef",
"author": "Emilio Cobos \u00c1lvarez \u003cecoal95@gmail.com\u003e",
"desc": "Bug 1314161: stylo: Don't try to recreate style contexts for non-element and non-text nodes. r=bholley\n\nSigned-off-by: Emilio Cobos \u00c1lvarez \u003cecoal95@gmail.com\u003e\n\nMozReview-Commit-ID: 4qvF2T7BR4h\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 76,
"line": "\n",
"lineno": 777,
"revdate": [1477995898.0, -3600]
}, {
"node": "1b05406b224819cfc636963bc9e0df0f04a92d7f",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1375674: Track the owner that represents the changes handled, and fix a bunch of issues while at it. r=heycam\n\nIn particular, this fixes:\n\n * Restyling of \u003carea\u003e elements that reuse the primary frame mapping for the\n   image map.\n\n * Restyling of children of display: contents elements when the display:\n   contents element generates a hint.\n\n * Restyling of out-of-flows (if my analysis in the bug is right).\n\n * Restyling of the ::backdrop pseudo-element.\n\n * Restyling of the Viewport frame.\n\nI only managed to do a reftest for the second one, but the rest of them are\ncovered by the assertions added.\n\nMozReview-Commit-ID: E7QtiQ1vPqu",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 420,
"line": "  // NOTE(emilio): This is needed because for table frames the bit is set on the\n",
"lineno": 778,
"revdate": [1498239095.0, -7200]
}, {
"node": "1b05406b224819cfc636963bc9e0df0f04a92d7f",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1375674: Track the owner that represents the changes handled, and fix a bunch of issues while at it. r=heycam\n\nIn particular, this fixes:\n\n * Restyling of \u003carea\u003e elements that reuse the primary frame mapping for the\n   image map.\n\n * Restyling of children of display: contents elements when the display:\n   contents element generates a hint.\n\n * Restyling of out-of-flows (if my analysis in the bug is right).\n\n * Restyling of the ::backdrop pseudo-element.\n\n * Restyling of the Viewport frame.\n\nI only managed to do a reftest for the second one, but the rest of them are\ncovered by the assertions added.\n\nMozReview-Commit-ID: E7QtiQ1vPqu",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 421,
"line": "  // table wrapper (which is the primary frame), not on the table itself.\n",
"lineno": 779,
"revdate": [1498239095.0, -7200]
}, {
"node": "1b05406b224819cfc636963bc9e0df0f04a92d7f",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1375674: Track the owner that represents the changes handled, and fix a bunch of issues while at it. r=heycam\n\nIn particular, this fixes:\n\n * Restyling of \u003carea\u003e elements that reuse the primary frame mapping for the\n   image map.\n\n * Restyling of children of display: contents elements when the display:\n   contents element generates a hint.\n\n * Restyling of out-of-flows (if my analysis in the bug is right).\n\n * Restyling of the ::backdrop pseudo-element.\n\n * Restyling of the Viewport frame.\n\nI only managed to do a reftest for the second one, but the rest of them are\ncovered by the assertions added.\n\nMozReview-Commit-ID: E7QtiQ1vPqu",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 422,
"line": "  const bool isOutOfFlow =\n",
"lineno": 780,
"revdate": [1498239095.0, -7200]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 710,
"line": "    primaryFrame &&\n",
"lineno": 781,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 711,
"line": "    primaryFrame-\u003eHasAnyStateBits(NS_FRAME_OUT_OF_FLOW);\n",
"lineno": 782,
"revdate": [1502424626.0, 14400]
}, {
"node": "1b05406b224819cfc636963bc9e0df0f04a92d7f",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1375674: Track the owner that represents the changes handled, and fix a bunch of issues while at it. r=heycam\n\nIn particular, this fixes:\n\n * Restyling of \u003carea\u003e elements that reuse the primary frame mapping for the\n   image map.\n\n * Restyling of children of display: contents elements when the display:\n   contents element generates a hint.\n\n * Restyling of out-of-flows (if my analysis in the bug is right).\n\n * Restyling of the ::backdrop pseudo-element.\n\n * Restyling of the Viewport frame.\n\nI only managed to do a reftest for the second one, but the rest of them are\ncovered by the assertions added.\n\nMozReview-Commit-ID: E7QtiQ1vPqu",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 425,
"line": "\n",
"lineno": 783,
"revdate": [1498239095.0, -7200]
}, {
"node": "4a2a58be8c6c54dbf85b90aa85e4d4281e72088f",
"author": "Bobby Holley \u003cbobbyholley@gmail.com\u003e",
"desc": "Bug 1338921 - Handle lazy frame construction in the regular post-servo pass. r=emilio\n\nMozReview-Commit-ID: FSXKAiyZDzt\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 141,
"line": "  // Grab the change hint from Servo.\n",
"lineno": 784,
"revdate": [1488251167.0, 28800]
}, {
"node": "827b15ee4c8d1a72ea7d2c43e6a47c3c3d8853ec",
"author": "Hiroyuki Ikezoe \u003chikezoe@mozilla.com\u003e",
"desc": "Bug 1371450 - Recreate style context only if the element was restyled during the traversal. r=emilio\n\nMozReview-Commit-ID: CBYTB5FeikP",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 473,
"line": "  bool wasRestyled;\n",
"lineno": 785,
"revdate": [1500092171.0, -32400]
}, {
"node": "6451e509bea156129b71b835948eb0b6e4620a8c",
"author": "J. Ryan Stinnett \u003cjryans@gmail.com\u003e",
"desc": "Bug 1390691 - Fix up Servo_TakeChangeHint for Linux 32-bit ABI. r=manishearth\n\nBindgen bitfield enums don't work as return values with the Linux 32-bit ABI at\nthe moment because they wrap the value in a struct.\n\nThis causes the Rust side to believe the caller will pass along space for the\nstruct return value, while C++ believes it's just an integer value.\n\nMozReview-Commit-ID: 6qqVVfU8Mb2",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 706,
"line": "  nsChangeHint changeHint =\n",
"lineno": 786,
"revdate": [1502766713.0, 18000]
}, {
"node": "6451e509bea156129b71b835948eb0b6e4620a8c",
"author": "J. Ryan Stinnett \u003cjryans@gmail.com\u003e",
"desc": "Bug 1390691 - Fix up Servo_TakeChangeHint for Linux 32-bit ABI. r=manishearth\n\nBindgen bitfield enums don't work as return values with the Linux 32-bit ABI at\nthe moment because they wrap the value in a struct.\n\nThis causes the Rust side to believe the caller will pass along space for the\nstruct return value, while C++ believes it's just an integer value.\n\nMozReview-Commit-ID: 6qqVVfU8Mb2",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 707,
"line": "    static_cast\u003cnsChangeHint\u003e(Servo_TakeChangeHint(aElement, &wasRestyled));\n",
"lineno": 787,
"revdate": [1502766713.0, 18000]
}, {
"node": "1b05406b224819cfc636963bc9e0df0f04a92d7f",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1375674: Track the owner that represents the changes handled, and fix a bunch of issues while at it. r=heycam\n\nIn particular, this fixes:\n\n * Restyling of \u003carea\u003e elements that reuse the primary frame mapping for the\n   image map.\n\n * Restyling of children of display: contents elements when the display:\n   contents element generates a hint.\n\n * Restyling of out-of-flows (if my analysis in the bug is right).\n\n * Restyling of the ::backdrop pseudo-element.\n\n * Restyling of the Viewport frame.\n\nI only managed to do a reftest for the second one, but the rest of them are\ncovered by the assertions added.\n\nMozReview-Commit-ID: E7QtiQ1vPqu",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 428,
"line": "\n",
"lineno": 788,
"revdate": [1498239095.0, -7200]
}, {
"node": "1b05406b224819cfc636963bc9e0df0f04a92d7f",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1375674: Track the owner that represents the changes handled, and fix a bunch of issues while at it. r=heycam\n\nIn particular, this fixes:\n\n * Restyling of \u003carea\u003e elements that reuse the primary frame mapping for the\n   image map.\n\n * Restyling of children of display: contents elements when the display:\n   contents element generates a hint.\n\n * Restyling of out-of-flows (if my analysis in the bug is right).\n\n * Restyling of the ::backdrop pseudo-element.\n\n * Restyling of the Viewport frame.\n\nI only managed to do a reftest for the second one, but the rest of them are\ncovered by the assertions added.\n\nMozReview-Commit-ID: E7QtiQ1vPqu",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 429,
"line": "  // We should really fix the weird primary frame mapping for image maps\n",
"lineno": 789,
"revdate": [1498239095.0, -7200]
}, {
"node": "1b05406b224819cfc636963bc9e0df0f04a92d7f",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1375674: Track the owner that represents the changes handled, and fix a bunch of issues while at it. r=heycam\n\nIn particular, this fixes:\n\n * Restyling of \u003carea\u003e elements that reuse the primary frame mapping for the\n   image map.\n\n * Restyling of children of display: contents elements when the display:\n   contents element generates a hint.\n\n * Restyling of out-of-flows (if my analysis in the bug is right).\n\n * Restyling of the ::backdrop pseudo-element.\n\n * Restyling of the Viewport frame.\n\nI only managed to do a reftest for the second one, but the rest of them are\ncovered by the assertions added.\n\nMozReview-Commit-ID: E7QtiQ1vPqu",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 430,
"line": "  // (bug 135040)...\n",
"lineno": 790,
"revdate": [1498239095.0, -7200]
}, {
"node": "1b05406b224819cfc636963bc9e0df0f04a92d7f",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1375674: Track the owner that represents the changes handled, and fix a bunch of issues while at it. r=heycam\n\nIn particular, this fixes:\n\n * Restyling of \u003carea\u003e elements that reuse the primary frame mapping for the\n   image map.\n\n * Restyling of children of display: contents elements when the display:\n   contents element generates a hint.\n\n * Restyling of out-of-flows (if my analysis in the bug is right).\n\n * Restyling of the ::backdrop pseudo-element.\n\n * Restyling of the Viewport frame.\n\nI only managed to do a reftest for the second one, but the rest of them are\ncovered by the assertions added.\n\nMozReview-Commit-ID: E7QtiQ1vPqu",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 431,
"line": "  if (styleFrame && styleFrame-\u003eGetContent() != aElement) {\n",
"lineno": 791,
"revdate": [1498239095.0, -7200]
}, {
"node": "a497e53fb0a17b47d04ec86d293f6f5697cb8446",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1409931: nsImageControlFrame can also be using a \u003cmap\u003e element. r=xidorn\n\nThis goes with a crashtest, as soon as I get a usable build.\n\nMozReview-Commit-ID: LqmPWoJZ7AJ",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 788,
"line": "    MOZ_ASSERT(static_cast\u003cnsImageFrame*\u003e(do_QueryFrame(styleFrame)));\n",
"lineno": 792,
"revdate": [1508493649.0, -7200]
}, {
"node": "1b05406b224819cfc636963bc9e0df0f04a92d7f",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1375674: Track the owner that represents the changes handled, and fix a bunch of issues while at it. r=heycam\n\nIn particular, this fixes:\n\n * Restyling of \u003carea\u003e elements that reuse the primary frame mapping for the\n   image map.\n\n * Restyling of children of display: contents elements when the display:\n   contents element generates a hint.\n\n * Restyling of out-of-flows (if my analysis in the bug is right).\n\n * Restyling of the ::backdrop pseudo-element.\n\n * Restyling of the Viewport frame.\n\nI only managed to do a reftest for the second one, but the rest of them are\ncovered by the assertions added.\n\nMozReview-Commit-ID: E7QtiQ1vPqu",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 433,
"line": "    styleFrame = nullptr;\n",
"lineno": 793,
"revdate": [1498239095.0, -7200]
}, {
"node": "1b05406b224819cfc636963bc9e0df0f04a92d7f",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1375674: Track the owner that represents the changes handled, and fix a bunch of issues while at it. r=heycam\n\nIn particular, this fixes:\n\n * Restyling of \u003carea\u003e elements that reuse the primary frame mapping for the\n   image map.\n\n * Restyling of children of display: contents elements when the display:\n   contents element generates a hint.\n\n * Restyling of out-of-flows (if my analysis in the bug is right).\n\n * Restyling of the ::backdrop pseudo-element.\n\n * Restyling of the Viewport frame.\n\nI only managed to do a reftest for the second one, but the rest of them are\ncovered by the assertions added.\n\nMozReview-Commit-ID: E7QtiQ1vPqu",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 434,
"line": "  }\n",
"lineno": 794,
"revdate": [1498239095.0, -7200]
}, {
"node": "4a2a58be8c6c54dbf85b90aa85e4d4281e72088f",
"author": "Bobby Holley \u003cbobbyholley@gmail.com\u003e",
"desc": "Bug 1338921 - Handle lazy frame construction in the regular post-servo pass. r=emilio\n\nMozReview-Commit-ID: FSXKAiyZDzt\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 143,
"line": "\n",
"lineno": 795,
"revdate": [1488251167.0, 28800]
}, {
"node": "4a2a58be8c6c54dbf85b90aa85e4d4281e72088f",
"author": "Bobby Holley \u003cbobbyholley@gmail.com\u003e",
"desc": "Bug 1338921 - Handle lazy frame construction in the regular post-servo pass. r=emilio\n\nMozReview-Commit-ID: FSXKAiyZDzt\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 144,
"line": "  // Handle lazy frame construction by posting a reconstruct for any lazily-\n",
"lineno": 796,
"revdate": [1488251167.0, 28800]
}, {
"node": "4a2a58be8c6c54dbf85b90aa85e4d4281e72088f",
"author": "Bobby Holley \u003cbobbyholley@gmail.com\u003e",
"desc": "Bug 1338921 - Handle lazy frame construction in the regular post-servo pass. r=emilio\n\nMozReview-Commit-ID: FSXKAiyZDzt\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 145,
"line": "  // constructed roots.\n",
"lineno": 797,
"revdate": [1488251167.0, 28800]
}, {
"node": "4a2a58be8c6c54dbf85b90aa85e4d4281e72088f",
"author": "Bobby Holley \u003cbobbyholley@gmail.com\u003e",
"desc": "Bug 1338921 - Handle lazy frame construction in the regular post-servo pass. r=emilio\n\nMozReview-Commit-ID: FSXKAiyZDzt\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 146,
"line": "  if (aElement-\u003eHasFlag(NODE_NEEDS_FRAME)) {\n",
"lineno": 798,
"revdate": [1488251167.0, 28800]
}, {
"node": "4a2a58be8c6c54dbf85b90aa85e4d4281e72088f",
"author": "Bobby Holley \u003cbobbyholley@gmail.com\u003e",
"desc": "Bug 1338921 - Handle lazy frame construction in the regular post-servo pass. r=emilio\n\nMozReview-Commit-ID: FSXKAiyZDzt\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 147,
"line": "    changeHint |= nsChangeHint_ReconstructFrame;\n",
"lineno": 799,
"revdate": [1488251167.0, 28800]
}, {
"node": "1b05406b224819cfc636963bc9e0df0f04a92d7f",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1375674: Track the owner that represents the changes handled, and fix a bunch of issues while at it. r=heycam\n\nIn particular, this fixes:\n\n * Restyling of \u003carea\u003e elements that reuse the primary frame mapping for the\n   image map.\n\n * Restyling of children of display: contents elements when the display:\n   contents element generates a hint.\n\n * Restyling of out-of-flows (if my analysis in the bug is right).\n\n * Restyling of the ::backdrop pseudo-element.\n\n * Restyling of the Viewport frame.\n\nI only managed to do a reftest for the second one, but the rest of them are\ncovered by the assertions added.\n\nMozReview-Commit-ID: E7QtiQ1vPqu",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 440,
"line": "    MOZ_ASSERT(!styleFrame);\n",
"lineno": 800,
"revdate": [1498239095.0, -7200]
}, {
"node": "1b05406b224819cfc636963bc9e0df0f04a92d7f",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1375674: Track the owner that represents the changes handled, and fix a bunch of issues while at it. r=heycam\n\nIn particular, this fixes:\n\n * Restyling of \u003carea\u003e elements that reuse the primary frame mapping for the\n   image map.\n\n * Restyling of children of display: contents elements when the display:\n   contents element generates a hint.\n\n * Restyling of out-of-flows (if my analysis in the bug is right).\n\n * Restyling of the ::backdrop pseudo-element.\n\n * Restyling of the Viewport frame.\n\nI only managed to do a reftest for the second one, but the rest of them are\ncovered by the assertions added.\n\nMozReview-Commit-ID: E7QtiQ1vPqu",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 441,
"line": "  }\n",
"lineno": 801,
"revdate": [1498239095.0, -7200]
}, {
"node": "1b05406b224819cfc636963bc9e0df0f04a92d7f",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1375674: Track the owner that represents the changes handled, and fix a bunch of issues while at it. r=heycam\n\nIn particular, this fixes:\n\n * Restyling of \u003carea\u003e elements that reuse the primary frame mapping for the\n   image map.\n\n * Restyling of children of display: contents elements when the display:\n   contents element generates a hint.\n\n * Restyling of out-of-flows (if my analysis in the bug is right).\n\n * Restyling of the ::backdrop pseudo-element.\n\n * Restyling of the Viewport frame.\n\nI only managed to do a reftest for the second one, but the rest of them are\ncovered by the assertions added.\n\nMozReview-Commit-ID: E7QtiQ1vPqu",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 442,
"line": "\n",
"lineno": 802,
"revdate": [1498239095.0, -7200]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 736,
"line": "  if (styleFrame) {\n",
"lineno": 803,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 737,
"line": "    MOZ_ASSERT(primaryFrame);\n",
"lineno": 804,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 738,
"line": "\n",
"lineno": 805,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 739,
"line": "    nsIFrame* maybeAnonBoxChild;\n",
"lineno": 806,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 740,
"line": "    if (isOutOfFlow) {\n",
"lineno": 807,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 741,
"line": "      maybeAnonBoxChild = primaryFrame-\u003eGetPlaceholderFrame();\n",
"lineno": 808,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 742,
"line": "    } else {\n",
"lineno": 809,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 743,
"line": "      maybeAnonBoxChild = primaryFrame;\n",
"lineno": 810,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 744,
"line": "      changeHint = NS_RemoveSubsumedHints(\n",
"lineno": 811,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 745,
"line": "        changeHint, aRestyleState.ChangesHandledFor(*styleFrame));\n",
"lineno": 812,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 746,
"line": "    }\n",
"lineno": 813,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 747,
"line": "\n",
"lineno": 814,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 748,
"line": "    // If the parent wasn't restyled, the styles of our anon box parents won't\n",
"lineno": 815,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 749,
"line": "    // change either.\n",
"lineno": 816,
"revdate": [1502424626.0, 14400]
}, {
"node": "2a54187a362e9809ee0a45c4bb7008705f3016b9",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1390409 part 2 - Replace aParentWasRestyled with a bitflag. r=emilio\n\nMozReview-Commit-ID: 49C1N6LNXi7",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 706,
"line": "    if ((aFlags & ServoPostTraversalFlags::ParentWasRestyled) &&\n",
"lineno": 817,
"revdate": [1503896015.0, -36000]
}, {
"node": "2a54187a362e9809ee0a45c4bb7008705f3016b9",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1390409 part 2 - Replace aParentWasRestyled with a bitflag. r=emilio\n\nMozReview-Commit-ID: 49C1N6LNXi7",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 707,
"line": "        maybeAnonBoxChild-\u003eParentIsWrapperAnonBox()) {\n",
"lineno": 818,
"revdate": [1503896015.0, -36000]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 751,
"line": "      aRestyleState.AddPendingWrapperRestyle(\n",
"lineno": 819,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 752,
"line": "        ServoRestyleState::TableAwareParentFor(maybeAnonBoxChild));\n",
"lineno": 820,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 753,
"line": "    }\n",
"lineno": 821,
"revdate": [1502424626.0, 14400]
}, {
"node": "4a2a58be8c6c54dbf85b90aa85e4d4281e72088f",
"author": "Bobby Holley \u003cbobbyholley@gmail.com\u003e",
"desc": "Bug 1338921 - Handle lazy frame construction in the regular post-servo pass. r=emilio\n\nMozReview-Commit-ID: FSXKAiyZDzt\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 152,
"line": "  }\n",
"lineno": 822,
"revdate": [1488251167.0, 28800]
}, {
"node": "4a2a58be8c6c54dbf85b90aa85e4d4281e72088f",
"author": "Bobby Holley \u003cbobbyholley@gmail.com\u003e",
"desc": "Bug 1338921 - Handle lazy frame construction in the regular post-servo pass. r=emilio\n\nMozReview-Commit-ID: FSXKAiyZDzt\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 153,
"line": "\n",
"lineno": 823,
"revdate": [1488251167.0, 28800]
}, {
"node": "8e075d90bf3133576a275dd2f28a4a83ce375979",
"author": "Shing Lyu \u003cslyu@mozilla.com\u003e",
"desc": "Bug 1329919 - Skip repaint frame hint if there is no frame. r=heycam\n\nMozReview-Commit-ID: F46VpEBJqvU",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 146,
"line": "  // Although we shouldn't generate non-ReconstructFrame hints for elements with\n",
"lineno": 824,
"revdate": [1486089428.0, -28800]
}, {
"node": "8e075d90bf3133576a275dd2f28a4a83ce375979",
"author": "Shing Lyu \u003cslyu@mozilla.com\u003e",
"desc": "Bug 1329919 - Skip repaint frame hint if there is no frame. r=heycam\n\nMozReview-Commit-ID: F46VpEBJqvU",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 147,
"line": "  // no frames, we can still get them here if they were explicitly posted by\n",
"lineno": 825,
"revdate": [1486089428.0, -28800]
}, {
"node": "8e075d90bf3133576a275dd2f28a4a83ce375979",
"author": "Shing Lyu \u003cslyu@mozilla.com\u003e",
"desc": "Bug 1329919 - Skip repaint frame hint if there is no frame. r=heycam\n\nMozReview-Commit-ID: F46VpEBJqvU",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 148,
"line": "  // PostRestyleEvent, such as a RepaintFrame hint when a :link changes to be\n",
"lineno": 826,
"revdate": [1486089428.0, -28800]
}, {
"node": "8e075d90bf3133576a275dd2f28a4a83ce375979",
"author": "Shing Lyu \u003cslyu@mozilla.com\u003e",
"desc": "Bug 1329919 - Skip repaint frame hint if there is no frame. r=heycam\n\nMozReview-Commit-ID: F46VpEBJqvU",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 149,
"line": "  // :visited.  Skip processing these hints if there is no frame.\n",
"lineno": 827,
"revdate": [1486089428.0, -28800]
}, {
"node": "a300522006bc5e93e841e0132fa940874180afcd",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324661 part 1.  When recreating style contexts for elements in stylo, use the right frame (not the primary frame!) for tables.  r=bholley,emilio\n\nFor a table, the primary frame is the table wrapper anonymous box.  That\nanonymous box inherits style from its _child_ table frame, which is the frame that\nhas the actual style for the element.  So we want to use the stylo-computed\nstyle for the table frame, and then compute an updated style for the table\nwrapper too, because some things (like absolute positioning) are done for the\ntable wrapper anonymous box, not the table frame.",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 159,
"line": "  if ((styleFrame || (changeHint & nsChangeHint_ReconstructFrame)) && changeHint) {\n",
"lineno": 828,
"revdate": [1487361159.0, 18000]
}, {
"node": "fdde73cf429c62cd1e712afcc196110f8601cb2a",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1374752: Pack together the StyleSet, ChangeList and handled change hints, and use the latter with anonymous boxes while we're at it. r=heycam\n\nMozReview-Commit-ID: DiWcUwD9po5",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 344,
"line": "    aRestyleState.ChangeList().AppendChange(styleFrame, aElement, changeHint);\n",
"lineno": 829,
"revdate": [1497993687.0, -7200]
}, {
"node": "6ba3d1fe1de9e8dbb77e49c18bda7b602e3c8a08",
"author": "Emilio Cobos \u00c1lvarez \u003cecoal95@gmail.com\u003e",
"desc": "Bug 1286445: stylo: Support restyles of non-pseudo content on state change. r=heycam\n\nThis includes, for example :hover.\n\nAlso removes the call to IsStyledByServo() in the document constructor, it's not\nonly unnecessary, but also we call UpdateStyleBackendType() too early.\n\nMozReview-Commit-ID: 4YfCdmLoSxu\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 113,
"line": "  }\n",
"lineno": 830,
"revdate": [1468442567.0, 25200]
}, {
"node": "6ba3d1fe1de9e8dbb77e49c18bda7b602e3c8a08",
"author": "Emilio Cobos \u00c1lvarez \u003cecoal95@gmail.com\u003e",
"desc": "Bug 1286445: stylo: Support restyles of non-pseudo content on state change. r=heycam\n\nThis includes, for example :hover.\n\nAlso removes the call to IsStyledByServo() in the document constructor, it's not\nonly unnecessary, but also we call UpdateStyleBackendType() too early.\n\nMozReview-Commit-ID: 4YfCdmLoSxu\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 114,
"line": "\n",
"lineno": 831,
"revdate": [1468442567.0, 25200]
}, {
"node": "7c852ac4acf83d5d1776e98a6af36193bd97a9e5",
"author": "Bobby Holley \u003cbobbyholley@gmail.com\u003e",
"desc": "Bug 1317016 - Basic infrastructure for RestyleHint-driven traversal. r=emilio\n\nMozReview-Commit-ID: 7wH5XcILVmX\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 129,
"line": "  // If our change hint is reconstruct, we delegate to the frame constructor,\n",
"lineno": 832,
"revdate": [1478067084.0, 25200]
}, {
"node": "7c852ac4acf83d5d1776e98a6af36193bd97a9e5",
"author": "Bobby Holley \u003cbobbyholley@gmail.com\u003e",
"desc": "Bug 1317016 - Basic infrastructure for RestyleHint-driven traversal. r=emilio\n\nMozReview-Commit-ID: 7wH5XcILVmX\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 130,
"line": "  // which consumes the new style and expects the old style to be on the frame.\n",
"lineno": 833,
"revdate": [1478067084.0, 25200]
}, {
"node": "7c852ac4acf83d5d1776e98a6af36193bd97a9e5",
"author": "Bobby Holley \u003cbobbyholley@gmail.com\u003e",
"desc": "Bug 1317016 - Basic infrastructure for RestyleHint-driven traversal. r=emilio\n\nMozReview-Commit-ID: 7wH5XcILVmX\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 131,
"line": "  //\n",
"lineno": 834,
"revdate": [1478067084.0, 25200]
}, {
"node": "7c852ac4acf83d5d1776e98a6af36193bd97a9e5",
"author": "Bobby Holley \u003cbobbyholley@gmail.com\u003e",
"desc": "Bug 1317016 - Basic infrastructure for RestyleHint-driven traversal. r=emilio\n\nMozReview-Commit-ID: 7wH5XcILVmX\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 132,
"line": "  // XXXbholley: We should teach the frame constructor how to clear the dirty\n",
"lineno": 835,
"revdate": [1478067084.0, 25200]
}, {
"node": "7c852ac4acf83d5d1776e98a6af36193bd97a9e5",
"author": "Bobby Holley \u003cbobbyholley@gmail.com\u003e",
"desc": "Bug 1317016 - Basic infrastructure for RestyleHint-driven traversal. r=emilio\n\nMozReview-Commit-ID: 7wH5XcILVmX\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 133,
"line": "  // descendants bit to avoid the traversal here.\n",
"lineno": 836,
"revdate": [1478067084.0, 25200]
}, {
"node": "7c852ac4acf83d5d1776e98a6af36193bd97a9e5",
"author": "Bobby Holley \u003cbobbyholley@gmail.com\u003e",
"desc": "Bug 1317016 - Basic infrastructure for RestyleHint-driven traversal. r=emilio\n\nMozReview-Commit-ID: 7wH5XcILVmX\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 134,
"line": "  if (changeHint & nsChangeHint_ReconstructFrame) {\n",
"lineno": 837,
"revdate": [1478067084.0, 25200]
}, {
"node": "086f36cc278fe6f6cd4fa023dcda4b31950f1d5b",
"author": "Bobby Holley \u003cbobbyholley@gmail.com\u003e",
"desc": "Bug 1343128 - Don't leave stale change hints and other restyle data hanging around in reconstructed subtrees. r=emilio\n\nMozReview-Commit-ID: 4BIvC6lPUmF\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 193,
"line": "    ClearRestyleStateFromSubtree(aElement);\n",
"lineno": 838,
"revdate": [1488248968.0, 28800]
}, {
"node": "e0477439b222422a105c9e108878fadf1f36354b",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1357461: Ensure not to increment the restyle generation if we haven't restyled after all. r=heycam\n\nThis can happen with content attribute or state changes that end up not\ngenerating any hint.\n\nIn particular, in the media_queries_dynamic.html case, the iframe resize was\ntoggling a few scrollbar attributes, which made us never pass the \"didn't\nrestyle\" test, even though the test really passed.\n\nI'll probably need to add a workaround to assume we use viewport units, so\nprobably won't pass for long.\n\nMozReview-Commit-ID: 2oEfic5yaOy",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 322,
"line": "    return true;\n",
"lineno": 839,
"revdate": [1496431661.0, -7200]
}, {
"node": "c49ec67995bcee88868679ff1e8410bb980393ef",
"author": "Emilio Cobos \u00c1lvarez \u003cecoal95@gmail.com\u003e",
"desc": "Bug 1314161: stylo: Don't try to recreate style contexts for non-element and non-text nodes. r=bholley\n\nSigned-off-by: Emilio Cobos \u00c1lvarez \u003cecoal95@gmail.com\u003e\n\nMozReview-Commit-ID: 4qvF2T7BR4h\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 99,
"line": "  }\n",
"lineno": 840,
"revdate": [1477995898.0, -3600]
}, {
"node": "c49ec67995bcee88868679ff1e8410bb980393ef",
"author": "Emilio Cobos \u00c1lvarez \u003cecoal95@gmail.com\u003e",
"desc": "Bug 1314161: stylo: Don't try to recreate style contexts for non-element and non-text nodes. r=bholley\n\nSigned-off-by: Emilio Cobos \u00c1lvarez \u003cecoal95@gmail.com\u003e\n\nMozReview-Commit-ID: 4qvF2T7BR4h\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 100,
"line": "\n",
"lineno": 841,
"revdate": [1477995898.0, -3600]
}, {
"node": "60dade66b054579bcbe5f37c7263a756f6cd108b",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1335987: stylo: Don't use the change hint to decide whether to recreate style contexts. r=bholley\n\nMozReview-Commit-ID: 11Yyq8UE3LP\nSigned-off-by: Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 161,
"line": "  // TODO(emilio): We could avoid some refcount traffic here, specially in the\n",
"lineno": 842,
"revdate": [1486152417.0, -3600]
}, {
"node": "959eb43f301e89def3b535659f60ec6e2b3ba451",
"author": "Manish Goregaokar \u003cmanishearth@gmail.com\u003e",
"desc": "Bug 1382017 part 4 Gecko piece - Remove usage of ServoComputedValues from most Gecko code; r=xidorn\n\nMozReview-Commit-ID: 2NB4DgxMrL3",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 570,
"line": "  // ServoStyleContext case, which uses atomic refcounting.\n",
"lineno": 843,
"revdate": [1500596825.0, 25200]
}, {
"node": "60dade66b054579bcbe5f37c7263a756f6cd108b",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1335987: stylo: Don't use the change hint to decide whether to recreate style contexts. r=bholley\n\nMozReview-Commit-ID: 11Yyq8UE3LP\nSigned-off-by: Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 163,
"line": "  //\n",
"lineno": 844,
"revdate": [1486152417.0, -3600]
}, {
"node": "60dade66b054579bcbe5f37c7263a756f6cd108b",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1335987: stylo: Don't use the change hint to decide whether to recreate style contexts. r=bholley\n\nMozReview-Commit-ID: 11Yyq8UE3LP\nSigned-off-by: Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 164,
"line": "  // Hold the old style context alive, because it could become a dangling\n",
"lineno": 845,
"revdate": [1486152417.0, -3600]
}, {
"node": "7580a5f91d0d6b03a710e44ce2c9e482f33efc51",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324618 part 7.  Set our new style context on all our continuations in ServoRestyleManager.  r=emilio\n\nMozReview-Commit-ID: 4gVXPDCPZnq",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 344,
"line": "  // pointer during the replacement. In practice it's not a huge deal, but\n",
"lineno": 846,
"revdate": [1498545308.0, 25200]
}, {
"node": "7580a5f91d0d6b03a710e44ce2c9e482f33efc51",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324618 part 7.  Set our new style context on all our continuations in ServoRestyleManager.  r=emilio\n\nMozReview-Commit-ID: 4gVXPDCPZnq",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 345,
"line": "  // better not playing with dangling pointers if not needed.\n",
"lineno": 847,
"revdate": [1498545308.0, 25200]
}, {
"node": "d13cb72a5669829c04f846c0d8b5db4ad644952c",
"author": "Bobby Holley \u003cbobbyholley@gmail.com\u003e",
"desc": "Bug 1376655 - Use ServoStyleContext in more places. r=emilio\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 472,
"line": "  RefPtr\u003cServoStyleContext\u003e oldStyleContext =\n",
"lineno": 848,
"revdate": [1498613646.0, 25200]
}, {
"node": "d13cb72a5669829c04f846c0d8b5db4ad644952c",
"author": "Bobby Holley \u003cbobbyholley@gmail.com\u003e",
"desc": "Bug 1376655 - Use ServoStyleContext in more places. r=emilio\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 473,
"line": "    styleFrame ? styleFrame-\u003eStyleContext()-\u003eAsServo() : nullptr;\n",
"lineno": 849,
"revdate": [1498613646.0, 25200]
}, {
"node": "60dade66b054579bcbe5f37c7263a756f6cd108b",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1335987: stylo: Don't use the change hint to decide whether to recreate style contexts. r=bholley\n\nMozReview-Commit-ID: 11Yyq8UE3LP\nSigned-off-by: Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 170,
"line": "\n",
"lineno": 850,
"revdate": [1486152417.0, -3600]
}, {
"node": "28226c771f1114d0fc219be3fa7c0e1413067e32",
"author": "Jonathan Watt \u003cjwatt@jwatt.org\u003e",
"desc": "Bug 1388939, part 8 - Remove nsFrameManager::GetDisplayContentsNodeFor and rewrite its caller to use other APIs. r=dholbert\n\nMozReview-Commit-ID: 6S4MpwBlrjj",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 613,
"line": "  nsStyleContext* displayContentsStyle = nullptr;\n",
"lineno": 851,
"revdate": [1501664188.0, -3600]
}, {
"node": "16e6b3202e27eb00ae32d6aab4806a5c99018c85",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1341083: Implement dynamic restyling for display: contents. r=heycam\n\nMozReview-Commit-ID: KimTU2j4V4p\nSigned-off-by: Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 201,
"line": "  // FIXME(emilio, bug 1303605): This can be simpler for Servo.\n",
"lineno": 852,
"revdate": [1487672711.0, -3600]
}, {
"node": "16e6b3202e27eb00ae32d6aab4806a5c99018c85",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1341083: Implement dynamic restyling for display: contents. r=heycam\n\nMozReview-Commit-ID: KimTU2j4V4p\nSigned-off-by: Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 202,
"line": "  // Note that we intentionally don't check for display: none content.\n",
"lineno": 853,
"revdate": [1487672711.0, -3600]
}, {
"node": "16e6b3202e27eb00ae32d6aab4806a5c99018c85",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1341083: Implement dynamic restyling for display: contents. r=heycam\n\nMozReview-Commit-ID: KimTU2j4V4p\nSigned-off-by: Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 203,
"line": "  if (!oldStyleContext) {\n",
"lineno": 854,
"revdate": [1487672711.0, -3600]
}, {
"node": "28226c771f1114d0fc219be3fa7c0e1413067e32",
"author": "Jonathan Watt \u003cjwatt@jwatt.org\u003e",
"desc": "Bug 1388939, part 8 - Remove nsFrameManager::GetDisplayContentsNodeFor and rewrite its caller to use other APIs. r=dholbert\n\nMozReview-Commit-ID: 6S4MpwBlrjj",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 617,
"line": "    displayContentsStyle =\n",
"lineno": 855,
"revdate": [1501664188.0, -3600]
}, {
"node": "28226c771f1114d0fc219be3fa7c0e1413067e32",
"author": "Jonathan Watt \u003cjwatt@jwatt.org\u003e",
"desc": "Bug 1388939, part 8 - Remove nsFrameManager::GetDisplayContentsNodeFor and rewrite its caller to use other APIs. r=dholbert\n\nMozReview-Commit-ID: 6S4MpwBlrjj",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 618,
"line": "      PresContext()-\u003eFrameConstructor()-\u003eGetDisplayContentsStyleFor(aElement);\n",
"lineno": 856,
"revdate": [1501664188.0, -3600]
}, {
"node": "28226c771f1114d0fc219be3fa7c0e1413067e32",
"author": "Jonathan Watt \u003cjwatt@jwatt.org\u003e",
"desc": "Bug 1388939, part 8 - Remove nsFrameManager::GetDisplayContentsNodeFor and rewrite its caller to use other APIs. r=dholbert\n\nMozReview-Commit-ID: 6S4MpwBlrjj",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 619,
"line": "    if (displayContentsStyle) {\n",
"lineno": 857,
"revdate": [1501664188.0, -3600]
}, {
"node": "28226c771f1114d0fc219be3fa7c0e1413067e32",
"author": "Jonathan Watt \u003cjwatt@jwatt.org\u003e",
"desc": "Bug 1388939, part 8 - Remove nsFrameManager::GetDisplayContentsNodeFor and rewrite its caller to use other APIs. r=dholbert\n\nMozReview-Commit-ID: 6S4MpwBlrjj",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 620,
"line": "      oldStyleContext = displayContentsStyle-\u003eAsServo();\n",
"lineno": 858,
"revdate": [1501664188.0, -3600]
}, {
"node": "16e6b3202e27eb00ae32d6aab4806a5c99018c85",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1341083: Implement dynamic restyling for display: contents. r=heycam\n\nMozReview-Commit-ID: KimTU2j4V4p\nSigned-off-by: Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 208,
"line": "    }\n",
"lineno": 859,
"revdate": [1487672711.0, -3600]
}, {
"node": "16e6b3202e27eb00ae32d6aab4806a5c99018c85",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1341083: Implement dynamic restyling for display: contents. r=heycam\n\nMozReview-Commit-ID: KimTU2j4V4p\nSigned-off-by: Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 209,
"line": "  }\n",
"lineno": 860,
"revdate": [1487672711.0, -3600]
}, {
"node": "16e6b3202e27eb00ae32d6aab4806a5c99018c85",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1341083: Implement dynamic restyling for display: contents. r=heycam\n\nMozReview-Commit-ID: KimTU2j4V4p\nSigned-off-by: Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 210,
"line": "\n",
"lineno": 861,
"revdate": [1487672711.0, -3600]
}, {
"node": "1b05406b224819cfc636963bc9e0df0f04a92d7f",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1375674: Track the owner that represents the changes handled, and fix a bunch of issues while at it. r=heycam\n\nIn particular, this fixes:\n\n * Restyling of \u003carea\u003e elements that reuse the primary frame mapping for the\n   image map.\n\n * Restyling of children of display: contents elements when the display:\n   contents element generates a hint.\n\n * Restyling of out-of-flows (if my analysis in the bug is right).\n\n * Restyling of the ::backdrop pseudo-element.\n\n * Restyling of the Viewport frame.\n\nI only managed to do a reftest for the second one, but the rest of them are\ncovered by the assertions added.\n\nMozReview-Commit-ID: E7QtiQ1vPqu",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 502,
"line": "  Maybe\u003cServoRestyleState\u003e thisFrameRestyleState;\n",
"lineno": 862,
"revdate": [1498239095.0, -7200]
}, {
"node": "1b05406b224819cfc636963bc9e0df0f04a92d7f",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1375674: Track the owner that represents the changes handled, and fix a bunch of issues while at it. r=heycam\n\nIn particular, this fixes:\n\n * Restyling of \u003carea\u003e elements that reuse the primary frame mapping for the\n   image map.\n\n * Restyling of children of display: contents elements when the display:\n   contents element generates a hint.\n\n * Restyling of out-of-flows (if my analysis in the bug is right).\n\n * Restyling of the ::backdrop pseudo-element.\n\n * Restyling of the Viewport frame.\n\nI only managed to do a reftest for the second one, but the rest of them are\ncovered by the assertions added.\n\nMozReview-Commit-ID: E7QtiQ1vPqu",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 503,
"line": "  if (styleFrame) {\n",
"lineno": 863,
"revdate": [1498239095.0, -7200]
}, {
"node": "1b05406b224819cfc636963bc9e0df0f04a92d7f",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1375674: Track the owner that represents the changes handled, and fix a bunch of issues while at it. r=heycam\n\nIn particular, this fixes:\n\n * Restyling of \u003carea\u003e elements that reuse the primary frame mapping for the\n   image map.\n\n * Restyling of children of display: contents elements when the display:\n   contents element generates a hint.\n\n * Restyling of out-of-flows (if my analysis in the bug is right).\n\n * Restyling of the ::backdrop pseudo-element.\n\n * Restyling of the Viewport frame.\n\nI only managed to do a reftest for the second one, but the rest of them are\ncovered by the assertions added.\n\nMozReview-Commit-ID: E7QtiQ1vPqu",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 504,
"line": "    auto type = isOutOfFlow\n",
"lineno": 864,
"revdate": [1498239095.0, -7200]
}, {
"node": "1b05406b224819cfc636963bc9e0df0f04a92d7f",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1375674: Track the owner that represents the changes handled, and fix a bunch of issues while at it. r=heycam\n\nIn particular, this fixes:\n\n * Restyling of \u003carea\u003e elements that reuse the primary frame mapping for the\n   image map.\n\n * Restyling of children of display: contents elements when the display:\n   contents element generates a hint.\n\n * Restyling of out-of-flows (if my analysis in the bug is right).\n\n * Restyling of the ::backdrop pseudo-element.\n\n * Restyling of the Viewport frame.\n\nI only managed to do a reftest for the second one, but the rest of them are\ncovered by the assertions added.\n\nMozReview-Commit-ID: E7QtiQ1vPqu",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 505,
"line": "      ? ServoRestyleState::Type::OutOfFlow\n",
"lineno": 865,
"revdate": [1498239095.0, -7200]
}, {
"node": "1b05406b224819cfc636963bc9e0df0f04a92d7f",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1375674: Track the owner that represents the changes handled, and fix a bunch of issues while at it. r=heycam\n\nIn particular, this fixes:\n\n * Restyling of \u003carea\u003e elements that reuse the primary frame mapping for the\n   image map.\n\n * Restyling of children of display: contents elements when the display:\n   contents element generates a hint.\n\n * Restyling of out-of-flows (if my analysis in the bug is right).\n\n * Restyling of the ::backdrop pseudo-element.\n\n * Restyling of the Viewport frame.\n\nI only managed to do a reftest for the second one, but the rest of them are\ncovered by the assertions added.\n\nMozReview-Commit-ID: E7QtiQ1vPqu",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 506,
"line": "      : ServoRestyleState::Type::InFlow;\n",
"lineno": 866,
"revdate": [1498239095.0, -7200]
}, {
"node": "1b05406b224819cfc636963bc9e0df0f04a92d7f",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1375674: Track the owner that represents the changes handled, and fix a bunch of issues while at it. r=heycam\n\nIn particular, this fixes:\n\n * Restyling of \u003carea\u003e elements that reuse the primary frame mapping for the\n   image map.\n\n * Restyling of children of display: contents elements when the display:\n   contents element generates a hint.\n\n * Restyling of out-of-flows (if my analysis in the bug is right).\n\n * Restyling of the ::backdrop pseudo-element.\n\n * Restyling of the Viewport frame.\n\nI only managed to do a reftest for the second one, but the rest of them are\ncovered by the assertions added.\n\nMozReview-Commit-ID: E7QtiQ1vPqu",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 507,
"line": "\n",
"lineno": 867,
"revdate": [1498239095.0, -7200]
}, {
"node": "1b05406b224819cfc636963bc9e0df0f04a92d7f",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1375674: Track the owner that represents the changes handled, and fix a bunch of issues while at it. r=heycam\n\nIn particular, this fixes:\n\n * Restyling of \u003carea\u003e elements that reuse the primary frame mapping for the\n   image map.\n\n * Restyling of children of display: contents elements when the display:\n   contents element generates a hint.\n\n * Restyling of out-of-flows (if my analysis in the bug is right).\n\n * Restyling of the ::backdrop pseudo-element.\n\n * Restyling of the Viewport frame.\n\nI only managed to do a reftest for the second one, but the rest of them are\ncovered by the assertions added.\n\nMozReview-Commit-ID: E7QtiQ1vPqu",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 508,
"line": "    thisFrameRestyleState.emplace(*styleFrame, aRestyleState, changeHint, type);\n",
"lineno": 868,
"revdate": [1498239095.0, -7200]
}, {
"node": "1b05406b224819cfc636963bc9e0df0f04a92d7f",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1375674: Track the owner that represents the changes handled, and fix a bunch of issues while at it. r=heycam\n\nIn particular, this fixes:\n\n * Restyling of \u003carea\u003e elements that reuse the primary frame mapping for the\n   image map.\n\n * Restyling of children of display: contents elements when the display:\n   contents element generates a hint.\n\n * Restyling of out-of-flows (if my analysis in the bug is right).\n\n * Restyling of the ::backdrop pseudo-element.\n\n * Restyling of the Viewport frame.\n\nI only managed to do a reftest for the second one, but the rest of them are\ncovered by the assertions added.\n\nMozReview-Commit-ID: E7QtiQ1vPqu",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 509,
"line": "  }\n",
"lineno": 869,
"revdate": [1498239095.0, -7200]
}, {
"node": "1b05406b224819cfc636963bc9e0df0f04a92d7f",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1375674: Track the owner that represents the changes handled, and fix a bunch of issues while at it. r=heycam\n\nIn particular, this fixes:\n\n * Restyling of \u003carea\u003e elements that reuse the primary frame mapping for the\n   image map.\n\n * Restyling of children of display: contents elements when the display:\n   contents element generates a hint.\n\n * Restyling of out-of-flows (if my analysis in the bug is right).\n\n * Restyling of the ::backdrop pseudo-element.\n\n * Restyling of the Viewport frame.\n\nI only managed to do a reftest for the second one, but the rest of them are\ncovered by the assertions added.\n\nMozReview-Commit-ID: E7QtiQ1vPqu",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 510,
"line": "\n",
"lineno": 870,
"revdate": [1498239095.0, -7200]
}, {
"node": "1b05406b224819cfc636963bc9e0df0f04a92d7f",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1375674: Track the owner that represents the changes handled, and fix a bunch of issues while at it. r=heycam\n\nIn particular, this fixes:\n\n * Restyling of \u003carea\u003e elements that reuse the primary frame mapping for the\n   image map.\n\n * Restyling of children of display: contents elements when the display:\n   contents element generates a hint.\n\n * Restyling of out-of-flows (if my analysis in the bug is right).\n\n * Restyling of the ::backdrop pseudo-element.\n\n * Restyling of the Viewport frame.\n\nI only managed to do a reftest for the second one, but the rest of them are\ncovered by the assertions added.\n\nMozReview-Commit-ID: E7QtiQ1vPqu",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 511,
"line": "  // We can't really assume as used changes from display: contents elements (or\n",
"lineno": 871,
"revdate": [1498239095.0, -7200]
}, {
"node": "1b05406b224819cfc636963bc9e0df0f04a92d7f",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1375674: Track the owner that represents the changes handled, and fix a bunch of issues while at it. r=heycam\n\nIn particular, this fixes:\n\n * Restyling of \u003carea\u003e elements that reuse the primary frame mapping for the\n   image map.\n\n * Restyling of children of display: contents elements when the display:\n   contents element generates a hint.\n\n * Restyling of out-of-flows (if my analysis in the bug is right).\n\n * Restyling of the ::backdrop pseudo-element.\n\n * Restyling of the Viewport frame.\n\nI only managed to do a reftest for the second one, but the rest of them are\ncovered by the assertions added.\n\nMozReview-Commit-ID: E7QtiQ1vPqu",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 512,
"line": "  // other elements without frames).\n",
"lineno": 872,
"revdate": [1498239095.0, -7200]
}, {
"node": "1b05406b224819cfc636963bc9e0df0f04a92d7f",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1375674: Track the owner that represents the changes handled, and fix a bunch of issues while at it. r=heycam\n\nIn particular, this fixes:\n\n * Restyling of \u003carea\u003e elements that reuse the primary frame mapping for the\n   image map.\n\n * Restyling of children of display: contents elements when the display:\n   contents element generates a hint.\n\n * Restyling of out-of-flows (if my analysis in the bug is right).\n\n * Restyling of the ::backdrop pseudo-element.\n\n * Restyling of the Viewport frame.\n\nI only managed to do a reftest for the second one, but the rest of them are\ncovered by the assertions added.\n\nMozReview-Commit-ID: E7QtiQ1vPqu",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 513,
"line": "  ServoRestyleState& childrenRestyleState =\n",
"lineno": 873,
"revdate": [1498239095.0, -7200]
}, {
"node": "1b05406b224819cfc636963bc9e0df0f04a92d7f",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1375674: Track the owner that represents the changes handled, and fix a bunch of issues while at it. r=heycam\n\nIn particular, this fixes:\n\n * Restyling of \u003carea\u003e elements that reuse the primary frame mapping for the\n   image map.\n\n * Restyling of children of display: contents elements when the display:\n   contents element generates a hint.\n\n * Restyling of out-of-flows (if my analysis in the bug is right).\n\n * Restyling of the ::backdrop pseudo-element.\n\n * Restyling of the Viewport frame.\n\nI only managed to do a reftest for the second one, but the rest of them are\ncovered by the assertions added.\n\nMozReview-Commit-ID: E7QtiQ1vPqu",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 514,
"line": "    thisFrameRestyleState ? *thisFrameRestyleState : aRestyleState;\n",
"lineno": 874,
"revdate": [1498239095.0, -7200]
}, {
"node": "fdde73cf429c62cd1e712afcc196110f8601cb2a",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1374752: Pack together the StyleSet, ChangeList and handled change hints, and use the latter with anonymous boxes while we're at it. r=heycam\n\nMozReview-Commit-ID: DiWcUwD9po5",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 395,
"line": "\n",
"lineno": 875,
"revdate": [1497993687.0, -7200]
}, {
"node": "69d373634f87a73c84d93ffab741c943a1fbbf11",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1389790: Ensure we always have an up-to-date style context even if we have no frame. r=heycam\n\nI'm still not quite sure how may we end up restyling a text node under there,\nbut all my attempts to build a test-case have failed.\n\nAnyway this is the right thing to do.\n\nMozReview-Commit-ID: FitqSKhNt2n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 794,
"line": "  RefPtr\u003cServoStyleContext\u003e upToDateContext =\n",
"lineno": 876,
"revdate": [1502569064.0, -7200]
}, {
"node": "f9d851dcc3740591e1c7a6bdec1bea8b50a3ef3c",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1392170: Don't call ResolveServoStyle unnecessarily for undisplayed and not restyled stuff. r=heycam\n\nIn particular, this avoids the stupid calls in display: none roots.\n\nThe cache stuff should be unnecessary, but there's still some fishy stuff going\non.\n\nMozReview-Commit-ID: LgnW0k1gmsN",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 757,
"line": "    wasRestyled\n",
"lineno": 877,
"revdate": [1503488057.0, -7200]
}, {
"node": "69d373634f87a73c84d93ffab741c943a1fbbf11",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1389790: Ensure we always have an up-to-date style context even if we have no frame. r=heycam\n\nI'm still not quite sure how may we end up restyling a text node under there,\nbut all my attempts to build a test-case have failed.\n\nAnyway this is the right thing to do.\n\nMozReview-Commit-ID: FitqSKhNt2n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 796,
"line": "      ? aRestyleState.StyleSet().ResolveServoStyle(aElement)\n",
"lineno": 878,
"revdate": [1502569064.0, -7200]
}, {
"node": "69d373634f87a73c84d93ffab741c943a1fbbf11",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1389790: Ensure we always have an up-to-date style context even if we have no frame. r=heycam\n\nI'm still not quite sure how may we end up restyling a text node under there,\nbut all my attempts to build a test-case have failed.\n\nAnyway this is the right thing to do.\n\nMozReview-Commit-ID: FitqSKhNt2n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 797,
"line": "      : oldStyleContext;\n",
"lineno": 879,
"revdate": [1502569064.0, -7200]
}, {
"node": "69d373634f87a73c84d93ffab741c943a1fbbf11",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1389790: Ensure we always have an up-to-date style context even if we have no frame. r=heycam\n\nI'm still not quite sure how may we end up restyling a text node under there,\nbut all my attempts to build a test-case have failed.\n\nAnyway this is the right thing to do.\n\nMozReview-Commit-ID: FitqSKhNt2n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 798,
"line": "\n",
"lineno": 880,
"revdate": [1502569064.0, -7200]
}, {
"node": "a5c00f0df5be05a13ec87004719a0ac4d410cb22",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1390409 part 3 - Send a11y notification for visibility changes. r=emilio\n\nMozReview-Commit-ID: I48OhzekXvD",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 838,
"line": "  ServoPostTraversalFlags childrenFlags =\n",
"lineno": 881,
"revdate": [1503903505.0, -36000]
}, {
"node": "a5c00f0df5be05a13ec87004719a0ac4d410cb22",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1390409 part 3 - Send a11y notification for visibility changes. r=emilio\n\nMozReview-Commit-ID: I48OhzekXvD",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 839,
"line": "    wasRestyled ? ServoPostTraversalFlags::ParentWasRestyled\n",
"lineno": 882,
"revdate": [1503903505.0, -36000]
}, {
"node": "a5c00f0df5be05a13ec87004719a0ac4d410cb22",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1390409 part 3 - Send a11y notification for visibility changes. r=emilio\n\nMozReview-Commit-ID: I48OhzekXvD",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 840,
"line": "                : ServoPostTraversalFlags::Empty;\n",
"lineno": 883,
"revdate": [1503903505.0, -36000]
}, {
"node": "a5c00f0df5be05a13ec87004719a0ac4d410cb22",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1390409 part 3 - Send a11y notification for visibility changes. r=emilio\n\nMozReview-Commit-ID: I48OhzekXvD",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 841,
"line": "\n",
"lineno": 884,
"revdate": [1503903505.0, -36000]
}, {
"node": "827b15ee4c8d1a72ea7d2c43e6a47c3c3d8853ec",
"author": "Hiroyuki Ikezoe \u003chikezoe@mozilla.com\u003e",
"desc": "Bug 1371450 - Recreate style context only if the element was restyled during the traversal. r=emilio\n\nMozReview-Commit-ID: CBYTB5FeikP",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 550,
"line": "  if (wasRestyled && oldStyleContext) {\n",
"lineno": 885,
"revdate": [1500092171.0, -32400]
}, {
"node": "28226c771f1114d0fc219be3fa7c0e1413067e32",
"author": "Jonathan Watt \u003cjwatt@jwatt.org\u003e",
"desc": "Bug 1388939, part 8 - Remove nsFrameManager::GetDisplayContentsNodeFor and rewrite its caller to use other APIs. r=dholbert\n\nMozReview-Commit-ID: 6S4MpwBlrjj",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 640,
"line": "    MOZ_ASSERT(styleFrame || displayContentsStyle);\n",
"lineno": 886,
"revdate": [1501664188.0, -3600]
}, {
"node": "69d373634f87a73c84d93ffab741c943a1fbbf11",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1389790: Ensure we always have an up-to-date style context even if we have no frame. r=heycam\n\nI'm still not quite sure how may we end up restyling a text node under there,\nbut all my attempts to build a test-case have failed.\n\nAnyway this is the right thing to do.\n\nMozReview-Commit-ID: FitqSKhNt2n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 803,
"line": "    MOZ_ASSERT(oldStyleContext-\u003eComputedData() != upToDateContext-\u003eComputedData());\n",
"lineno": 887,
"revdate": [1502569064.0, -7200]
}, {
"node": "6ba3d1fe1de9e8dbb77e49c18bda7b602e3c8a08",
"author": "Emilio Cobos \u00c1lvarez \u003cecoal95@gmail.com\u003e",
"desc": "Bug 1286445: stylo: Support restyles of non-pseudo content on state change. r=heycam\n\nThis includes, for example :hover.\n\nAlso removes the call to IsStyledByServo() in the document constructor, it's not\nonly unnecessary, but also we call UpdateStyleBackendType() too early.\n\nMozReview-Commit-ID: 4YfCdmLoSxu\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 117,
"line": "\n",
"lineno": 888,
"revdate": [1468442567.0, 25200]
}, {
"node": "69d373634f87a73c84d93ffab741c943a1fbbf11",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1389790: Ensure we always have an up-to-date style context even if we have no frame. r=heycam\n\nI'm still not quite sure how may we end up restyling a text node under there,\nbut all my attempts to build a test-case have failed.\n\nAnyway this is the right thing to do.\n\nMozReview-Commit-ID: FitqSKhNt2n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 805,
"line": "    upToDateContext-\u003eResolveSameStructsAs(oldStyleContext);\n",
"lineno": 889,
"revdate": [1502569064.0, -7200]
}, {
"node": "fefe9ce9ccc285021cdae74c555314ebdc76320c",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1322317: Fix CalcStyleDifference assumptions and PeekStyleContext semantics. r=heycam\n\nFor the reasoning for this change, please see the related bugs and:\n\nhttp://logs.glob.uno/?c=mozilla%23layout&s=22+Feb+2017&e=22+Feb+2017#c27236\n\nMainly, before this change, there was nothing forcing style structs computed in\na style context to remain computed for the new style context after a call to\nCalcStyleDifference. This can make us skip change hints when a style change\ndoesn't force to recompute one of these structs.\n\nMozReview-Commit-ID: FoWbLjt97Uu\nSigned-off-by: Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 221,
"line": "\n",
"lineno": 890,
"revdate": [1487692603.0, -3600]
}, {
"node": "7580a5f91d0d6b03a710e44ce2c9e482f33efc51",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324618 part 7.  Set our new style context on all our continuations in ServoRestyleManager.  r=emilio\n\nMozReview-Commit-ID: 4gVXPDCPZnq",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 391,
"line": "    // We want to walk all the continuations here, even the ones with different\n",
"lineno": 891,
"revdate": [1498545308.0, 25200]
}, {
"node": "7580a5f91d0d6b03a710e44ce2c9e482f33efc51",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324618 part 7.  Set our new style context on all our continuations in ServoRestyleManager.  r=emilio\n\nMozReview-Commit-ID: 4gVXPDCPZnq",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 392,
"line": "    // styles.  In practice, the only reason we get continuations with different\n",
"lineno": 892,
"revdate": [1498545308.0, 25200]
}, {
"node": "7580a5f91d0d6b03a710e44ce2c9e482f33efc51",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324618 part 7.  Set our new style context on all our continuations in ServoRestyleManager.  r=emilio\n\nMozReview-Commit-ID: 4gVXPDCPZnq",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 393,
"line": "    // styles here is ::first-line (::first-letter never affects element\n",
"lineno": 893,
"revdate": [1498545308.0, 25200]
}, {
"node": "7580a5f91d0d6b03a710e44ce2c9e482f33efc51",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324618 part 7.  Set our new style context on all our continuations in ServoRestyleManager.  r=emilio\n\nMozReview-Commit-ID: 4gVXPDCPZnq",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 394,
"line": "    // styles).  But in that case, newContext is the right context for the\n",
"lineno": 894,
"revdate": [1498545308.0, 25200]
}, {
"node": "7580a5f91d0d6b03a710e44ce2c9e482f33efc51",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324618 part 7.  Set our new style context on all our continuations in ServoRestyleManager.  r=emilio\n\nMozReview-Commit-ID: 4gVXPDCPZnq",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 395,
"line": "    // _later_ continuations anyway (the ones not affected by ::first-line), not\n",
"lineno": 895,
"revdate": [1498545308.0, 25200]
}, {
"node": "7580a5f91d0d6b03a710e44ce2c9e482f33efc51",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324618 part 7.  Set our new style context on all our continuations in ServoRestyleManager.  r=emilio\n\nMozReview-Commit-ID: 4gVXPDCPZnq",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 396,
"line": "    // the earlier ones, so there is no point stopping right at the point when\n",
"lineno": 896,
"revdate": [1498545308.0, 25200]
}, {
"node": "7580a5f91d0d6b03a710e44ce2c9e482f33efc51",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324618 part 7.  Set our new style context on all our continuations in ServoRestyleManager.  r=emilio\n\nMozReview-Commit-ID: 4gVXPDCPZnq",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 397,
"line": "    // we'd actually be setting the right style context.\n",
"lineno": 897,
"revdate": [1498545308.0, 25200]
}, {
"node": "7580a5f91d0d6b03a710e44ce2c9e482f33efc51",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324618 part 7.  Set our new style context on all our continuations in ServoRestyleManager.  r=emilio\n\nMozReview-Commit-ID: 4gVXPDCPZnq",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 398,
"line": "    //\n",
"lineno": 898,
"revdate": [1498545308.0, 25200]
}, {
"node": "7580a5f91d0d6b03a710e44ce2c9e482f33efc51",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324618 part 7.  Set our new style context on all our continuations in ServoRestyleManager.  r=emilio\n\nMozReview-Commit-ID: 4gVXPDCPZnq",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 399,
"line": "    // This does mean that we may be setting the wrong style context on our\n",
"lineno": 899,
"revdate": [1498545308.0, 25200]
}, {
"node": "7580a5f91d0d6b03a710e44ce2c9e482f33efc51",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324618 part 7.  Set our new style context on all our continuations in ServoRestyleManager.  r=emilio\n\nMozReview-Commit-ID: 4gVXPDCPZnq",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 400,
"line": "    // initial continuations; ::first-line fixes that up after the fact.\n",
"lineno": 900,
"revdate": [1498545308.0, 25200]
}, {
"node": "7580a5f91d0d6b03a710e44ce2c9e482f33efc51",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324618 part 7.  Set our new style context on all our continuations in ServoRestyleManager.  r=emilio\n\nMozReview-Commit-ID: 4gVXPDCPZnq",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 401,
"line": "    for (nsIFrame* f = styleFrame; f; f = f-\u003eGetNextContinuation()) {\n",
"lineno": 901,
"revdate": [1498545308.0, 25200]
}, {
"node": "346f57883936defca24432a7163bcbe8ebfe1362",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1366721: Restyle additional style contexts in ServoRestyleManager. r=heycam\n\nI was about to assert that other non-primary frames don't have additional style\ncontexts everywhere, but that wouldn't make much sense, given they don't\ncorrespond to an element we could selector-match against.\n\nMozReview-Commit-ID: EtAQbSg6nP6",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 626,
"line": "      MOZ_ASSERT_IF(f != styleFrame, !f-\u003eGetAdditionalStyleContext(0));\n",
"lineno": 902,
"revdate": [1500568154.0, -7200]
}, {
"node": "69d373634f87a73c84d93ffab741c943a1fbbf11",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1389790: Ensure we always have an up-to-date style context even if we have no frame. r=heycam\n\nI'm still not quite sure how may we end up restyling a text node under there,\nbut all my attempts to build a test-case have failed.\n\nAnyway this is the right thing to do.\n\nMozReview-Commit-ID: FitqSKhNt2n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 819,
"line": "      f-\u003eSetStyleContext(upToDateContext);\n",
"lineno": 903,
"revdate": [1502569064.0, -7200]
}, {
"node": "f1d25be43bde294949d5004c5ccb21e043bc3616",
"author": "Emilio Cobos \u00c1lvarez \u003cecoal95@gmail.com\u003e",
"desc": "Bug 1290335: stylo: Allow processing change hints generated from Servo. r=heycam\n\nMozReview-Commit-ID: Alc0wcXvHcD\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 127,
"line": "    }\n",
"lineno": 904,
"revdate": [1469758845.0, 25200]
}, {
"node": "f1d25be43bde294949d5004c5ccb21e043bc3616",
"author": "Emilio Cobos \u00c1lvarez \u003cecoal95@gmail.com\u003e",
"desc": "Bug 1290335: stylo: Allow processing change hints generated from Servo. r=heycam\n\nMozReview-Commit-ID: Alc0wcXvHcD\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 128,
"line": "\n",
"lineno": 905,
"revdate": [1469758845.0, 25200]
}, {
"node": "28226c771f1114d0fc219be3fa7c0e1413067e32",
"author": "Jonathan Watt \u003cjwatt@jwatt.org\u003e",
"desc": "Bug 1388939, part 8 - Remove nsFrameManager::GetDisplayContentsNodeFor and rewrite its caller to use other APIs. r=dholbert\n\nMozReview-Commit-ID: 6S4MpwBlrjj",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 662,
"line": "    if (MOZ_UNLIKELY(displayContentsStyle)) {\n",
"lineno": 906,
"revdate": [1501664188.0, -3600]
}, {
"node": "16e6b3202e27eb00ae32d6aab4806a5c99018c85",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1341083: Implement dynamic restyling for display: contents. r=heycam\n\nMozReview-Commit-ID: KimTU2j4V4p\nSigned-off-by: Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 253,
"line": "      MOZ_ASSERT(!styleFrame);\n",
"lineno": 907,
"revdate": [1487672711.0, -3600]
}, {
"node": "28226c771f1114d0fc219be3fa7c0e1413067e32",
"author": "Jonathan Watt \u003cjwatt@jwatt.org\u003e",
"desc": "Bug 1388939, part 8 - Remove nsFrameManager::GetDisplayContentsNodeFor and rewrite its caller to use other APIs. r=dholbert\n\nMozReview-Commit-ID: 6S4MpwBlrjj",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 664,
"line": "      PresContext()-\u003eFrameConstructor()-\u003e\n",
"lineno": 908,
"revdate": [1501664188.0, -3600]
}, {
"node": "69d373634f87a73c84d93ffab741c943a1fbbf11",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1389790: Ensure we always have an up-to-date style context even if we have no frame. r=heycam\n\nI'm still not quite sure how may we end up restyling a text node under there,\nbut all my attempts to build a test-case have failed.\n\nAnyway this is the right thing to do.\n\nMozReview-Commit-ID: FitqSKhNt2n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 825,
"line": "        ChangeRegisteredDisplayContentsStyleFor(aElement, upToDateContext);\n",
"lineno": 909,
"revdate": [1502569064.0, -7200]
}, {
"node": "16e6b3202e27eb00ae32d6aab4806a5c99018c85",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1341083: Implement dynamic restyling for display: contents. r=heycam\n\nMozReview-Commit-ID: KimTU2j4V4p\nSigned-off-by: Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 255,
"line": "    }\n",
"lineno": 910,
"revdate": [1487672711.0, -3600]
}, {
"node": "16e6b3202e27eb00ae32d6aab4806a5c99018c85",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1341083: Implement dynamic restyling for display: contents. r=heycam\n\nMozReview-Commit-ID: KimTU2j4V4p\nSigned-off-by: Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 256,
"line": "\n",
"lineno": 911,
"revdate": [1487672711.0, -3600]
}, {
"node": "f6370635b0906d84ac6880139ceb05dedc08bae1",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1340723 part 2.  Call the new UpdateStyleOnOwnedAnonBoxes function as needed from ServoRestyleManager.  r=emilio\n\nMozReview-Commit-ID: 5nrv8x7CEtN",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 256,
"line": "    if (styleFrame) {\n",
"lineno": 912,
"revdate": [1488573888.0, 18000]
}, {
"node": "346f57883936defca24432a7163bcbe8ebfe1362",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1366721: Restyle additional style contexts in ServoRestyleManager. r=heycam\n\nI was about to assert that other non-primary frames don't have additional style\ncontexts everywhere, but that wouldn't make much sense, given they don't\ncorrespond to an element we could selector-match against.\n\nMozReview-Commit-ID: EtAQbSg6nP6",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 636,
"line": "      UpdateAdditionalStyleContexts(styleFrame, aRestyleState);\n",
"lineno": 913,
"revdate": [1500568154.0, -7200]
}, {
"node": "f6370635b0906d84ac6880139ceb05dedc08bae1",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1340723 part 2.  Call the new UpdateStyleOnOwnedAnonBoxes function as needed from ServoRestyleManager.  r=emilio\n\nMozReview-Commit-ID: 5nrv8x7CEtN",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 259,
"line": "    }\n",
"lineno": 914,
"revdate": [1488573888.0, 18000]
}, {
"node": "3d4a563e33bed51faaf752e19d2d3df761edc8bd",
"author": "Boris Chiou \u003cboris.chiou@gmail.com\u003e",
"desc": "Bug 1334036 - Part 8: Add AddLayerChangesForAnimation in ServoRestyleManager. r=birtles\n\nSome changes to animations don't affect the computed style and yet still\nrequire the layer to be updated. Therefore, we also need to call\nAddLayerChangesForAnimation in ServoRestyleManager. In this patch, we\nfactor out this function from GeckoRestyleManager, so we can reuse it.\n\nMozReview-Commit-ID: LL7D1oGS65l",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 392,
"line": "\n",
"lineno": 915,
"revdate": [1493704996.0, -28800]
}, {
"node": "74d8ec6397ee08180e001cc516b34a59e68bcd9c",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1374761 part 1.  Properly restyle the viewport and its child anonymous box when we do a restyle.  r=heycam\n\nThe child anon box may be an nsHTMLScrollFrame, a nsRootBoxFrame, or a\nnsSimplePageSequenceFrame.   nsHTMLScrollFrame already knows how to deal with\nits anonymous box kids, nsRootBoxFrame doesn't have any, and the next changeset\nwill deal with anon box kids of nsSimplePageSequenceFrame.\n\nMozReview-Commit-ID: 2ZV061EhRmc",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 436,
"line": "    if (!aElement-\u003eGetParent()) {\n",
"lineno": 916,
"revdate": [1498059912.0, 14400]
}, {
"node": "74d8ec6397ee08180e001cc516b34a59e68bcd9c",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1374761 part 1.  Properly restyle the viewport and its child anonymous box when we do a restyle.  r=heycam\n\nThe child anon box may be an nsHTMLScrollFrame, a nsRootBoxFrame, or a\nnsSimplePageSequenceFrame.   nsHTMLScrollFrame already knows how to deal with\nits anonymous box kids, nsRootBoxFrame doesn't have any, and the next changeset\nwill deal with anon box kids of nsSimplePageSequenceFrame.\n\nMozReview-Commit-ID: 2ZV061EhRmc",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 437,
"line": "      // This is the root.  Update styles on the viewport as needed.\n",
"lineno": 917,
"revdate": [1498059912.0, 14400]
}, {
"node": "74d8ec6397ee08180e001cc516b34a59e68bcd9c",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1374761 part 1.  Properly restyle the viewport and its child anonymous box when we do a restyle.  r=heycam\n\nThe child anon box may be an nsHTMLScrollFrame, a nsRootBoxFrame, or a\nnsSimplePageSequenceFrame.   nsHTMLScrollFrame already knows how to deal with\nits anonymous box kids, nsRootBoxFrame doesn't have any, and the next changeset\nwill deal with anon box kids of nsSimplePageSequenceFrame.\n\nMozReview-Commit-ID: 2ZV061EhRmc",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 438,
"line": "      ViewportFrame* viewport =\n",
"lineno": 918,
"revdate": [1498059912.0, 14400]
}, {
"node": "74d8ec6397ee08180e001cc516b34a59e68bcd9c",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1374761 part 1.  Properly restyle the viewport and its child anonymous box when we do a restyle.  r=heycam\n\nThe child anon box may be an nsHTMLScrollFrame, a nsRootBoxFrame, or a\nnsSimplePageSequenceFrame.   nsHTMLScrollFrame already knows how to deal with\nits anonymous box kids, nsRootBoxFrame doesn't have any, and the next changeset\nwill deal with anon box kids of nsSimplePageSequenceFrame.\n\nMozReview-Commit-ID: 2ZV061EhRmc",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 439,
"line": "        do_QueryFrame(mPresContext-\u003ePresShell()-\u003eGetRootFrame());\n",
"lineno": 919,
"revdate": [1498059912.0, 14400]
}, {
"node": "74d8ec6397ee08180e001cc516b34a59e68bcd9c",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1374761 part 1.  Properly restyle the viewport and its child anonymous box when we do a restyle.  r=heycam\n\nThe child anon box may be an nsHTMLScrollFrame, a nsRootBoxFrame, or a\nnsSimplePageSequenceFrame.   nsHTMLScrollFrame already knows how to deal with\nits anonymous box kids, nsRootBoxFrame doesn't have any, and the next changeset\nwill deal with anon box kids of nsSimplePageSequenceFrame.\n\nMozReview-Commit-ID: 2ZV061EhRmc",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 440,
"line": "      if (viewport) {\n",
"lineno": 920,
"revdate": [1498059912.0, 14400]
}, {
"node": "1b05406b224819cfc636963bc9e0df0f04a92d7f",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1375674: Track the owner that represents the changes handled, and fix a bunch of issues while at it. r=heycam\n\nIn particular, this fixes:\n\n * Restyling of \u003carea\u003e elements that reuse the primary frame mapping for the\n   image map.\n\n * Restyling of children of display: contents elements when the display:\n   contents element generates a hint.\n\n * Restyling of out-of-flows (if my analysis in the bug is right).\n\n * Restyling of the ::backdrop pseudo-element.\n\n * Restyling of the Viewport frame.\n\nI only managed to do a reftest for the second one, but the rest of them are\ncovered by the assertions added.\n\nMozReview-Commit-ID: E7QtiQ1vPqu",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 557,
"line": "        // NB: The root restyle state, not the one for our children!\n",
"lineno": 921,
"revdate": [1498239095.0, -7200]
}, {
"node": "1b05406b224819cfc636963bc9e0df0f04a92d7f",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1375674: Track the owner that represents the changes handled, and fix a bunch of issues while at it. r=heycam\n\nIn particular, this fixes:\n\n * Restyling of \u003carea\u003e elements that reuse the primary frame mapping for the\n   image map.\n\n * Restyling of children of display: contents elements when the display:\n   contents element generates a hint.\n\n * Restyling of out-of-flows (if my analysis in the bug is right).\n\n * Restyling of the ::backdrop pseudo-element.\n\n * Restyling of the Viewport frame.\n\nI only managed to do a reftest for the second one, but the rest of them are\ncovered by the assertions added.\n\nMozReview-Commit-ID: E7QtiQ1vPqu",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 558,
"line": "        viewport-\u003eUpdateStyle(aRestyleState);\n",
"lineno": 922,
"revdate": [1498239095.0, -7200]
}, {
"node": "74d8ec6397ee08180e001cc516b34a59e68bcd9c",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1374761 part 1.  Properly restyle the viewport and its child anonymous box when we do a restyle.  r=heycam\n\nThe child anon box may be an nsHTMLScrollFrame, a nsRootBoxFrame, or a\nnsSimplePageSequenceFrame.   nsHTMLScrollFrame already knows how to deal with\nits anonymous box kids, nsRootBoxFrame doesn't have any, and the next changeset\nwill deal with anon box kids of nsSimplePageSequenceFrame.\n\nMozReview-Commit-ID: 2ZV061EhRmc",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 442,
"line": "      }\n",
"lineno": 923,
"revdate": [1498059912.0, 14400]
}, {
"node": "74d8ec6397ee08180e001cc516b34a59e68bcd9c",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1374761 part 1.  Properly restyle the viewport and its child anonymous box when we do a restyle.  r=heycam\n\nThe child anon box may be an nsHTMLScrollFrame, a nsRootBoxFrame, or a\nnsSimplePageSequenceFrame.   nsHTMLScrollFrame already knows how to deal with\nits anonymous box kids, nsRootBoxFrame doesn't have any, and the next changeset\nwill deal with anon box kids of nsSimplePageSequenceFrame.\n\nMozReview-Commit-ID: 2ZV061EhRmc",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 443,
"line": "    }\n",
"lineno": 924,
"revdate": [1498059912.0, 14400]
}, {
"node": "74d8ec6397ee08180e001cc516b34a59e68bcd9c",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1374761 part 1.  Properly restyle the viewport and its child anonymous box when we do a restyle.  r=heycam\n\nThe child anon box may be an nsHTMLScrollFrame, a nsRootBoxFrame, or a\nnsSimplePageSequenceFrame.   nsHTMLScrollFrame already knows how to deal with\nits anonymous box kids, nsRootBoxFrame doesn't have any, and the next changeset\nwill deal with anon box kids of nsSimplePageSequenceFrame.\n\nMozReview-Commit-ID: 2ZV061EhRmc",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 444,
"line": "\n",
"lineno": 925,
"revdate": [1498059912.0, 14400]
}, {
"node": "3d4a563e33bed51faaf752e19d2d3df761edc8bd",
"author": "Boris Chiou \u003cboris.chiou@gmail.com\u003e",
"desc": "Bug 1334036 - Part 8: Add AddLayerChangesForAnimation in ServoRestyleManager. r=birtles\n\nSome changes to animations don't affect the computed style and yet still\nrequire the layer to be updated. Therefore, we also need to call\nAddLayerChangesForAnimation in ServoRestyleManager. In this patch, we\nfactor out this function from GeckoRestyleManager, so we can reuse it.\n\nMozReview-Commit-ID: LL7D1oGS65l",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 393,
"line": "    // Some changes to animations don't affect the computed style and yet still\n",
"lineno": 926,
"revdate": [1493704996.0, -28800]
}, {
"node": "3d4a563e33bed51faaf752e19d2d3df761edc8bd",
"author": "Boris Chiou \u003cboris.chiou@gmail.com\u003e",
"desc": "Bug 1334036 - Part 8: Add AddLayerChangesForAnimation in ServoRestyleManager. r=birtles\n\nSome changes to animations don't affect the computed style and yet still\nrequire the layer to be updated. Therefore, we also need to call\nAddLayerChangesForAnimation in ServoRestyleManager. In this patch, we\nfactor out this function from GeckoRestyleManager, so we can reuse it.\n\nMozReview-Commit-ID: LL7D1oGS65l",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 394,
"line": "    // require the layer to be updated. For example, pausing an animation via\n",
"lineno": 927,
"revdate": [1493704996.0, -28800]
}, {
"node": "3d4a563e33bed51faaf752e19d2d3df761edc8bd",
"author": "Boris Chiou \u003cboris.chiou@gmail.com\u003e",
"desc": "Bug 1334036 - Part 8: Add AddLayerChangesForAnimation in ServoRestyleManager. r=birtles\n\nSome changes to animations don't affect the computed style and yet still\nrequire the layer to be updated. Therefore, we also need to call\nAddLayerChangesForAnimation in ServoRestyleManager. In this patch, we\nfactor out this function from GeckoRestyleManager, so we can reuse it.\n\nMozReview-Commit-ID: LL7D1oGS65l",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 395,
"line": "    // the Web Animations API won't affect an element's style but still\n",
"lineno": 928,
"revdate": [1493704996.0, -28800]
}, {
"node": "3d4a563e33bed51faaf752e19d2d3df761edc8bd",
"author": "Boris Chiou \u003cboris.chiou@gmail.com\u003e",
"desc": "Bug 1334036 - Part 8: Add AddLayerChangesForAnimation in ServoRestyleManager. r=birtles\n\nSome changes to animations don't affect the computed style and yet still\nrequire the layer to be updated. Therefore, we also need to call\nAddLayerChangesForAnimation in ServoRestyleManager. In this patch, we\nfactor out this function from GeckoRestyleManager, so we can reuse it.\n\nMozReview-Commit-ID: LL7D1oGS65l",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 396,
"line": "    // requires to update the animation on the layer.\n",
"lineno": 929,
"revdate": [1493704996.0, -28800]
}, {
"node": "3d4a563e33bed51faaf752e19d2d3df761edc8bd",
"author": "Boris Chiou \u003cboris.chiou@gmail.com\u003e",
"desc": "Bug 1334036 - Part 8: Add AddLayerChangesForAnimation in ServoRestyleManager. r=birtles\n\nSome changes to animations don't affect the computed style and yet still\nrequire the layer to be updated. Therefore, we also need to call\nAddLayerChangesForAnimation in ServoRestyleManager. In this patch, we\nfactor out this function from GeckoRestyleManager, so we can reuse it.\n\nMozReview-Commit-ID: LL7D1oGS65l",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 397,
"line": "    //\n",
"lineno": 930,
"revdate": [1493704996.0, -28800]
}, {
"node": "3d4a563e33bed51faaf752e19d2d3df761edc8bd",
"author": "Boris Chiou \u003cboris.chiou@gmail.com\u003e",
"desc": "Bug 1334036 - Part 8: Add AddLayerChangesForAnimation in ServoRestyleManager. r=birtles\n\nSome changes to animations don't affect the computed style and yet still\nrequire the layer to be updated. Therefore, we also need to call\nAddLayerChangesForAnimation in ServoRestyleManager. In this patch, we\nfactor out this function from GeckoRestyleManager, so we can reuse it.\n\nMozReview-Commit-ID: LL7D1oGS65l",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 398,
"line": "    // We can sometimes reach this when the animated style is being removed.\n",
"lineno": 931,
"revdate": [1493704996.0, -28800]
}, {
"node": "3d4a563e33bed51faaf752e19d2d3df761edc8bd",
"author": "Boris Chiou \u003cboris.chiou@gmail.com\u003e",
"desc": "Bug 1334036 - Part 8: Add AddLayerChangesForAnimation in ServoRestyleManager. r=birtles\n\nSome changes to animations don't affect the computed style and yet still\nrequire the layer to be updated. Therefore, we also need to call\nAddLayerChangesForAnimation in ServoRestyleManager. In this patch, we\nfactor out this function from GeckoRestyleManager, so we can reuse it.\n\nMozReview-Commit-ID: LL7D1oGS65l",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 399,
"line": "    // Since AddLayerChangesForAnimation checks if |styleFrame| has a transform\n",
"lineno": 932,
"revdate": [1493704996.0, -28800]
}, {
"node": "3d4a563e33bed51faaf752e19d2d3df761edc8bd",
"author": "Boris Chiou \u003cboris.chiou@gmail.com\u003e",
"desc": "Bug 1334036 - Part 8: Add AddLayerChangesForAnimation in ServoRestyleManager. r=birtles\n\nSome changes to animations don't affect the computed style and yet still\nrequire the layer to be updated. Therefore, we also need to call\nAddLayerChangesForAnimation in ServoRestyleManager. In this patch, we\nfactor out this function from GeckoRestyleManager, so we can reuse it.\n\nMozReview-Commit-ID: LL7D1oGS65l",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 400,
"line": "    // style or not, we need to call it *after* setting |newContext| to\n",
"lineno": 933,
"revdate": [1493704996.0, -28800]
}, {
"node": "3d4a563e33bed51faaf752e19d2d3df761edc8bd",
"author": "Boris Chiou \u003cboris.chiou@gmail.com\u003e",
"desc": "Bug 1334036 - Part 8: Add AddLayerChangesForAnimation in ServoRestyleManager. r=birtles\n\nSome changes to animations don't affect the computed style and yet still\nrequire the layer to be updated. Therefore, we also need to call\nAddLayerChangesForAnimation in ServoRestyleManager. In this patch, we\nfactor out this function from GeckoRestyleManager, so we can reuse it.\n\nMozReview-Commit-ID: LL7D1oGS65l",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 401,
"line": "    // |styleFrame| to ensure the animated transform has been removed first.\n",
"lineno": 934,
"revdate": [1493704996.0, -28800]
}, {
"node": "fdde73cf429c62cd1e712afcc196110f8601cb2a",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1374752: Pack together the StyleSet, ChangeList and handled change hints, and use the latter with anonymous boxes while we're at it. r=heycam\n\nMozReview-Commit-ID: DiWcUwD9po5",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 448,
"line": "    AddLayerChangesForAnimation(\n",
"lineno": 935,
"revdate": [1497993687.0, -7200]
}, {
"node": "fdde73cf429c62cd1e712afcc196110f8601cb2a",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1374752: Pack together the StyleSet, ChangeList and handled change hints, and use the latter with anonymous boxes while we're at it. r=heycam\n\nMozReview-Commit-ID: DiWcUwD9po5",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 449,
"line": "      styleFrame, aElement, aRestyleState.ChangeList());\n",
"lineno": 936,
"revdate": [1497993687.0, -7200]
}, {
"node": "a5c00f0df5be05a13ec87004719a0ac4d410cb22",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1390409 part 3 - Send a11y notification for visibility changes. r=emilio\n\nMozReview-Commit-ID: I48OhzekXvD",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 895,
"line": "\n",
"lineno": 937,
"revdate": [1503903505.0, -36000]
}, {
"node": "a5c00f0df5be05a13ec87004719a0ac4d410cb22",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1390409 part 3 - Send a11y notification for visibility changes. r=emilio\n\nMozReview-Commit-ID: I48OhzekXvD",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 896,
"line": "    childrenFlags |= SendA11yNotifications(mPresContext, aElement,\n",
"lineno": 938,
"revdate": [1503903505.0, -36000]
}, {
"node": "a5c00f0df5be05a13ec87004719a0ac4d410cb22",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1390409 part 3 - Send a11y notification for visibility changes. r=emilio\n\nMozReview-Commit-ID: I48OhzekXvD",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 897,
"line": "                                           oldStyleContext,\n",
"lineno": 939,
"revdate": [1503903505.0, -36000]
}, {
"node": "a5c00f0df5be05a13ec87004719a0ac4d410cb22",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1390409 part 3 - Send a11y notification for visibility changes. r=emilio\n\nMozReview-Commit-ID: I48OhzekXvD",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 898,
"line": "                                           upToDateContext, aFlags);\n",
"lineno": 940,
"revdate": [1503903505.0, -36000]
}, {
"node": "e816e9199940ce2b4cbace056b9a849048bf4a63",
"author": "Emilio Cobos \u00c1lvarez \u003cecoal95@gmail.com\u003e",
"desc": "Bug 1286445: stylo: Unset restyle frames appropriately after regenerating style contexts. r=heycam\n\nMozReview-Commit-ID: IgG4KOESJUY\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 129,
"line": "  }\n",
"lineno": 941,
"revdate": [1468608525.0, 25200]
}, {
"node": "6ba3d1fe1de9e8dbb77e49c18bda7b602e3c8a08",
"author": "Emilio Cobos \u00c1lvarez \u003cecoal95@gmail.com\u003e",
"desc": "Bug 1286445: stylo: Support restyles of non-pseudo content on state change. r=heycam\n\nThis includes, for example :hover.\n\nAlso removes the call to IsStyledByServo() in the document constructor, it's not\nonly unnecessary, but also we call UpdateStyleBackendType() too early.\n\nMozReview-Commit-ID: 4YfCdmLoSxu\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 125,
"line": "\n",
"lineno": 942,
"revdate": [1468442567.0, 25200]
}, {
"node": "98a02686d1ba70c41f558e8f129a4089554d8e88",
"author": "Hiroyuki Ikezoe \u003chikezoe@mozilla.com\u003e",
"desc": "Bug 1371450 - Don't traverse normal dirty elements in ProcessPostTraversal when we process throttled animations restyle for event handling. r=emilio\n\nWhen we process throttled animations restyle for event handling, we skip normal\ntraversal at all, so after Servo_TraverseSubtree, normally there remains\nunstyled elements which have to be processed in normal traversal later. These\nelements should be skipped in ProcessPostTraversal too since it's not yet styled!\n\nMozReview-Commit-ID: LgyWQpiFZ8e",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 615,
"line": "  const bool traverseElementChildren =\n",
"lineno": 943,
"revdate": [1500091754.0, -32400]
}, {
"node": "86b793bcbcd090a4189814f14204a2e0ea7929ef",
"author": "Bobby Holley \u003cbobbyholley@gmail.com\u003e",
"desc": "Bug 1383332 - Track the restyle root and use it to do less work during the traversal. r=emilio\n\nMozReview-Commit-ID: A8O3JOpsv4E\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 806,
"line": "    aElement-\u003eHasAnyOfFlags(Element::kAllServoDescendantBits);\n",
"lineno": 944,
"revdate": [1500428327.0, 25200]
}, {
"node": "86b793bcbcd090a4189814f14204a2e0ea7929ef",
"author": "Bobby Holley \u003cbobbyholley@gmail.com\u003e",
"desc": "Bug 1383332 - Track the restyle root and use it to do less work during the traversal. r=emilio\n\nMozReview-Commit-ID: A8O3JOpsv4E\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 807,
"line": "  const bool traverseTextChildren =\n",
"lineno": 945,
"revdate": [1500428327.0, 25200]
}, {
"node": "86b793bcbcd090a4189814f14204a2e0ea7929ef",
"author": "Bobby Holley \u003cbobbyholley@gmail.com\u003e",
"desc": "Bug 1383332 - Track the restyle root and use it to do less work during the traversal. r=emilio\n\nMozReview-Commit-ID: A8O3JOpsv4E\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 808,
"line": "    wasRestyled || aElement-\u003eHasFlag(NODE_DESCENDANTS_NEED_FRAMES);\n",
"lineno": 946,
"revdate": [1500428327.0, 25200]
}, {
"node": "827b15ee4c8d1a72ea7d2c43e6a47c3c3d8853ec",
"author": "Hiroyuki Ikezoe \u003chikezoe@mozilla.com\u003e",
"desc": "Bug 1371450 - Recreate style context only if the element was restyled during the traversal. r=emilio\n\nMozReview-Commit-ID: CBYTB5FeikP",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 619,
"line": "  bool recreatedAnyContext = wasRestyled;\n",
"lineno": 947,
"revdate": [1500092171.0, -32400]
}, {
"node": "7c852ac4acf83d5d1776e98a6af36193bd97a9e5",
"author": "Bobby Holley \u003cbobbyholley@gmail.com\u003e",
"desc": "Bug 1317016 - Basic infrastructure for RestyleHint-driven traversal. r=emilio\n\nMozReview-Commit-ID: 7wH5XcILVmX\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 204,
"line": "  if (traverseElementChildren || traverseTextChildren) {\n",
"lineno": 948,
"revdate": [1478067084.0, 25200]
}, {
"node": "7c852ac4acf83d5d1776e98a6af36193bd97a9e5",
"author": "Bobby Holley \u003cbobbyholley@gmail.com\u003e",
"desc": "Bug 1317016 - Basic infrastructure for RestyleHint-driven traversal. r=emilio\n\nMozReview-Commit-ID: 7wH5XcILVmX\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 205,
"line": "    StyleChildrenIterator it(aElement);\n",
"lineno": 949,
"revdate": [1478067084.0, 25200]
}, {
"node": "f9d851dcc3740591e1c7a6bdec1bea8b50a3ef3c",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1392170: Don't call ResolveServoStyle unnecessarily for undisplayed and not restyled stuff. r=heycam\n\nIn particular, this avoids the stupid calls in display: none roots.\n\nThe cache stuff should be unnecessary, but there's still some fishy stuff going\non.\n\nMozReview-Commit-ID: LgnW0k1gmsN",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 823,
"line": "    TextPostTraversalState textState(*aElement,\n",
"lineno": 950,
"revdate": [1503488057.0, -7200]
}, {
"node": "f9d851dcc3740591e1c7a6bdec1bea8b50a3ef3c",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1392170: Don't call ResolveServoStyle unnecessarily for undisplayed and not restyled stuff. r=heycam\n\nIn particular, this avoids the stupid calls in display: none roots.\n\nThe cache stuff should be unnecessary, but there's still some fishy stuff going\non.\n\nMozReview-Commit-ID: LgnW0k1gmsN",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 824,
"line": "                                     upToDateContext,\n",
"lineno": 951,
"revdate": [1503488057.0, -7200]
}, {
"node": "28226c771f1114d0fc219be3fa7c0e1413067e32",
"author": "Jonathan Watt \u003cjwatt@jwatt.org\u003e",
"desc": "Bug 1388939, part 8 - Remove nsFrameManager::GetDisplayContentsNodeFor and rewrite its caller to use other APIs. r=dholbert\n\nMozReview-Commit-ID: 6S4MpwBlrjj",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 711,
"line": "                                     displayContentsStyle && wasRestyled,\n",
"lineno": 952,
"revdate": [1501664188.0, -3600]
}, {
"node": "fdde73cf429c62cd1e712afcc196110f8601cb2a",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1374752: Pack together the StyleSet, ChangeList and handled change hints, and use the latter with anonymous boxes while we're at it. r=heycam\n\nMozReview-Commit-ID: DiWcUwD9po5",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 467,
"line": "                                     childrenRestyleState);\n",
"lineno": 953,
"revdate": [1497993687.0, -7200]
}, {
"node": "e816e9199940ce2b4cbace056b9a849048bf4a63",
"author": "Emilio Cobos \u00c1lvarez \u003cecoal95@gmail.com\u003e",
"desc": "Bug 1286445: stylo: Unset restyle frames appropriately after regenerating style contexts. r=heycam\n\nMozReview-Commit-ID: IgG4KOESJUY\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 133,
"line": "    for (nsIContent* n = it.GetNextChild(); n; n = it.GetNextChild()) {\n",
"lineno": 954,
"revdate": [1468608525.0, 25200]
}, {
"node": "7c852ac4acf83d5d1776e98a6af36193bd97a9e5",
"author": "Bobby Holley \u003cbobbyholley@gmail.com\u003e",
"desc": "Bug 1317016 - Basic infrastructure for RestyleHint-driven traversal. r=emilio\n\nMozReview-Commit-ID: 7wH5XcILVmX\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 207,
"line": "      if (traverseElementChildren && n-\u003eIsElement()) {\n",
"lineno": 955,
"revdate": [1478067084.0, 25200]
}, {
"node": "98a02686d1ba70c41f558e8f129a4089554d8e88",
"author": "Hiroyuki Ikezoe \u003chikezoe@mozilla.com\u003e",
"desc": "Bug 1371450 - Don't traverse normal dirty elements in ProcessPostTraversal when we process throttled animations restyle for event handling. r=emilio\n\nWhen we process throttled animations restyle for event handling, we skip normal\ntraversal at all, so after Servo_TraverseSubtree, normally there remains\nunstyled elements which have to be processed in normal traversal later. These\nelements should be skipped in ProcessPostTraversal too since it's not yet styled!\n\nMozReview-Commit-ID: LgyWQpiFZ8e",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 634,
"line": "        recreatedAnyContext |= ProcessPostTraversal(n-\u003eAsElement(),\n",
"lineno": 956,
"revdate": [1500091754.0, -32400]
}, {
"node": "98a02686d1ba70c41f558e8f129a4089554d8e88",
"author": "Hiroyuki Ikezoe \u003chikezoe@mozilla.com\u003e",
"desc": "Bug 1371450 - Don't traverse normal dirty elements in ProcessPostTraversal when we process throttled animations restyle for event handling. r=emilio\n\nWhen we process throttled animations restyle for event handling, we skip normal\ntraversal at all, so after Servo_TraverseSubtree, normally there remains\nunstyled elements which have to be processed in normal traversal later. These\nelements should be skipped in ProcessPostTraversal too since it's not yet styled!\n\nMozReview-Commit-ID: LgyWQpiFZ8e",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 635,
"line": "                                                    upToDateContext,\n",
"lineno": 957,
"revdate": [1500091754.0, -32400]
}, {
"node": "98a02686d1ba70c41f558e8f129a4089554d8e88",
"author": "Hiroyuki Ikezoe \u003chikezoe@mozilla.com\u003e",
"desc": "Bug 1371450 - Don't traverse normal dirty elements in ProcessPostTraversal when we process throttled animations restyle for event handling. r=emilio\n\nWhen we process throttled animations restyle for event handling, we skip normal\ntraversal at all, so after Servo_TraverseSubtree, normally there remains\nunstyled elements which have to be processed in normal traversal later. These\nelements should be skipped in ProcessPostTraversal too since it's not yet styled!\n\nMozReview-Commit-ID: LgyWQpiFZ8e",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 636,
"line": "                                                    childrenRestyleState,\n",
"lineno": 958,
"revdate": [1500091754.0, -32400]
}, {
"node": "2a54187a362e9809ee0a45c4bb7008705f3016b9",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1390409 part 2 - Replace aParentWasRestyled with a bitflag. r=emilio\n\nMozReview-Commit-ID: 49C1N6LNXi7",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 844,
"line": "                                                    childrenFlags);\n",
"lineno": 959,
"revdate": [1503896015.0, -36000]
}, {
"node": "7c852ac4acf83d5d1776e98a6af36193bd97a9e5",
"author": "Bobby Holley \u003cbobbyholley@gmail.com\u003e",
"desc": "Bug 1317016 - Basic infrastructure for RestyleHint-driven traversal. r=emilio\n\nMozReview-Commit-ID: 7wH5XcILVmX\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 213,
"line": "      } else if (traverseTextChildren && n-\u003eIsNodeOfType(nsINode::eTEXT)) {\n",
"lineno": 960,
"revdate": [1478067084.0, 25200]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 891,
"line": "        recreatedAnyContext |= ProcessPostTraversalForText(n, textState,\n",
"lineno": 961,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 892,
"line": "                                                           childrenRestyleState,\n",
"lineno": 962,
"revdate": [1502424626.0, 14400]
}, {
"node": "2a54187a362e9809ee0a45c4bb7008705f3016b9",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1390409 part 2 - Replace aParentWasRestyled with a bitflag. r=emilio\n\nMozReview-Commit-ID: 49C1N6LNXi7",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 848,
"line": "                                                           childrenFlags);\n",
"lineno": 963,
"revdate": [1503896015.0, -36000]
}, {
"node": "c49ec67995bcee88868679ff1e8410bb980393ef",
"author": "Emilio Cobos \u00c1lvarez \u003cecoal95@gmail.com\u003e",
"desc": "Bug 1314161: stylo: Don't try to recreate style contexts for non-element and non-text nodes. r=bholley\n\nSigned-off-by: Emilio Cobos \u00c1lvarez \u003cecoal95@gmail.com\u003e\n\nMozReview-Commit-ID: 4qvF2T7BR4h\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 214,
"line": "      }\n",
"lineno": 964,
"revdate": [1477995898.0, -3600]
}, {
"node": "e816e9199940ce2b4cbace056b9a849048bf4a63",
"author": "Emilio Cobos \u00c1lvarez \u003cecoal95@gmail.com\u003e",
"desc": "Bug 1286445: stylo: Unset restyle frames appropriately after regenerating style contexts. r=heycam\n\nMozReview-Commit-ID: IgG4KOESJUY\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 135,
"line": "    }\n",
"lineno": 965,
"revdate": [1468608525.0, 25200]
}, {
"node": "6ba3d1fe1de9e8dbb77e49c18bda7b602e3c8a08",
"author": "Emilio Cobos \u00c1lvarez \u003cecoal95@gmail.com\u003e",
"desc": "Bug 1286445: stylo: Support restyles of non-pseudo content on state change. r=heycam\n\nThis includes, for example :hover.\n\nAlso removes the call to IsStyledByServo() in the document constructor, it's not\nonly unnecessary, but also we call UpdateStyleBackendType() too early.\n\nMozReview-Commit-ID: 4YfCdmLoSxu\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 133,
"line": "  }\n",
"lineno": 966,
"revdate": [1468442567.0, 25200]
}, {
"node": "7c852ac4acf83d5d1776e98a6af36193bd97a9e5",
"author": "Bobby Holley \u003cbobbyholley@gmail.com\u003e",
"desc": "Bug 1317016 - Basic infrastructure for RestyleHint-driven traversal. r=emilio\n\nMozReview-Commit-ID: 7wH5XcILVmX\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 219,
"line": "\n",
"lineno": 967,
"revdate": [1478067084.0, 25200]
}, {
"node": "924edce03a646367d2134847b60ee305f78430b0",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324618 part 6.  Change when we update frame pseudo styles to happen after we've dealt with styles for the frame's kids.  r=emilio\n\n::first-letter and ::first-line both want to change the styles of kids, and we\ndon't want the normal post-traversal for kids to clobber those changes.\n\nMozReview-Commit-ID: 1tIsXz1n0uZ",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 460,
"line": "  // We want to update frame pseudo-element styles after we've traversed our\n",
"lineno": 968,
"revdate": [1498545308.0, 25200]
}, {
"node": "924edce03a646367d2134847b60ee305f78430b0",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324618 part 6.  Change when we update frame pseudo styles to happen after we've dealt with styles for the frame's kids.  r=emilio\n\n::first-letter and ::first-line both want to change the styles of kids, and we\ndon't want the normal post-traversal for kids to clobber those changes.\n\nMozReview-Commit-ID: 1tIsXz1n0uZ",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 461,
"line": "  // kids, because some of those updates (::first-line/::first-letter) need to\n",
"lineno": 969,
"revdate": [1498545308.0, 25200]
}, {
"node": "924edce03a646367d2134847b60ee305f78430b0",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324618 part 6.  Change when we update frame pseudo styles to happen after we've dealt with styles for the frame's kids.  r=emilio\n\n::first-letter and ::first-line both want to change the styles of kids, and we\ndon't want the normal post-traversal for kids to clobber those changes.\n\nMozReview-Commit-ID: 1tIsXz1n0uZ",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 462,
"line": "  // modify the styles of the kids, and the child traversal above would just\n",
"lineno": 970,
"revdate": [1498545308.0, 25200]
}, {
"node": "924edce03a646367d2134847b60ee305f78430b0",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324618 part 6.  Change when we update frame pseudo styles to happen after we've dealt with styles for the frame's kids.  r=emilio\n\n::first-letter and ::first-line both want to change the styles of kids, and we\ndon't want the normal post-traversal for kids to clobber those changes.\n\nMozReview-Commit-ID: 1tIsXz1n0uZ",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 463,
"line": "  // clobber those modifications.\n",
"lineno": 971,
"revdate": [1498545308.0, 25200]
}, {
"node": "ab3c85d4d199c903f6359e276def141d67a000d7",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 6.  Handle dynamic restyles of ::first-line in stylo.  r=emilio\n\nMozReview-Commit-ID: 3jQhIqPuL1g",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 724,
"line": "  if (styleFrame) {\n",
"lineno": 972,
"revdate": [1501291247.0, 14400]
}, {
"node": "ab3c85d4d199c903f6359e276def141d67a000d7",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 6.  Handle dynamic restyles of ::first-line in stylo.  r=emilio\n\nMozReview-Commit-ID: 3jQhIqPuL1g",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 725,
"line": "    if (wasRestyled) {\n",
"lineno": 973,
"revdate": [1501291247.0, 14400]
}, {
"node": "51a2953c8c4192d24fd1128fd6104528bca46729",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1428164: Restyle owned anon boxes after processing children. r=bz\n\nMozReview-Commit-ID: 4QcJPY9hkSm\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 975,
"line": "      // Make sure to update anon boxes and pseudo bits after updating text,\n",
"lineno": 974,
"revdate": [1515149280.0, -3600]
}, {
"node": "53d64a077a8ef3a34697c7aa3b0776d3e8d11539",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1433591: Update the style of child anon box wrapper after owned anon boxes. r=bz\n\nSince the former could inherit from the latter.\n\nTest incoming in a followup.\n\nMozReview-Commit-ID: LJjprcyjDyU\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 975,
"line": "      // otherwise ProcessPostTraversalForText could clobber first-letter\n",
"lineno": 975,
"revdate": [1517109313.0, -3600]
}, {
"node": "53d64a077a8ef3a34697c7aa3b0776d3e8d11539",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1433591: Update the style of child anon box wrapper after owned anon boxes. r=bz\n\nSince the former could inherit from the latter.\n\nTest incoming in a followup.\n\nMozReview-Commit-ID: LJjprcyjDyU\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 976,
"line": "      // styles, for example.\n",
"lineno": 976,
"revdate": [1517109313.0, -3600]
}, {
"node": "51a2953c8c4192d24fd1128fd6104528bca46729",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1428164: Restyle owned anon boxes after processing children. r=bz\n\nMozReview-Commit-ID: 4QcJPY9hkSm\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 978,
"line": "      styleFrame-\u003eUpdateStyleOfOwnedAnonBoxes(childrenRestyleState);\n",
"lineno": 977,
"revdate": [1515149280.0, -3600]
}, {
"node": "53d64a077a8ef3a34697c7aa3b0776d3e8d11539",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1433591: Update the style of child anon box wrapper after owned anon boxes. r=bz\n\nSince the former could inherit from the latter.\n\nTest incoming in a followup.\n\nMozReview-Commit-ID: LJjprcyjDyU\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 978,
"line": "    }\n",
"lineno": 978,
"revdate": [1517109313.0, -3600]
}, {
"node": "53d64a077a8ef3a34697c7aa3b0776d3e8d11539",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1433591: Update the style of child anon box wrapper after owned anon boxes. r=bz\n\nSince the former could inherit from the latter.\n\nTest incoming in a followup.\n\nMozReview-Commit-ID: LJjprcyjDyU\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 979,
"line": "    // Process anon box wrapper frames before ::first-line bits, but _after_\n",
"lineno": 979,
"revdate": [1517109313.0, -3600]
}, {
"node": "53d64a077a8ef3a34697c7aa3b0776d3e8d11539",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1433591: Update the style of child anon box wrapper after owned anon boxes. r=bz\n\nSince the former could inherit from the latter.\n\nTest incoming in a followup.\n\nMozReview-Commit-ID: LJjprcyjDyU\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 980,
"line": "    // owned anon boxes, since the children wrapper anon boxes could be\n",
"lineno": 980,
"revdate": [1517109313.0, -3600]
}, {
"node": "53d64a077a8ef3a34697c7aa3b0776d3e8d11539",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1433591: Update the style of child anon box wrapper after owned anon boxes. r=bz\n\nSince the former could inherit from the latter.\n\nTest incoming in a followup.\n\nMozReview-Commit-ID: LJjprcyjDyU\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 981,
"line": "    // inheriting from our own owned anon boxes.\n",
"lineno": 981,
"revdate": [1517109313.0, -3600]
}, {
"node": "53d64a077a8ef3a34697c7aa3b0776d3e8d11539",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1433591: Update the style of child anon box wrapper after owned anon boxes. r=bz\n\nSince the former could inherit from the latter.\n\nTest incoming in a followup.\n\nMozReview-Commit-ID: LJjprcyjDyU\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 982,
"line": "    childrenRestyleState.ProcessWrapperRestyles(styleFrame);\n",
"lineno": 982,
"revdate": [1517109313.0, -3600]
}, {
"node": "53d64a077a8ef3a34697c7aa3b0776d3e8d11539",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1433591: Update the style of child anon box wrapper after owned anon boxes. r=bz\n\nSince the former could inherit from the latter.\n\nTest incoming in a followup.\n\nMozReview-Commit-ID: LJjprcyjDyU\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 983,
"line": "    if (wasRestyled) {\n",
"lineno": 983,
"revdate": [1517109313.0, -3600]
}, {
"node": "ab3c85d4d199c903f6359e276def141d67a000d7",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 6.  Handle dynamic restyles of ::first-line in stylo.  r=emilio\n\nMozReview-Commit-ID: 3jQhIqPuL1g",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 726,
"line": "      UpdateFramePseudoElementStyles(styleFrame, childrenRestyleState);\n",
"lineno": 984,
"revdate": [1501291247.0, 14400]
}, {
"node": "ab3c85d4d199c903f6359e276def141d67a000d7",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 6.  Handle dynamic restyles of ::first-line in stylo.  r=emilio\n\nMozReview-Commit-ID: 3jQhIqPuL1g",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 727,
"line": "    } else if (traverseElementChildren &&\n",
"lineno": 985,
"revdate": [1501291247.0, 14400]
}, {
"node": "ab3c85d4d199c903f6359e276def141d67a000d7",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 6.  Handle dynamic restyles of ::first-line in stylo.  r=emilio\n\nMozReview-Commit-ID: 3jQhIqPuL1g",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 728,
"line": "               styleFrame-\u003eIsFrameOfType(nsIFrame::eBlockFrame)) {\n",
"lineno": 986,
"revdate": [1501291247.0, 14400]
}, {
"node": "ab3c85d4d199c903f6359e276def141d67a000d7",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 6.  Handle dynamic restyles of ::first-line in stylo.  r=emilio\n\nMozReview-Commit-ID: 3jQhIqPuL1g",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 729,
"line": "      // Even if we were not restyled, if we're a block with a first-line and\n",
"lineno": 987,
"revdate": [1501291247.0, 14400]
}, {
"node": "ab3c85d4d199c903f6359e276def141d67a000d7",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 6.  Handle dynamic restyles of ::first-line in stylo.  r=emilio\n\nMozReview-Commit-ID: 3jQhIqPuL1g",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 730,
"line": "      // one of our descendant elements which is on the first line was restyled,\n",
"lineno": 988,
"revdate": [1501291247.0, 14400]
}, {
"node": "ab3c85d4d199c903f6359e276def141d67a000d7",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 6.  Handle dynamic restyles of ::first-line in stylo.  r=emilio\n\nMozReview-Commit-ID: 3jQhIqPuL1g",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 731,
"line": "      // we need to update the styles of things on the first line, because\n",
"lineno": 989,
"revdate": [1501291247.0, 14400]
}, {
"node": "ab3c85d4d199c903f6359e276def141d67a000d7",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 6.  Handle dynamic restyles of ::first-line in stylo.  r=emilio\n\nMozReview-Commit-ID: 3jQhIqPuL1g",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 732,
"line": "      // they're wrong now.\n",
"lineno": 990,
"revdate": [1501291247.0, 14400]
}, {
"node": "ab3c85d4d199c903f6359e276def141d67a000d7",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 6.  Handle dynamic restyles of ::first-line in stylo.  r=emilio\n\nMozReview-Commit-ID: 3jQhIqPuL1g",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 733,
"line": "      //\n",
"lineno": 991,
"revdate": [1501291247.0, 14400]
}, {
"node": "ab3c85d4d199c903f6359e276def141d67a000d7",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 6.  Handle dynamic restyles of ::first-line in stylo.  r=emilio\n\nMozReview-Commit-ID: 3jQhIqPuL1g",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 734,
"line": "      // FIXME(bz) Could we do better here?  For example, could we keep track of\n",
"lineno": 992,
"revdate": [1501291247.0, 14400]
}, {
"node": "ab3c85d4d199c903f6359e276def141d67a000d7",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 6.  Handle dynamic restyles of ::first-line in stylo.  r=emilio\n\nMozReview-Commit-ID: 3jQhIqPuL1g",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 735,
"line": "      // frames that are \"block with a ::first-line so we could avoid\n",
"lineno": 993,
"revdate": [1501291247.0, 14400]
}, {
"node": "ab3c85d4d199c903f6359e276def141d67a000d7",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 6.  Handle dynamic restyles of ::first-line in stylo.  r=emilio\n\nMozReview-Commit-ID: 3jQhIqPuL1g",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 736,
"line": "      // IsFrameOfType() and digging about for the first-line frame if not?\n",
"lineno": 994,
"revdate": [1501291247.0, 14400]
}, {
"node": "ab3c85d4d199c903f6359e276def141d67a000d7",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 6.  Handle dynamic restyles of ::first-line in stylo.  r=emilio\n\nMozReview-Commit-ID: 3jQhIqPuL1g",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 737,
"line": "      // Could we keep track of whether the element children we actually restyle\n",
"lineno": 995,
"revdate": [1501291247.0, 14400]
}, {
"node": "ab3c85d4d199c903f6359e276def141d67a000d7",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 6.  Handle dynamic restyles of ::first-line in stylo.  r=emilio\n\nMozReview-Commit-ID: 3jQhIqPuL1g",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 738,
"line": "      // are affected by first-line?  Something else?  Bug 1385443 tracks making\n",
"lineno": 996,
"revdate": [1501291247.0, 14400]
}, {
"node": "ab3c85d4d199c903f6359e276def141d67a000d7",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 6.  Handle dynamic restyles of ::first-line in stylo.  r=emilio\n\nMozReview-Commit-ID: 3jQhIqPuL1g",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 739,
"line": "      // this better.\n",
"lineno": 997,
"revdate": [1501291247.0, 14400]
}, {
"node": "ab3c85d4d199c903f6359e276def141d67a000d7",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 6.  Handle dynamic restyles of ::first-line in stylo.  r=emilio\n\nMozReview-Commit-ID: 3jQhIqPuL1g",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 740,
"line": "      nsIFrame* firstLineFrame =\n",
"lineno": 998,
"revdate": [1501291247.0, 14400]
}, {
"node": "ab3c85d4d199c903f6359e276def141d67a000d7",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 6.  Handle dynamic restyles of ::first-line in stylo.  r=emilio\n\nMozReview-Commit-ID: 3jQhIqPuL1g",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 741,
"line": "        static_cast\u003cnsBlockFrame*\u003e(styleFrame)-\u003eGetFirstLineFrame();\n",
"lineno": 999,
"revdate": [1501291247.0, 14400]
}, {
"node": "ab3c85d4d199c903f6359e276def141d67a000d7",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 6.  Handle dynamic restyles of ::first-line in stylo.  r=emilio\n\nMozReview-Commit-ID: 3jQhIqPuL1g",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 742,
"line": "      if (firstLineFrame) {\n",
"lineno": 1000,
"revdate": [1501291247.0, 14400]
}, {
"node": "ab3c85d4d199c903f6359e276def141d67a000d7",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 6.  Handle dynamic restyles of ::first-line in stylo.  r=emilio\n\nMozReview-Commit-ID: 3jQhIqPuL1g",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 743,
"line": "        for (nsIFrame* kid : firstLineFrame-\u003ePrincipalChildList()) {\n",
"lineno": 1001,
"revdate": [1501291247.0, 14400]
}, {
"node": "ab3c85d4d199c903f6359e276def141d67a000d7",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 6.  Handle dynamic restyles of ::first-line in stylo.  r=emilio\n\nMozReview-Commit-ID: 3jQhIqPuL1g",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 744,
"line": "          ReparentStyleContext(kid);\n",
"lineno": 1002,
"revdate": [1501291247.0, 14400]
}, {
"node": "ab3c85d4d199c903f6359e276def141d67a000d7",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 6.  Handle dynamic restyles of ::first-line in stylo.  r=emilio\n\nMozReview-Commit-ID: 3jQhIqPuL1g",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 745,
"line": "        }\n",
"lineno": 1003,
"revdate": [1501291247.0, 14400]
}, {
"node": "ab3c85d4d199c903f6359e276def141d67a000d7",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 6.  Handle dynamic restyles of ::first-line in stylo.  r=emilio\n\nMozReview-Commit-ID: 3jQhIqPuL1g",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 746,
"line": "      }\n",
"lineno": 1004,
"revdate": [1501291247.0, 14400]
}, {
"node": "ab3c85d4d199c903f6359e276def141d67a000d7",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 6.  Handle dynamic restyles of ::first-line in stylo.  r=emilio\n\nMozReview-Commit-ID: 3jQhIqPuL1g",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 747,
"line": "    }\n",
"lineno": 1005,
"revdate": [1501291247.0, 14400]
}, {
"node": "924edce03a646367d2134847b60ee305f78430b0",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324618 part 6.  Change when we update frame pseudo styles to happen after we've dealt with styles for the frame's kids.  r=emilio\n\n::first-letter and ::first-line both want to change the styles of kids, and we\ndon't want the normal post-traversal for kids to clobber those changes.\n\nMozReview-Commit-ID: 1tIsXz1n0uZ",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 466,
"line": "  }\n",
"lineno": 1006,
"revdate": [1498545308.0, 25200]
}, {
"node": "924edce03a646367d2134847b60ee305f78430b0",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324618 part 6.  Change when we update frame pseudo styles to happen after we've dealt with styles for the frame's kids.  r=emilio\n\n::first-letter and ::first-line both want to change the styles of kids, and we\ndon't want the normal post-traversal for kids to clobber those changes.\n\nMozReview-Commit-ID: 1tIsXz1n0uZ",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 467,
"line": "\n",
"lineno": 1007,
"revdate": [1498545308.0, 25200]
}, {
"node": "86b793bcbcd090a4189814f14204a2e0ea7929ef",
"author": "Bobby Holley \u003cbobbyholley@gmail.com\u003e",
"desc": "Bug 1383332 - Track the restyle root and use it to do less work during the traversal. r=emilio\n\nMozReview-Commit-ID: A8O3JOpsv4E\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 863,
"line": "  aElement-\u003eUnsetFlags(Element::kAllServoDescendantBits);\n",
"lineno": 1008,
"revdate": [1500428327.0, 25200]
}, {
"node": "e0477439b222422a105c9e108878fadf1f36354b",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1357461: Ensure not to increment the restyle generation if we haven't restyled after all. r=heycam\n\nThis can happen with content attribute or state changes that end up not\ngenerating any hint.\n\nIn particular, in the media_queries_dynamic.html case, the iframe resize was\ntoggling a few scrollbar attributes, which made us never pass the \"didn't\nrestyle\" test, even though the test really passed.\n\nI'll probably need to add a workaround to assume we use viewport units, so\nprobably won't pass for long.\n\nMozReview-Commit-ID: 2oEfic5yaOy",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 439,
"line": "  return recreatedAnyContext;\n",
"lineno": 1009,
"revdate": [1496431661.0, -7200]
}, {
"node": "6ba3d1fe1de9e8dbb77e49c18bda7b602e3c8a08",
"author": "Emilio Cobos \u00c1lvarez \u003cecoal95@gmail.com\u003e",
"desc": "Bug 1286445: stylo: Support restyles of non-pseudo content on state change. r=heycam\n\nThis includes, for example :hover.\n\nAlso removes the call to IsStyledByServo() in the document constructor, it's not\nonly unnecessary, but also we call UpdateStyleBackendType() too early.\n\nMozReview-Commit-ID: 4YfCdmLoSxu\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 134,
"line": "}\n",
"lineno": 1010,
"revdate": [1468442567.0, 25200]
}, {
"node": "6ba3d1fe1de9e8dbb77e49c18bda7b602e3c8a08",
"author": "Emilio Cobos \u00c1lvarez \u003cecoal95@gmail.com\u003e",
"desc": "Bug 1286445: stylo: Support restyles of non-pseudo content on state change. r=heycam\n\nThis includes, for example :hover.\n\nAlso removes the call to IsStyledByServo() in the document constructor, it's not\nonly unnecessary, but also we call UpdateStyleBackendType() too early.\n\nMozReview-Commit-ID: 4YfCdmLoSxu\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 135,
"line": "\n",
"lineno": 1011,
"revdate": [1468442567.0, 25200]
}, {
"node": "e0477439b222422a105c9e108878fadf1f36354b",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1357461: Ensure not to increment the restyle generation if we haven't restyled after all. r=heycam\n\nThis can happen with content attribute or state changes that end up not\ngenerating any hint.\n\nIn particular, in the media_queries_dynamic.html case, the iframe resize was\ntoggling a few scrollbar attributes, which made us never pass the \"didn't\nrestyle\" test, even though the test really passed.\n\nI'll probably need to add a workaround to assume we use viewport units, so\nprobably won't pass for long.\n\nMozReview-Commit-ID: 2oEfic5yaOy",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 442,
"line": "bool\n",
"lineno": 1012,
"revdate": [1496431661.0, -7200]
}, {
"node": "558c843afbd35b6a15d3dbe397048bf0e772f779",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1351339: Compute text style changes when the parent is a display: contents element. r=heycam\n\nMozReview-Commit-ID: GWPNevfP4xc",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 334,
"line": "ServoRestyleManager::ProcessPostTraversalForText(\n",
"lineno": 1013,
"revdate": [1494206203.0, -7200]
}, {
"node": "558c843afbd35b6a15d3dbe397048bf0e772f779",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1351339: Compute text style changes when the parent is a display: contents element. r=heycam\n\nMozReview-Commit-ID: GWPNevfP4xc",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 335,
"line": "    nsIContent* aTextNode,\n",
"lineno": 1014,
"revdate": [1494206203.0, -7200]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 943,
"line": "    TextPostTraversalState& aPostTraversalState,\n",
"lineno": 1015,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 944,
"line": "    ServoRestyleState& aRestyleState,\n",
"lineno": 1016,
"revdate": [1502424626.0, 14400]
}, {
"node": "2a54187a362e9809ee0a45c4bb7008705f3016b9",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1390409 part 2 - Replace aParentWasRestyled with a bitflag. r=emilio\n\nMozReview-Commit-ID: 49C1N6LNXi7",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 895,
"line": "    ServoPostTraversalFlags aFlags)\n",
"lineno": 1017,
"revdate": [1503896015.0, -36000]
}, {
"node": "b54cf953d8c40fbe82ecef271f5f6e0ad52abaa5",
"author": "Emilio Cobos \u00c1lvarez \u003cecoal95@gmail.com\u003e",
"desc": "Bug 1288873: Don't propagate the IS_DIRTY flag down the whole tree, just make it\nimply that all descendants are dirty. r=heycam\n\nWe're probably going to be a lot more smarter than this in the future, but since\nthere is work in progress to figure out how should we avoid running\nselector-matching on the elements, this helps a lot with perf in the meantime.\n\nMozReview-Commit-ID: CEb15JwHAdH\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 129,
"line": "{\n",
"lineno": 1018,
"revdate": [1469225970.0, 25200]
}, {
"node": "4a2a58be8c6c54dbf85b90aa85e4d4281e72088f",
"author": "Bobby Holley \u003cbobbyholley@gmail.com\u003e",
"desc": "Bug 1338921 - Handle lazy frame construction in the regular post-servo pass. r=emilio\n\nMozReview-Commit-ID: FSXKAiyZDzt\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 302,
"line": "  // Handle lazy frame construction.\n",
"lineno": 1019,
"revdate": [1488251167.0, 28800]
}, {
"node": "4a2a58be8c6c54dbf85b90aa85e4d4281e72088f",
"author": "Bobby Holley \u003cbobbyholley@gmail.com\u003e",
"desc": "Bug 1338921 - Handle lazy frame construction in the regular post-servo pass. r=emilio\n\nMozReview-Commit-ID: FSXKAiyZDzt\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 303,
"line": "  if (aTextNode-\u003eHasFlag(NODE_NEEDS_FRAME)) {\n",
"lineno": 1020,
"revdate": [1488251167.0, 28800]
}, {
"node": "fdde73cf429c62cd1e712afcc196110f8601cb2a",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1374752: Pack together the StyleSet, ChangeList and handled change hints, and use the latter with anonymous boxes while we're at it. r=heycam\n\nMozReview-Commit-ID: DiWcUwD9po5",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 491,
"line": "    aPostTraversalState.ChangeList().AppendChange(\n",
"lineno": 1021,
"revdate": [1497993687.0, -7200]
}, {
"node": "fdde73cf429c62cd1e712afcc196110f8601cb2a",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1374752: Pack together the StyleSet, ChangeList and handled change hints, and use the latter with anonymous boxes while we're at it. r=heycam\n\nMozReview-Commit-ID: DiWcUwD9po5",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 492,
"line": "      nullptr, aTextNode, nsChangeHint_ReconstructFrame);\n",
"lineno": 1022,
"revdate": [1497993687.0, -7200]
}, {
"node": "e0477439b222422a105c9e108878fadf1f36354b",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1357461: Ensure not to increment the restyle generation if we haven't restyled after all. r=heycam\n\nThis can happen with content attribute or state changes that end up not\ngenerating any hint.\n\nIn particular, in the media_queries_dynamic.html case, the iframe resize was\ntoggling a few scrollbar attributes, which made us never pass the \"didn't\nrestyle\" test, even though the test really passed.\n\nI'll probably need to add a workaround to assume we use viewport units, so\nprobably won't pass for long.\n\nMozReview-Commit-ID: 2oEfic5yaOy",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 451,
"line": "    return true;\n",
"lineno": 1023,
"revdate": [1496431661.0, -7200]
}, {
"node": "4a2a58be8c6c54dbf85b90aa85e4d4281e72088f",
"author": "Bobby Holley \u003cbobbyholley@gmail.com\u003e",
"desc": "Bug 1338921 - Handle lazy frame construction in the regular post-servo pass. r=emilio\n\nMozReview-Commit-ID: FSXKAiyZDzt\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 306,
"line": "  }\n",
"lineno": 1024,
"revdate": [1488251167.0, 28800]
}, {
"node": "4a2a58be8c6c54dbf85b90aa85e4d4281e72088f",
"author": "Bobby Holley \u003cbobbyholley@gmail.com\u003e",
"desc": "Bug 1338921 - Handle lazy frame construction in the regular post-servo pass. r=emilio\n\nMozReview-Commit-ID: FSXKAiyZDzt\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 307,
"line": "\n",
"lineno": 1025,
"revdate": [1488251167.0, 28800]
}, {
"node": "4a2a58be8c6c54dbf85b90aa85e4d4281e72088f",
"author": "Bobby Holley \u003cbobbyholley@gmail.com\u003e",
"desc": "Bug 1338921 - Handle lazy frame construction in the regular post-servo pass. r=emilio\n\nMozReview-Commit-ID: FSXKAiyZDzt\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 308,
"line": "  // Handle restyle.\n",
"lineno": 1026,
"revdate": [1488251167.0, 28800]
}, {
"node": "7c852ac4acf83d5d1776e98a6af36193bd97a9e5",
"author": "Bobby Holley \u003cbobbyholley@gmail.com\u003e",
"desc": "Bug 1317016 - Basic infrastructure for RestyleHint-driven traversal. r=emilio\n\nMozReview-Commit-ID: 7wH5XcILVmX\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 228,
"line": "  nsIFrame* primaryFrame = aTextNode-\u003eGetPrimaryFrame();\n",
"lineno": 1027,
"revdate": [1478067084.0, 25200]
}, {
"node": "e0477439b222422a105c9e108878fadf1f36354b",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1357461: Ensure not to increment the restyle generation if we haven't restyled after all. r=heycam\n\nThis can happen with content attribute or state changes that end up not\ngenerating any hint.\n\nIn particular, in the media_queries_dynamic.html case, the iframe resize was\ntoggling a few scrollbar attributes, which made us never pass the \"didn't\nrestyle\" test, even though the test really passed.\n\nI'll probably need to add a workaround to assume we use viewport units, so\nprobably won't pass for long.\n\nMozReview-Commit-ID: 2oEfic5yaOy",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 456,
"line": "  if (!primaryFrame) {\n",
"lineno": 1028,
"revdate": [1496431661.0, -7200]
}, {
"node": "e0477439b222422a105c9e108878fadf1f36354b",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1357461: Ensure not to increment the restyle generation if we haven't restyled after all. r=heycam\n\nThis can happen with content attribute or state changes that end up not\ngenerating any hint.\n\nIn particular, in the media_queries_dynamic.html case, the iframe resize was\ntoggling a few scrollbar attributes, which made us never pass the \"didn't\nrestyle\" test, even though the test really passed.\n\nI'll probably need to add a workaround to assume we use viewport units, so\nprobably won't pass for long.\n\nMozReview-Commit-ID: 2oEfic5yaOy",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 457,
"line": "    return false;\n",
"lineno": 1029,
"revdate": [1496431661.0, -7200]
}, {
"node": "e0477439b222422a105c9e108878fadf1f36354b",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1357461: Ensure not to increment the restyle generation if we haven't restyled after all. r=heycam\n\nThis can happen with content attribute or state changes that end up not\ngenerating any hint.\n\nIn particular, in the media_queries_dynamic.html case, the iframe resize was\ntoggling a few scrollbar attributes, which made us never pass the \"didn't\nrestyle\" test, even though the test really passed.\n\nI'll probably need to add a workaround to assume we use viewport units, so\nprobably won't pass for long.\n\nMozReview-Commit-ID: 2oEfic5yaOy",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 458,
"line": "  }\n",
"lineno": 1030,
"revdate": [1496431661.0, -7200]
}, {
"node": "558c843afbd35b6a15d3dbe397048bf0e772f779",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1351339: Compute text style changes when the parent is a display: contents element. r=heycam\n\nMozReview-Commit-ID: GWPNevfP4xc",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 356,
"line": "\n",
"lineno": 1031,
"revdate": [1494206203.0, -7200]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 960,
"line": "  // If the parent wasn't restyled, the styles of our anon box parents won't\n",
"lineno": 1032,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 961,
"line": "  // change either.\n",
"lineno": 1033,
"revdate": [1502424626.0, 14400]
}, {
"node": "2a54187a362e9809ee0a45c4bb7008705f3016b9",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1390409 part 2 - Replace aParentWasRestyled with a bitflag. r=emilio\n\nMozReview-Commit-ID: 49C1N6LNXi7",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 912,
"line": "  if ((aFlags & ServoPostTraversalFlags::ParentWasRestyled) &&\n",
"lineno": 1034,
"revdate": [1503896015.0, -36000]
}, {
"node": "2a54187a362e9809ee0a45c4bb7008705f3016b9",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1390409 part 2 - Replace aParentWasRestyled with a bitflag. r=emilio\n\nMozReview-Commit-ID: 49C1N6LNXi7",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 913,
"line": "      primaryFrame-\u003eParentIsWrapperAnonBox()) {\n",
"lineno": 1035,
"revdate": [1503896015.0, -36000]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 963,
"line": "    aRestyleState.AddPendingWrapperRestyle(\n",
"lineno": 1036,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 964,
"line": "      ServoRestyleState::TableAwareParentFor(primaryFrame));\n",
"lineno": 1037,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 965,
"line": "  }\n",
"lineno": 1038,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 966,
"line": "\n",
"lineno": 1039,
"revdate": [1502424626.0, 14400]
}, {
"node": "e0477439b222422a105c9e108878fadf1f36354b",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1357461: Ensure not to increment the restyle generation if we haven't restyled after all. r=heycam\n\nThis can happen with content attribute or state changes that end up not\ngenerating any hint.\n\nIn particular, in the media_queries_dynamic.html case, the iframe resize was\ntoggling a few scrollbar attributes, which made us never pass the \"didn't\nrestyle\" test, even though the test really passed.\n\nI'll probably need to add a workaround to assume we use viewport units, so\nprobably won't pass for long.\n\nMozReview-Commit-ID: 2oEfic5yaOy",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 461,
"line": "  nsStyleContext& newContext = aPostTraversalState.ComputeStyle(aTextNode);\n",
"lineno": 1040,
"revdate": [1496431661.0, -7200]
}, {
"node": "fdde73cf429c62cd1e712afcc196110f8601cb2a",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1374752: Pack together the StyleSet, ChangeList and handled change hints, and use the latter with anonymous boxes while we're at it. r=heycam\n\nMozReview-Commit-ID: DiWcUwD9po5",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 504,
"line": "  aPostTraversalState.ComputeHintIfNeeded(aTextNode, primaryFrame, newContext);\n",
"lineno": 1041,
"revdate": [1497993687.0, -7200]
}, {
"node": "e0477439b222422a105c9e108878fadf1f36354b",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1357461: Ensure not to increment the restyle generation if we haven't restyled after all. r=heycam\n\nThis can happen with content attribute or state changes that end up not\ngenerating any hint.\n\nIn particular, in the media_queries_dynamic.html case, the iframe resize was\ntoggling a few scrollbar attributes, which made us never pass the \"didn't\nrestyle\" test, even though the test really passed.\n\nI'll probably need to add a workaround to assume we use viewport units, so\nprobably won't pass for long.\n\nMozReview-Commit-ID: 2oEfic5yaOy",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 464,
"line": "\n",
"lineno": 1042,
"revdate": [1496431661.0, -7200]
}, {
"node": "7580a5f91d0d6b03a710e44ce2c9e482f33efc51",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324618 part 7.  Set our new style context on all our continuations in ServoRestyleManager.  r=emilio\n\nMozReview-Commit-ID: 4gVXPDCPZnq",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 497,
"line": "  // We want to walk all the continuations here, even the ones with different\n",
"lineno": 1043,
"revdate": [1498545308.0, 25200]
}, {
"node": "7580a5f91d0d6b03a710e44ce2c9e482f33efc51",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324618 part 7.  Set our new style context on all our continuations in ServoRestyleManager.  r=emilio\n\nMozReview-Commit-ID: 4gVXPDCPZnq",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 498,
"line": "  // styles.  In practice, the only reasons we get continuations with different\n",
"lineno": 1044,
"revdate": [1498545308.0, 25200]
}, {
"node": "7580a5f91d0d6b03a710e44ce2c9e482f33efc51",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324618 part 7.  Set our new style context on all our continuations in ServoRestyleManager.  r=emilio\n\nMozReview-Commit-ID: 4gVXPDCPZnq",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 499,
"line": "  // styles are ::first-line and ::first-letter.  But in those cases,\n",
"lineno": 1045,
"revdate": [1498545308.0, 25200]
}, {
"node": "7580a5f91d0d6b03a710e44ce2c9e482f33efc51",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324618 part 7.  Set our new style context on all our continuations in ServoRestyleManager.  r=emilio\n\nMozReview-Commit-ID: 4gVXPDCPZnq",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 500,
"line": "  // newContext is the right context for the _later_ continuations anyway (the\n",
"lineno": 1046,
"revdate": [1498545308.0, 25200]
}, {
"node": "7580a5f91d0d6b03a710e44ce2c9e482f33efc51",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324618 part 7.  Set our new style context on all our continuations in ServoRestyleManager.  r=emilio\n\nMozReview-Commit-ID: 4gVXPDCPZnq",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 501,
"line": "  // ones not affected by ::first-line/::first-letter), not the earlier ones,\n",
"lineno": 1047,
"revdate": [1498545308.0, 25200]
}, {
"node": "7580a5f91d0d6b03a710e44ce2c9e482f33efc51",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324618 part 7.  Set our new style context on all our continuations in ServoRestyleManager.  r=emilio\n\nMozReview-Commit-ID: 4gVXPDCPZnq",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 502,
"line": "  // so there is no point stopping right at the point when we'd actually be\n",
"lineno": 1048,
"revdate": [1498545308.0, 25200]
}, {
"node": "7580a5f91d0d6b03a710e44ce2c9e482f33efc51",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324618 part 7.  Set our new style context on all our continuations in ServoRestyleManager.  r=emilio\n\nMozReview-Commit-ID: 4gVXPDCPZnq",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 503,
"line": "  // setting the right style context.\n",
"lineno": 1049,
"revdate": [1498545308.0, 25200]
}, {
"node": "7580a5f91d0d6b03a710e44ce2c9e482f33efc51",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324618 part 7.  Set our new style context on all our continuations in ServoRestyleManager.  r=emilio\n\nMozReview-Commit-ID: 4gVXPDCPZnq",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 504,
"line": "  //\n",
"lineno": 1050,
"revdate": [1498545308.0, 25200]
}, {
"node": "7580a5f91d0d6b03a710e44ce2c9e482f33efc51",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324618 part 7.  Set our new style context on all our continuations in ServoRestyleManager.  r=emilio\n\nMozReview-Commit-ID: 4gVXPDCPZnq",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 505,
"line": "  // This does mean that we may be setting the wrong style context on our\n",
"lineno": 1051,
"revdate": [1498545308.0, 25200]
}, {
"node": "7580a5f91d0d6b03a710e44ce2c9e482f33efc51",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324618 part 7.  Set our new style context on all our continuations in ServoRestyleManager.  r=emilio\n\nMozReview-Commit-ID: 4gVXPDCPZnq",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 506,
"line": "  // initial continuations; ::first-line/::first-letter fix that up after the\n",
"lineno": 1052,
"revdate": [1498545308.0, 25200]
}, {
"node": "7580a5f91d0d6b03a710e44ce2c9e482f33efc51",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324618 part 7.  Set our new style context on all our continuations in ServoRestyleManager.  r=emilio\n\nMozReview-Commit-ID: 4gVXPDCPZnq",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 507,
"line": "  // fact.\n",
"lineno": 1053,
"revdate": [1498545308.0, 25200]
}, {
"node": "7580a5f91d0d6b03a710e44ce2c9e482f33efc51",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324618 part 7.  Set our new style context on all our continuations in ServoRestyleManager.  r=emilio\n\nMozReview-Commit-ID: 4gVXPDCPZnq",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 508,
"line": "  for (nsIFrame* f = primaryFrame; f; f = f-\u003eGetNextContinuation()) {\n",
"lineno": 1054,
"revdate": [1498545308.0, 25200]
}, {
"node": "e0477439b222422a105c9e108878fadf1f36354b",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1357461: Ensure not to increment the restyle generation if we haven't restyled after all. r=heycam\n\nThis can happen with content attribute or state changes that end up not\ngenerating any hint.\n\nIn particular, in the media_queries_dynamic.html case, the iframe resize was\ntoggling a few scrollbar attributes, which made us never pass the \"didn't\nrestyle\" test, even though the test really passed.\n\nI'll probably need to add a workaround to assume we use viewport units, so\nprobably won't pass for long.\n\nMozReview-Commit-ID: 2oEfic5yaOy",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 467,
"line": "    f-\u003eSetStyleContext(&newContext);\n",
"lineno": 1055,
"revdate": [1496431661.0, -7200]
}, {
"node": "b54cf953d8c40fbe82ecef271f5f6e0ad52abaa5",
"author": "Emilio Cobos \u00c1lvarez \u003cecoal95@gmail.com\u003e",
"desc": "Bug 1288873: Don't propagate the IS_DIRTY flag down the whole tree, just make it\nimply that all descendants are dirty. r=heycam\n\nWe're probably going to be a lot more smarter than this in the future, but since\nthere is work in progress to figure out how should we avoid running\nselector-matching on the elements, this helps a lot with perf in the meantime.\n\nMozReview-Commit-ID: CEb15JwHAdH\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 140,
"line": "  }\n",
"lineno": 1056,
"revdate": [1469225970.0, 25200]
}, {
"node": "e0477439b222422a105c9e108878fadf1f36354b",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1357461: Ensure not to increment the restyle generation if we haven't restyled after all. r=heycam\n\nThis can happen with content attribute or state changes that end up not\ngenerating any hint.\n\nIn particular, in the media_queries_dynamic.html case, the iframe resize was\ntoggling a few scrollbar attributes, which made us never pass the \"didn't\nrestyle\" test, even though the test really passed.\n\nI'll probably need to add a workaround to assume we use viewport units, so\nprobably won't pass for long.\n\nMozReview-Commit-ID: 2oEfic5yaOy",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 469,
"line": "\n",
"lineno": 1057,
"revdate": [1496431661.0, -7200]
}, {
"node": "e0477439b222422a105c9e108878fadf1f36354b",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1357461: Ensure not to increment the restyle generation if we haven't restyled after all. r=heycam\n\nThis can happen with content attribute or state changes that end up not\ngenerating any hint.\n\nIn particular, in the media_queries_dynamic.html case, the iframe resize was\ntoggling a few scrollbar attributes, which made us never pass the \"didn't\nrestyle\" test, even though the test really passed.\n\nI'll probably need to add a workaround to assume we use viewport units, so\nprobably won't pass for long.\n\nMozReview-Commit-ID: 2oEfic5yaOy",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 470,
"line": "  return true;\n",
"lineno": 1058,
"revdate": [1496431661.0, -7200]
}, {
"node": "b54cf953d8c40fbe82ecef271f5f6e0ad52abaa5",
"author": "Emilio Cobos \u00c1lvarez \u003cecoal95@gmail.com\u003e",
"desc": "Bug 1288873: Don't propagate the IS_DIRTY flag down the whole tree, just make it\nimply that all descendants are dirty. r=heycam\n\nWe're probably going to be a lot more smarter than this in the future, but since\nthere is work in progress to figure out how should we avoid running\nselector-matching on the elements, this helps a lot with perf in the meantime.\n\nMozReview-Commit-ID: CEb15JwHAdH\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 141,
"line": "}\n",
"lineno": 1059,
"revdate": [1469225970.0, 25200]
}, {
"node": "b54cf953d8c40fbe82ecef271f5f6e0ad52abaa5",
"author": "Emilio Cobos \u00c1lvarez \u003cecoal95@gmail.com\u003e",
"desc": "Bug 1288873: Don't propagate the IS_DIRTY flag down the whole tree, just make it\nimply that all descendants are dirty. r=heycam\n\nWe're probably going to be a lot more smarter than this in the future, but since\nthere is work in progress to figure out how should we avoid running\nselector-matching on the elements, this helps a lot with perf in the meantime.\n\nMozReview-Commit-ID: CEb15JwHAdH\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 142,
"line": "\n",
"lineno": 1060,
"revdate": [1469225970.0, 25200]
}, {
"node": "2150351429b5c9515589facd9f2aefb1e4640842",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1355343: Take all the snapshots into account. r=bholley\n\nI've chosen this approach mainly because there's no other good way to guarantee\nthe model is correct than holding the snapshots alive until a style refresh.\n\nWhat I tried before this (storing them in a sort of \"immutable element data\") is\na pain, since we call into style from the frame constructor and other content\nnotifications, which makes keeping track of which snapshots should be cleared an\nwhich shouldn't an insane task.\n\nIdeally we'd have a single entry-point for style, but that's not the case right\nnow, and changing that requires pretty non-trivial changes to the frame\nconstructor.\n\nMozReview-Commit-ID: FF1KWZv2iBM",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 377,
"line": "void\n",
"lineno": 1061,
"revdate": [1494167807.0, -7200]
}, {
"node": "2150351429b5c9515589facd9f2aefb1e4640842",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1355343: Take all the snapshots into account. r=bholley\n\nI've chosen this approach mainly because there's no other good way to guarantee\nthe model is correct than holding the snapshots alive until a style refresh.\n\nWhat I tried before this (storing them in a sort of \"immutable element data\") is\na pain, since we call into style from the frame constructor and other content\nnotifications, which makes keeping track of which snapshots should be cleared an\nwhich shouldn't an insane task.\n\nIdeally we'd have a single entry-point for style, but that's not the case right\nnow, and changing that requires pretty non-trivial changes to the frame\nconstructor.\n\nMozReview-Commit-ID: FF1KWZv2iBM",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 378,
"line": "ServoRestyleManager::ClearSnapshots()\n",
"lineno": 1062,
"revdate": [1494167807.0, -7200]
}, {
"node": "2150351429b5c9515589facd9f2aefb1e4640842",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1355343: Take all the snapshots into account. r=bholley\n\nI've chosen this approach mainly because there's no other good way to guarantee\nthe model is correct than holding the snapshots alive until a style refresh.\n\nWhat I tried before this (storing them in a sort of \"immutable element data\") is\na pain, since we call into style from the frame constructor and other content\nnotifications, which makes keeping track of which snapshots should be cleared an\nwhich shouldn't an insane task.\n\nIdeally we'd have a single entry-point for style, but that's not the case right\nnow, and changing that requires pretty non-trivial changes to the frame\nconstructor.\n\nMozReview-Commit-ID: FF1KWZv2iBM",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 379,
"line": "{\n",
"lineno": 1063,
"revdate": [1494167807.0, -7200]
}, {
"node": "2150351429b5c9515589facd9f2aefb1e4640842",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1355343: Take all the snapshots into account. r=bholley\n\nI've chosen this approach mainly because there's no other good way to guarantee\nthe model is correct than holding the snapshots alive until a style refresh.\n\nWhat I tried before this (storing them in a sort of \"immutable element data\") is\na pain, since we call into style from the frame constructor and other content\nnotifications, which makes keeping track of which snapshots should be cleared an\nwhich shouldn't an insane task.\n\nIdeally we'd have a single entry-point for style, but that's not the case right\nnow, and changing that requires pretty non-trivial changes to the frame\nconstructor.\n\nMozReview-Commit-ID: FF1KWZv2iBM",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 380,
"line": "  for (auto iter = mSnapshots.Iter(); !iter.Done(); iter.Next()) {\n",
"lineno": 1064,
"revdate": [1494167807.0, -7200]
}, {
"node": "2150351429b5c9515589facd9f2aefb1e4640842",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1355343: Take all the snapshots into account. r=bholley\n\nI've chosen this approach mainly because there's no other good way to guarantee\nthe model is correct than holding the snapshots alive until a style refresh.\n\nWhat I tried before this (storing them in a sort of \"immutable element data\") is\na pain, since we call into style from the frame constructor and other content\nnotifications, which makes keeping track of which snapshots should be cleared an\nwhich shouldn't an insane task.\n\nIdeally we'd have a single entry-point for style, but that's not the case right\nnow, and changing that requires pretty non-trivial changes to the frame\nconstructor.\n\nMozReview-Commit-ID: FF1KWZv2iBM",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 381,
"line": "    iter.Key()-\u003eUnsetFlags(ELEMENT_HAS_SNAPSHOT | ELEMENT_HANDLED_SNAPSHOT);\n",
"lineno": 1065,
"revdate": [1494167807.0, -7200]
}, {
"node": "2150351429b5c9515589facd9f2aefb1e4640842",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1355343: Take all the snapshots into account. r=bholley\n\nI've chosen this approach mainly because there's no other good way to guarantee\nthe model is correct than holding the snapshots alive until a style refresh.\n\nWhat I tried before this (storing them in a sort of \"immutable element data\") is\na pain, since we call into style from the frame constructor and other content\nnotifications, which makes keeping track of which snapshots should be cleared an\nwhich shouldn't an insane task.\n\nIdeally we'd have a single entry-point for style, but that's not the case right\nnow, and changing that requires pretty non-trivial changes to the frame\nconstructor.\n\nMozReview-Commit-ID: FF1KWZv2iBM",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 382,
"line": "    iter.Remove();\n",
"lineno": 1066,
"revdate": [1494167807.0, -7200]
}, {
"node": "2150351429b5c9515589facd9f2aefb1e4640842",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1355343: Take all the snapshots into account. r=bholley\n\nI've chosen this approach mainly because there's no other good way to guarantee\nthe model is correct than holding the snapshots alive until a style refresh.\n\nWhat I tried before this (storing them in a sort of \"immutable element data\") is\na pain, since we call into style from the frame constructor and other content\nnotifications, which makes keeping track of which snapshots should be cleared an\nwhich shouldn't an insane task.\n\nIdeally we'd have a single entry-point for style, but that's not the case right\nnow, and changing that requires pretty non-trivial changes to the frame\nconstructor.\n\nMozReview-Commit-ID: FF1KWZv2iBM",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 383,
"line": "  }\n",
"lineno": 1067,
"revdate": [1494167807.0, -7200]
}, {
"node": "2150351429b5c9515589facd9f2aefb1e4640842",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1355343: Take all the snapshots into account. r=bholley\n\nI've chosen this approach mainly because there's no other good way to guarantee\nthe model is correct than holding the snapshots alive until a style refresh.\n\nWhat I tried before this (storing them in a sort of \"immutable element data\") is\na pain, since we call into style from the frame constructor and other content\nnotifications, which makes keeping track of which snapshots should be cleared an\nwhich shouldn't an insane task.\n\nIdeally we'd have a single entry-point for style, but that's not the case right\nnow, and changing that requires pretty non-trivial changes to the frame\nconstructor.\n\nMozReview-Commit-ID: FF1KWZv2iBM",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 384,
"line": "}\n",
"lineno": 1068,
"revdate": [1494167807.0, -7200]
}, {
"node": "2150351429b5c9515589facd9f2aefb1e4640842",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1355343: Take all the snapshots into account. r=bholley\n\nI've chosen this approach mainly because there's no other good way to guarantee\nthe model is correct than holding the snapshots alive until a style refresh.\n\nWhat I tried before this (storing them in a sort of \"immutable element data\") is\na pain, since we call into style from the frame constructor and other content\nnotifications, which makes keeping track of which snapshots should be cleared an\nwhich shouldn't an insane task.\n\nIdeally we'd have a single entry-point for style, but that's not the case right\nnow, and changing that requires pretty non-trivial changes to the frame\nconstructor.\n\nMozReview-Commit-ID: FF1KWZv2iBM",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 385,
"line": "\n",
"lineno": 1069,
"revdate": [1494167807.0, -7200]
}, {
"node": "2150351429b5c9515589facd9f2aefb1e4640842",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1355343: Take all the snapshots into account. r=bholley\n\nI've chosen this approach mainly because there's no other good way to guarantee\nthe model is correct than holding the snapshots alive until a style refresh.\n\nWhat I tried before this (storing them in a sort of \"immutable element data\") is\na pain, since we call into style from the frame constructor and other content\nnotifications, which makes keeping track of which snapshots should be cleared an\nwhich shouldn't an insane task.\n\nIdeally we'd have a single entry-point for style, but that's not the case right\nnow, and changing that requires pretty non-trivial changes to the frame\nconstructor.\n\nMozReview-Commit-ID: FF1KWZv2iBM",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 386,
"line": "ServoElementSnapshot&\n",
"lineno": 1070,
"revdate": [1494167807.0, -7200]
}, {
"node": "2150351429b5c9515589facd9f2aefb1e4640842",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1355343: Take all the snapshots into account. r=bholley\n\nI've chosen this approach mainly because there's no other good way to guarantee\nthe model is correct than holding the snapshots alive until a style refresh.\n\nWhat I tried before this (storing them in a sort of \"immutable element data\") is\na pain, since we call into style from the frame constructor and other content\nnotifications, which makes keeping track of which snapshots should be cleared an\nwhich shouldn't an insane task.\n\nIdeally we'd have a single entry-point for style, but that's not the case right\nnow, and changing that requires pretty non-trivial changes to the frame\nconstructor.\n\nMozReview-Commit-ID: FF1KWZv2iBM",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 387,
"line": "ServoRestyleManager::SnapshotFor(Element* aElement)\n",
"lineno": 1071,
"revdate": [1494167807.0, -7200]
}, {
"node": "2150351429b5c9515589facd9f2aefb1e4640842",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1355343: Take all the snapshots into account. r=bholley\n\nI've chosen this approach mainly because there's no other good way to guarantee\nthe model is correct than holding the snapshots alive until a style refresh.\n\nWhat I tried before this (storing them in a sort of \"immutable element data\") is\na pain, since we call into style from the frame constructor and other content\nnotifications, which makes keeping track of which snapshots should be cleared an\nwhich shouldn't an insane task.\n\nIdeally we'd have a single entry-point for style, but that's not the case right\nnow, and changing that requires pretty non-trivial changes to the frame\nconstructor.\n\nMozReview-Commit-ID: FF1KWZv2iBM",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 388,
"line": "{\n",
"lineno": 1072,
"revdate": [1494167807.0, -7200]
}, {
"node": "2150351429b5c9515589facd9f2aefb1e4640842",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1355343: Take all the snapshots into account. r=bholley\n\nI've chosen this approach mainly because there's no other good way to guarantee\nthe model is correct than holding the snapshots alive until a style refresh.\n\nWhat I tried before this (storing them in a sort of \"immutable element data\") is\na pain, since we call into style from the frame constructor and other content\nnotifications, which makes keeping track of which snapshots should be cleared an\nwhich shouldn't an insane task.\n\nIdeally we'd have a single entry-point for style, but that's not the case right\nnow, and changing that requires pretty non-trivial changes to the frame\nconstructor.\n\nMozReview-Commit-ID: FF1KWZv2iBM",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 389,
"line": "  MOZ_ASSERT(!mInStyleRefresh);\n",
"lineno": 1073,
"revdate": [1494167807.0, -7200]
}, {
"node": "2150351429b5c9515589facd9f2aefb1e4640842",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1355343: Take all the snapshots into account. r=bholley\n\nI've chosen this approach mainly because there's no other good way to guarantee\nthe model is correct than holding the snapshots alive until a style refresh.\n\nWhat I tried before this (storing them in a sort of \"immutable element data\") is\na pain, since we call into style from the frame constructor and other content\nnotifications, which makes keeping track of which snapshots should be cleared an\nwhich shouldn't an insane task.\n\nIdeally we'd have a single entry-point for style, but that's not the case right\nnow, and changing that requires pretty non-trivial changes to the frame\nconstructor.\n\nMozReview-Commit-ID: FF1KWZv2iBM",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 390,
"line": "\n",
"lineno": 1074,
"revdate": [1494167807.0, -7200]
}, {
"node": "2150351429b5c9515589facd9f2aefb1e4640842",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1355343: Take all the snapshots into account. r=bholley\n\nI've chosen this approach mainly because there's no other good way to guarantee\nthe model is correct than holding the snapshots alive until a style refresh.\n\nWhat I tried before this (storing them in a sort of \"immutable element data\") is\na pain, since we call into style from the frame constructor and other content\nnotifications, which makes keeping track of which snapshots should be cleared an\nwhich shouldn't an insane task.\n\nIdeally we'd have a single entry-point for style, but that's not the case right\nnow, and changing that requires pretty non-trivial changes to the frame\nconstructor.\n\nMozReview-Commit-ID: FF1KWZv2iBM",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 391,
"line": "  // NOTE(emilio): We can handle snapshots from a one-off restyle of those that\n",
"lineno": 1075,
"revdate": [1494167807.0, -7200]
}, {
"node": "2150351429b5c9515589facd9f2aefb1e4640842",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1355343: Take all the snapshots into account. r=bholley\n\nI've chosen this approach mainly because there's no other good way to guarantee\nthe model is correct than holding the snapshots alive until a style refresh.\n\nWhat I tried before this (storing them in a sort of \"immutable element data\") is\na pain, since we call into style from the frame constructor and other content\nnotifications, which makes keeping track of which snapshots should be cleared an\nwhich shouldn't an insane task.\n\nIdeally we'd have a single entry-point for style, but that's not the case right\nnow, and changing that requires pretty non-trivial changes to the frame\nconstructor.\n\nMozReview-Commit-ID: FF1KWZv2iBM",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 392,
"line": "  // we do to restyle stuff for reconstruction, for example.\n",
"lineno": 1076,
"revdate": [1494167807.0, -7200]
}, {
"node": "2150351429b5c9515589facd9f2aefb1e4640842",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1355343: Take all the snapshots into account. r=bholley\n\nI've chosen this approach mainly because there's no other good way to guarantee\nthe model is correct than holding the snapshots alive until a style refresh.\n\nWhat I tried before this (storing them in a sort of \"immutable element data\") is\na pain, since we call into style from the frame constructor and other content\nnotifications, which makes keeping track of which snapshots should be cleared an\nwhich shouldn't an insane task.\n\nIdeally we'd have a single entry-point for style, but that's not the case right\nnow, and changing that requires pretty non-trivial changes to the frame\nconstructor.\n\nMozReview-Commit-ID: FF1KWZv2iBM",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 393,
"line": "  //\n",
"lineno": 1077,
"revdate": [1494167807.0, -7200]
}, {
"node": "2150351429b5c9515589facd9f2aefb1e4640842",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1355343: Take all the snapshots into account. r=bholley\n\nI've chosen this approach mainly because there's no other good way to guarantee\nthe model is correct than holding the snapshots alive until a style refresh.\n\nWhat I tried before this (storing them in a sort of \"immutable element data\") is\na pain, since we call into style from the frame constructor and other content\nnotifications, which makes keeping track of which snapshots should be cleared an\nwhich shouldn't an insane task.\n\nIdeally we'd have a single entry-point for style, but that's not the case right\nnow, and changing that requires pretty non-trivial changes to the frame\nconstructor.\n\nMozReview-Commit-ID: FF1KWZv2iBM",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 394,
"line": "  // It seems to be the case that we always flush in between that happens and\n",
"lineno": 1078,
"revdate": [1494167807.0, -7200]
}, {
"node": "2150351429b5c9515589facd9f2aefb1e4640842",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1355343: Take all the snapshots into account. r=bholley\n\nI've chosen this approach mainly because there's no other good way to guarantee\nthe model is correct than holding the snapshots alive until a style refresh.\n\nWhat I tried before this (storing them in a sort of \"immutable element data\") is\na pain, since we call into style from the frame constructor and other content\nnotifications, which makes keeping track of which snapshots should be cleared an\nwhich shouldn't an insane task.\n\nIdeally we'd have a single entry-point for style, but that's not the case right\nnow, and changing that requires pretty non-trivial changes to the frame\nconstructor.\n\nMozReview-Commit-ID: FF1KWZv2iBM",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 395,
"line": "  // the next attribute change, so we can assert that we haven't handled the\n",
"lineno": 1079,
"revdate": [1494167807.0, -7200]
}, {
"node": "2150351429b5c9515589facd9f2aefb1e4640842",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1355343: Take all the snapshots into account. r=bholley\n\nI've chosen this approach mainly because there's no other good way to guarantee\nthe model is correct than holding the snapshots alive until a style refresh.\n\nWhat I tried before this (storing them in a sort of \"immutable element data\") is\na pain, since we call into style from the frame constructor and other content\nnotifications, which makes keeping track of which snapshots should be cleared an\nwhich shouldn't an insane task.\n\nIdeally we'd have a single entry-point for style, but that's not the case right\nnow, and changing that requires pretty non-trivial changes to the frame\nconstructor.\n\nMozReview-Commit-ID: FF1KWZv2iBM",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 396,
"line": "  // snapshot here yet. If this assertion didn't hold, we'd need to unset that\n",
"lineno": 1080,
"revdate": [1494167807.0, -7200]
}, {
"node": "2150351429b5c9515589facd9f2aefb1e4640842",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1355343: Take all the snapshots into account. r=bholley\n\nI've chosen this approach mainly because there's no other good way to guarantee\nthe model is correct than holding the snapshots alive until a style refresh.\n\nWhat I tried before this (storing them in a sort of \"immutable element data\") is\na pain, since we call into style from the frame constructor and other content\nnotifications, which makes keeping track of which snapshots should be cleared an\nwhich shouldn't an insane task.\n\nIdeally we'd have a single entry-point for style, but that's not the case right\nnow, and changing that requires pretty non-trivial changes to the frame\nconstructor.\n\nMozReview-Commit-ID: FF1KWZv2iBM",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 397,
"line": "  // flag from here too.\n",
"lineno": 1081,
"revdate": [1494167807.0, -7200]
}, {
"node": "2150351429b5c9515589facd9f2aefb1e4640842",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1355343: Take all the snapshots into account. r=bholley\n\nI've chosen this approach mainly because there's no other good way to guarantee\nthe model is correct than holding the snapshots alive until a style refresh.\n\nWhat I tried before this (storing them in a sort of \"immutable element data\") is\na pain, since we call into style from the frame constructor and other content\nnotifications, which makes keeping track of which snapshots should be cleared an\nwhich shouldn't an insane task.\n\nIdeally we'd have a single entry-point for style, but that's not the case right\nnow, and changing that requires pretty non-trivial changes to the frame\nconstructor.\n\nMozReview-Commit-ID: FF1KWZv2iBM",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 398,
"line": "  //\n",
"lineno": 1082,
"revdate": [1494167807.0, -7200]
}, {
"node": "2150351429b5c9515589facd9f2aefb1e4640842",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1355343: Take all the snapshots into account. r=bholley\n\nI've chosen this approach mainly because there's no other good way to guarantee\nthe model is correct than holding the snapshots alive until a style refresh.\n\nWhat I tried before this (storing them in a sort of \"immutable element data\") is\na pain, since we call into style from the frame constructor and other content\nnotifications, which makes keeping track of which snapshots should be cleared an\nwhich shouldn't an insane task.\n\nIdeally we'd have a single entry-point for style, but that's not the case right\nnow, and changing that requires pretty non-trivial changes to the frame\nconstructor.\n\nMozReview-Commit-ID: FF1KWZv2iBM",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 399,
"line": "  // Can't wait to make ProcessPendingRestyles the only entry-point for styling,\n",
"lineno": 1083,
"revdate": [1494167807.0, -7200]
}, {
"node": "2150351429b5c9515589facd9f2aefb1e4640842",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1355343: Take all the snapshots into account. r=bholley\n\nI've chosen this approach mainly because there's no other good way to guarantee\nthe model is correct than holding the snapshots alive until a style refresh.\n\nWhat I tried before this (storing them in a sort of \"immutable element data\") is\na pain, since we call into style from the frame constructor and other content\nnotifications, which makes keeping track of which snapshots should be cleared an\nwhich shouldn't an insane task.\n\nIdeally we'd have a single entry-point for style, but that's not the case right\nnow, and changing that requires pretty non-trivial changes to the frame\nconstructor.\n\nMozReview-Commit-ID: FF1KWZv2iBM",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 400,
"line": "  // so this becomes much easier to reason about. Today is not that day though.\n",
"lineno": 1084,
"revdate": [1494167807.0, -7200]
}, {
"node": "2150351429b5c9515589facd9f2aefb1e4640842",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1355343: Take all the snapshots into account. r=bholley\n\nI've chosen this approach mainly because there's no other good way to guarantee\nthe model is correct than holding the snapshots alive until a style refresh.\n\nWhat I tried before this (storing them in a sort of \"immutable element data\") is\na pain, since we call into style from the frame constructor and other content\nnotifications, which makes keeping track of which snapshots should be cleared an\nwhich shouldn't an insane task.\n\nIdeally we'd have a single entry-point for style, but that's not the case right\nnow, and changing that requires pretty non-trivial changes to the frame\nconstructor.\n\nMozReview-Commit-ID: FF1KWZv2iBM",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 401,
"line": "  MOZ_ASSERT(aElement-\u003eHasServoData());\n",
"lineno": 1085,
"revdate": [1494167807.0, -7200]
}, {
"node": "2150351429b5c9515589facd9f2aefb1e4640842",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1355343: Take all the snapshots into account. r=bholley\n\nI've chosen this approach mainly because there's no other good way to guarantee\nthe model is correct than holding the snapshots alive until a style refresh.\n\nWhat I tried before this (storing them in a sort of \"immutable element data\") is\na pain, since we call into style from the frame constructor and other content\nnotifications, which makes keeping track of which snapshots should be cleared an\nwhich shouldn't an insane task.\n\nIdeally we'd have a single entry-point for style, but that's not the case right\nnow, and changing that requires pretty non-trivial changes to the frame\nconstructor.\n\nMozReview-Commit-ID: FF1KWZv2iBM",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 402,
"line": "  MOZ_ASSERT(!aElement-\u003eHasFlag(ELEMENT_HANDLED_SNAPSHOT));\n",
"lineno": 1086,
"revdate": [1494167807.0, -7200]
}, {
"node": "2150351429b5c9515589facd9f2aefb1e4640842",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1355343: Take all the snapshots into account. r=bholley\n\nI've chosen this approach mainly because there's no other good way to guarantee\nthe model is correct than holding the snapshots alive until a style refresh.\n\nWhat I tried before this (storing them in a sort of \"immutable element data\") is\na pain, since we call into style from the frame constructor and other content\nnotifications, which makes keeping track of which snapshots should be cleared an\nwhich shouldn't an insane task.\n\nIdeally we'd have a single entry-point for style, but that's not the case right\nnow, and changing that requires pretty non-trivial changes to the frame\nconstructor.\n\nMozReview-Commit-ID: FF1KWZv2iBM",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 403,
"line": "\n",
"lineno": 1087,
"revdate": [1494167807.0, -7200]
}, {
"node": "2150351429b5c9515589facd9f2aefb1e4640842",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1355343: Take all the snapshots into account. r=bholley\n\nI've chosen this approach mainly because there's no other good way to guarantee\nthe model is correct than holding the snapshots alive until a style refresh.\n\nWhat I tried before this (storing them in a sort of \"immutable element data\") is\na pain, since we call into style from the frame constructor and other content\nnotifications, which makes keeping track of which snapshots should be cleared an\nwhich shouldn't an insane task.\n\nIdeally we'd have a single entry-point for style, but that's not the case right\nnow, and changing that requires pretty non-trivial changes to the frame\nconstructor.\n\nMozReview-Commit-ID: FF1KWZv2iBM",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 404,
"line": "  ServoElementSnapshot* snapshot = mSnapshots.LookupOrAdd(aElement, aElement);\n",
"lineno": 1088,
"revdate": [1494167807.0, -7200]
}, {
"node": "2150351429b5c9515589facd9f2aefb1e4640842",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1355343: Take all the snapshots into account. r=bholley\n\nI've chosen this approach mainly because there's no other good way to guarantee\nthe model is correct than holding the snapshots alive until a style refresh.\n\nWhat I tried before this (storing them in a sort of \"immutable element data\") is\na pain, since we call into style from the frame constructor and other content\nnotifications, which makes keeping track of which snapshots should be cleared an\nwhich shouldn't an insane task.\n\nIdeally we'd have a single entry-point for style, but that's not the case right\nnow, and changing that requires pretty non-trivial changes to the frame\nconstructor.\n\nMozReview-Commit-ID: FF1KWZv2iBM",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 405,
"line": "  aElement-\u003eSetFlags(ELEMENT_HAS_SNAPSHOT);\n",
"lineno": 1089,
"revdate": [1494167807.0, -7200]
}, {
"node": "2150351429b5c9515589facd9f2aefb1e4640842",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1355343: Take all the snapshots into account. r=bholley\n\nI've chosen this approach mainly because there's no other good way to guarantee\nthe model is correct than holding the snapshots alive until a style refresh.\n\nWhat I tried before this (storing them in a sort of \"immutable element data\") is\na pain, since we call into style from the frame constructor and other content\nnotifications, which makes keeping track of which snapshots should be cleared an\nwhich shouldn't an insane task.\n\nIdeally we'd have a single entry-point for style, but that's not the case right\nnow, and changing that requires pretty non-trivial changes to the frame\nconstructor.\n\nMozReview-Commit-ID: FF1KWZv2iBM",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 406,
"line": "\n",
"lineno": 1090,
"revdate": [1494167807.0, -7200]
}, {
"node": "86b793bcbcd090a4189814f14204a2e0ea7929ef",
"author": "Bobby Holley \u003cbobbyholley@gmail.com\u003e",
"desc": "Bug 1383332 - Track the restyle root and use it to do less work during the traversal. r=emilio\n\nMozReview-Commit-ID: A8O3JOpsv4E\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 945,
"line": "  // Now that we have a snapshot, make sure a restyle is triggered.\n",
"lineno": 1091,
"revdate": [1500428327.0, 25200]
}, {
"node": "d75d1ebf0e99290906b838606dd907a0bd198e7a",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1403078: Lazily tweak the traversal root to account for sibling invalidations. r=heycam\n\nMozReview-Commit-ID: Ij3nMOKu5FO\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1049,
"line": "  aElement-\u003eNoteDirtyForServo();\n",
"lineno": 1092,
"revdate": [1506403506.0, -7200]
}, {
"node": "2150351429b5c9515589facd9f2aefb1e4640842",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1355343: Take all the snapshots into account. r=bholley\n\nI've chosen this approach mainly because there's no other good way to guarantee\nthe model is correct than holding the snapshots alive until a style refresh.\n\nWhat I tried before this (storing them in a sort of \"immutable element data\") is\na pain, since we call into style from the frame constructor and other content\nnotifications, which makes keeping track of which snapshots should be cleared an\nwhich shouldn't an insane task.\n\nIdeally we'd have a single entry-point for style, but that's not the case right\nnow, and changing that requires pretty non-trivial changes to the frame\nconstructor.\n\nMozReview-Commit-ID: FF1KWZv2iBM",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 410,
"line": "  return *snapshot;\n",
"lineno": 1093,
"revdate": [1494167807.0, -7200]
}, {
"node": "2150351429b5c9515589facd9f2aefb1e4640842",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1355343: Take all the snapshots into account. r=bholley\n\nI've chosen this approach mainly because there's no other good way to guarantee\nthe model is correct than holding the snapshots alive until a style refresh.\n\nWhat I tried before this (storing them in a sort of \"immutable element data\") is\na pain, since we call into style from the frame constructor and other content\nnotifications, which makes keeping track of which snapshots should be cleared an\nwhich shouldn't an insane task.\n\nIdeally we'd have a single entry-point for style, but that's not the case right\nnow, and changing that requires pretty non-trivial changes to the frame\nconstructor.\n\nMozReview-Commit-ID: FF1KWZv2iBM",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 411,
"line": "}\n",
"lineno": 1094,
"revdate": [1494167807.0, -7200]
}, {
"node": "2150351429b5c9515589facd9f2aefb1e4640842",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1355343: Take all the snapshots into account. r=bholley\n\nI've chosen this approach mainly because there's no other good way to guarantee\nthe model is correct than holding the snapshots alive until a style refresh.\n\nWhat I tried before this (storing them in a sort of \"immutable element data\") is\na pain, since we call into style from the frame constructor and other content\nnotifications, which makes keeping track of which snapshots should be cleared an\nwhich shouldn't an insane task.\n\nIdeally we'd have a single entry-point for style, but that's not the case right\nnow, and changing that requires pretty non-trivial changes to the frame\nconstructor.\n\nMozReview-Commit-ID: FF1KWZv2iBM",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 412,
"line": "\n",
"lineno": 1095,
"revdate": [1494167807.0, -7200]
}, {
"node": "f3ab6216d197647011cc48b90fff685cb875c983",
"author": "Cameron McCormack \u003ccam@mcc.id.au\u003e",
"desc": "Bug 1248864 - Part 2: Add skeleton ServoRestyleManager and a RestyleManagerHandle smart pointer. r=dholbert",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 47,
"line": "void\n",
"lineno": 1096,
"revdate": [1456297272.0, -39600]
}, {
"node": "81049c04c4ad1731f36e63666dc1f5ffaf98149b",
"author": "Bobby Holley \u003cbobbyholley@gmail.com\u003e",
"desc": "Bug 1384769 - Pass TraversalFlags from C++ into Rust. r=emilio\n\nMozReview-Commit-ID: EVUzgnL5coN\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 813,
"line": "ServoRestyleManager::DoProcessPendingRestyles(ServoTraversalFlags aFlags)\n",
"lineno": 1097,
"revdate": [1501033537.0, 25200]
}, {
"node": "f3ab6216d197647011cc48b90fff685cb875c983",
"author": "Cameron McCormack \u003ccam@mcc.id.au\u003e",
"desc": "Bug 1248864 - Part 2: Add skeleton ServoRestyleManager and a RestyleManagerHandle smart pointer. r=dholbert",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 49,
"line": "{\n",
"lineno": 1098,
"revdate": [1456297272.0, -39600]
}, {
"node": "83d6c4007b512d0535759b2ff7eeeb5082c66012",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1430844: Add assertions that would've caught this. r=bz\n\nMozReview-Commit-ID: 1UfhIRn2We2\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1096,
"line": "  nsPresContext* presContext = PresContext();\n",
"lineno": 1099,
"revdate": [1516132138.0, -3600]
}, {
"node": "83d6c4007b512d0535759b2ff7eeeb5082c66012",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1430844: Add assertions that would've caught this. r=bz\n\nMozReview-Commit-ID: 1UfhIRn2We2\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1097,
"line": "\n",
"lineno": 1100,
"revdate": [1516132138.0, -3600]
}, {
"node": "83d6c4007b512d0535759b2ff7eeeb5082c66012",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1430844: Add assertions that would've caught this. r=bz\n\nMozReview-Commit-ID: 1UfhIRn2We2\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1098,
"line": "  MOZ_ASSERT(presContext-\u003eDocument(), \"No document?  Pshaw!\");\n",
"lineno": 1101,
"revdate": [1516132138.0, -3600]
}, {
"node": "83d6c4007b512d0535759b2ff7eeeb5082c66012",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1430844: Add assertions that would've caught this. r=bz\n\nMozReview-Commit-ID: 1UfhIRn2We2\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1099,
"line": "  MOZ_ASSERT(!presContext-\u003eHasPendingMediaQueryUpdates(),\n",
"lineno": 1102,
"revdate": [1516132138.0, -3600]
}, {
"node": "83d6c4007b512d0535759b2ff7eeeb5082c66012",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1430844: Add assertions that would've caught this. r=bz\n\nMozReview-Commit-ID: 1UfhIRn2We2\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1100,
"line": "             \"Someone forgot to update media queries?\");\n",
"lineno": 1103,
"revdate": [1516132138.0, -3600]
}, {
"node": "f1d25be43bde294949d5004c5ccb21e043bc3616",
"author": "Emilio Cobos \u00c1lvarez \u003cecoal95@gmail.com\u003e",
"desc": "Bug 1290335: stylo: Allow processing change hints generated from Servo. r=heycam\n\nMozReview-Commit-ID: Alc0wcXvHcD\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 216,
"line": "  MOZ_ASSERT(!nsContentUtils::IsSafeToRunScript(), \"Missing a script blocker!\");\n",
"lineno": 1104,
"revdate": [1469758845.0, 25200]
}, {
"node": "2150351429b5c9515589facd9f2aefb1e4640842",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1355343: Take all the snapshots into account. r=bholley\n\nI've chosen this approach mainly because there's no other good way to guarantee\nthe model is correct than holding the snapshots alive until a style refresh.\n\nWhat I tried before this (storing them in a sort of \"immutable element data\") is\na pain, since we call into style from the frame constructor and other content\nnotifications, which makes keeping track of which snapshots should be cleared an\nwhich shouldn't an insane task.\n\nIdeally we'd have a single entry-point for style, but that's not the case right\nnow, and changing that requires pretty non-trivial changes to the frame\nconstructor.\n\nMozReview-Commit-ID: FF1KWZv2iBM",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 440,
"line": "  MOZ_ASSERT(!mInStyleRefresh, \"Reentrant call?\");\n",
"lineno": 1105,
"revdate": [1494167807.0, -7200]
}, {
"node": "3f6b84d701ae0df834dfa6efbd56a9d915026998",
"author": "Bobby Holley \u003cbobbyholley@gmail.com\u003e",
"desc": "Bug 1299348 - Remove StylingStarted(). r=emilio\n\nStylingStarted is a kind of nebulous and not-very-useful concept. The concept\nthat _is_ useful is whether the presshell has been initialized or not, but the\nroot element may not exist at that point.\n\nSo we need to make sure we that we can trigger the initial document style in both\npresshell initialized _and_ ContentInserted, which has the nice effect of handling\nroot element reinsertions.\n\nWe also take the opportunity to make StyleDocument assert the existence of a root\nelement, and align the responsibility for clearing the dirty descendant bits between\ndocument and non-document nodes.\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 283,
"line": "\n",
"lineno": 1106,
"revdate": [1472605607.0, 25200]
}, {
"node": "83d6c4007b512d0535759b2ff7eeeb5082c66012",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1430844: Add assertions that would've caught this. r=bz\n\nMozReview-Commit-ID: 1UfhIRn2We2\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1104,
"line": "\n",
"lineno": 1107,
"revdate": [1516132138.0, -3600]
}, {
"node": "83d6c4007b512d0535759b2ff7eeeb5082c66012",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1430844: Add assertions that would've caught this. r=bz\n\nMozReview-Commit-ID: 1UfhIRn2We2\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1105,
"line": "  if (MOZ_UNLIKELY(!presContext-\u003ePresShell()-\u003eDidInitialize())) {\n",
"lineno": 1108,
"revdate": [1516132138.0, -3600]
}, {
"node": "3f6b84d701ae0df834dfa6efbd56a9d915026998",
"author": "Bobby Holley \u003cbobbyholley@gmail.com\u003e",
"desc": "Bug 1299348 - Remove StylingStarted(). r=emilio\n\nStylingStarted is a kind of nebulous and not-very-useful concept. The concept\nthat _is_ useful is whether the presshell has been initialized or not, but the\nroot element may not exist at that point.\n\nSo we need to make sure we that we can trigger the initial document style in both\npresshell initialized _and_ ContentInserted, which has the nice effect of handling\nroot element reinsertions.\n\nWe also take the opportunity to make StyleDocument assert the existence of a root\nelement, and align the responsibility for clearing the dirty descendant bits between\ndocument and non-document nodes.\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 285,
"line": "    // PresShell::FlushPendingNotifications doesn't early-return in the case\n",
"lineno": 1109,
"revdate": [1472605607.0, 25200]
}, {
"node": "83d6c4007b512d0535759b2ff7eeeb5082c66012",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1430844: Add assertions that would've caught this. r=bz\n\nMozReview-Commit-ID: 1UfhIRn2We2\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1107,
"line": "    // where the PresShell hasn't yet been initialized (and therefore we haven't\n",
"lineno": 1110,
"revdate": [1516132138.0, -3600]
}, {
"node": "3f6b84d701ae0df834dfa6efbd56a9d915026998",
"author": "Bobby Holley \u003cbobbyholley@gmail.com\u003e",
"desc": "Bug 1299348 - Remove StylingStarted(). r=emilio\n\nStylingStarted is a kind of nebulous and not-very-useful concept. The concept\nthat _is_ useful is whether the presshell has been initialized or not, but the\nroot element may not exist at that point.\n\nSo we need to make sure we that we can trigger the initial document style in both\npresshell initialized _and_ ContentInserted, which has the nice effect of handling\nroot element reinsertions.\n\nWe also take the opportunity to make StyleDocument assert the existence of a root\nelement, and align the responsibility for clearing the dirty descendant bits between\ndocument and non-document nodes.\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 287,
"line": "    // yet done the initial style traversal of the DOM tree). We should arguably\n",
"lineno": 1111,
"revdate": [1472605607.0, 25200]
}, {
"node": "3f6b84d701ae0df834dfa6efbd56a9d915026998",
"author": "Bobby Holley \u003cbobbyholley@gmail.com\u003e",
"desc": "Bug 1299348 - Remove StylingStarted(). r=emilio\n\nStylingStarted is a kind of nebulous and not-very-useful concept. The concept\nthat _is_ useful is whether the presshell has been initialized or not, but the\nroot element may not exist at that point.\n\nSo we need to make sure we that we can trigger the initial document style in both\npresshell initialized _and_ ContentInserted, which has the nice effect of handling\nroot element reinsertions.\n\nWe also take the opportunity to make StyleDocument assert the existence of a root\nelement, and align the responsibility for clearing the dirty descendant bits between\ndocument and non-document nodes.\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 288,
"line": "    // fix up the callers and assert against this case, but we just detect and\n",
"lineno": 1112,
"revdate": [1472605607.0, 25200]
}, {
"node": "3f6b84d701ae0df834dfa6efbd56a9d915026998",
"author": "Bobby Holley \u003cbobbyholley@gmail.com\u003e",
"desc": "Bug 1299348 - Remove StylingStarted(). r=emilio\n\nStylingStarted is a kind of nebulous and not-very-useful concept. The concept\nthat _is_ useful is whether the presshell has been initialized or not, but the\nroot element may not exist at that point.\n\nSo we need to make sure we that we can trigger the initial document style in both\npresshell initialized _and_ ContentInserted, which has the nice effect of handling\nroot element reinsertions.\n\nWe also take the opportunity to make StyleDocument assert the existence of a root\nelement, and align the responsibility for clearing the dirty descendant bits between\ndocument and non-document nodes.\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 289,
"line": "    // handle it for now.\n",
"lineno": 1113,
"revdate": [1472605607.0, 25200]
}, {
"node": "3f6b84d701ae0df834dfa6efbd56a9d915026998",
"author": "Bobby Holley \u003cbobbyholley@gmail.com\u003e",
"desc": "Bug 1299348 - Remove StylingStarted(). r=emilio\n\nStylingStarted is a kind of nebulous and not-very-useful concept. The concept\nthat _is_ useful is whether the presshell has been initialized or not, but the\nroot element may not exist at that point.\n\nSo we need to make sure we that we can trigger the initial document style in both\npresshell initialized _and_ ContentInserted, which has the nice effect of handling\nroot element reinsertions.\n\nWe also take the opportunity to make StyleDocument assert the existence of a root\nelement, and align the responsibility for clearing the dirty descendant bits between\ndocument and non-document nodes.\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 290,
"line": "    return;\n",
"lineno": 1114,
"revdate": [1472605607.0, 25200]
}, {
"node": "3f6b84d701ae0df834dfa6efbd56a9d915026998",
"author": "Bobby Holley \u003cbobbyholley@gmail.com\u003e",
"desc": "Bug 1299348 - Remove StylingStarted(). r=emilio\n\nStylingStarted is a kind of nebulous and not-very-useful concept. The concept\nthat _is_ useful is whether the presshell has been initialized or not, but the\nroot element may not exist at that point.\n\nSo we need to make sure we that we can trigger the initial document style in both\npresshell initialized _and_ ContentInserted, which has the nice effect of handling\nroot element reinsertions.\n\nWe also take the opportunity to make StyleDocument assert the existence of a root\nelement, and align the responsibility for clearing the dirty descendant bits between\ndocument and non-document nodes.\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 291,
"line": "  }\n",
"lineno": 1115,
"revdate": [1472605607.0, 25200]
}, {
"node": "3f6b84d701ae0df834dfa6efbd56a9d915026998",
"author": "Bobby Holley \u003cbobbyholley@gmail.com\u003e",
"desc": "Bug 1299348 - Remove StylingStarted(). r=emilio\n\nStylingStarted is a kind of nebulous and not-very-useful concept. The concept\nthat _is_ useful is whether the presshell has been initialized or not, but the\nroot element may not exist at that point.\n\nSo we need to make sure we that we can trigger the initial document style in both\npresshell initialized _and_ ContentInserted, which has the nice effect of handling\nroot element reinsertions.\n\nWe also take the opportunity to make StyleDocument assert the existence of a root\nelement, and align the responsibility for clearing the dirty descendant bits between\ndocument and non-document nodes.\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 292,
"line": "\n",
"lineno": 1116,
"revdate": [1472605607.0, 25200]
}, {
"node": "b401d8f83eb1564055a057718d0977e967f59cbb",
"author": "Boris Chiou \u003cboris.chiou@gmail.com\u003e",
"desc": "Bug 1324691 - Part 3: Support AnimationsWithDestroyedFrame for ServoRestyleManager. r=heycam\n\nMozReview-Commit-ID: 4cQ6PoieLLG",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 312,
"line": "  // Create a AnimationsWithDestroyedFrame during restyling process to\n",
"lineno": 1117,
"revdate": [1485492346.0, -28800]
}, {
"node": "b401d8f83eb1564055a057718d0977e967f59cbb",
"author": "Boris Chiou \u003cboris.chiou@gmail.com\u003e",
"desc": "Bug 1324691 - Part 3: Support AnimationsWithDestroyedFrame for ServoRestyleManager. r=heycam\n\nMozReview-Commit-ID: 4cQ6PoieLLG",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 313,
"line": "  // stop animations and transitions on elements that have no frame at the end\n",
"lineno": 1118,
"revdate": [1485492346.0, -28800]
}, {
"node": "b401d8f83eb1564055a057718d0977e967f59cbb",
"author": "Boris Chiou \u003cboris.chiou@gmail.com\u003e",
"desc": "Bug 1324691 - Part 3: Support AnimationsWithDestroyedFrame for ServoRestyleManager. r=heycam\n\nMozReview-Commit-ID: 4cQ6PoieLLG",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 314,
"line": "  // of the restyling process.\n",
"lineno": 1119,
"revdate": [1485492346.0, -28800]
}, {
"node": "b401d8f83eb1564055a057718d0977e967f59cbb",
"author": "Boris Chiou \u003cboris.chiou@gmail.com\u003e",
"desc": "Bug 1324691 - Part 3: Support AnimationsWithDestroyedFrame for ServoRestyleManager. r=heycam\n\nMozReview-Commit-ID: 4cQ6PoieLLG",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 315,
"line": "  AnimationsWithDestroyedFrame animationsWithDestroyedFrame(this);\n",
"lineno": 1120,
"revdate": [1485492346.0, -28800]
}, {
"node": "b401d8f83eb1564055a057718d0977e967f59cbb",
"author": "Boris Chiou \u003cboris.chiou@gmail.com\u003e",
"desc": "Bug 1324691 - Part 3: Support AnimationsWithDestroyedFrame for ServoRestyleManager. r=heycam\n\nMozReview-Commit-ID: 4cQ6PoieLLG",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 316,
"line": "\n",
"lineno": 1121,
"revdate": [1485492346.0, -28800]
}, {
"node": "6ba3d1fe1de9e8dbb77e49c18bda7b602e3c8a08",
"author": "Emilio Cobos \u00c1lvarez \u003cecoal95@gmail.com\u003e",
"desc": "Bug 1286445: stylo: Support restyles of non-pseudo content on state change. r=heycam\n\nThis includes, for example :hover.\n\nAlso removes the call to IsStyledByServo() in the document constructor, it's not\nonly unnecessary, but also we call UpdateStyleBackendType() too early.\n\nMozReview-Commit-ID: 4YfCdmLoSxu\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 139,
"line": "  ServoStyleSet* styleSet = StyleSet();\n",
"lineno": 1122,
"revdate": [1468442567.0, 25200]
}, {
"node": "83d6c4007b512d0535759b2ff7eeeb5082c66012",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1430844: Add assertions that would've caught this. r=bz\n\nMozReview-Commit-ID: 1UfhIRn2We2\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1120,
"line": "  nsIDocument* doc = presContext-\u003eDocument();\n",
"lineno": 1123,
"revdate": [1516132138.0, -3600]
}, {
"node": "7c852ac4acf83d5d1776e98a6af36193bd97a9e5",
"author": "Bobby Holley \u003cbobbyholley@gmail.com\u003e",
"desc": "Bug 1317016 - Basic infrastructure for RestyleHint-driven traversal. r=emilio\n\nMozReview-Commit-ID: 7wH5XcILVmX\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 293,
"line": "\n",
"lineno": 1124,
"revdate": [1478067084.0, 25200]
}, {
"node": "916e7ba3cd2b48f8a99f8093a20e455acd51d58f",
"author": "Hiroyuki Ikezoe \u003chikezoe@mozilla.com\u003e",
"desc": "Bug 1340340 - Stop mutating nsRefreshDriver during parallel traversal. r=heycam\n\nMozReview-Commit-ID: D5VYPWXm5jO",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 370,
"line": "  // Ensure the refresh driver is active during traversal to avoid mutating\n",
"lineno": 1125,
"revdate": [1487569033.0, -32400]
}, {
"node": "916e7ba3cd2b48f8a99f8093a20e455acd51d58f",
"author": "Hiroyuki Ikezoe \u003chikezoe@mozilla.com\u003e",
"desc": "Bug 1340340 - Stop mutating nsRefreshDriver during parallel traversal. r=heycam\n\nMozReview-Commit-ID: D5VYPWXm5jO",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 371,
"line": "  // mActiveTimer and mMostRecentRefresh time.\n",
"lineno": 1126,
"revdate": [1487569033.0, -32400]
}, {
"node": "83d6c4007b512d0535759b2ff7eeeb5082c66012",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1430844: Add assertions that would've caught this. r=bz\n\nMozReview-Commit-ID: 1UfhIRn2We2\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1124,
"line": "  presContext-\u003eRefreshDriver()-\u003eMostRecentRefresh();\n",
"lineno": 1127,
"revdate": [1516132138.0, -3600]
}, {
"node": "916e7ba3cd2b48f8a99f8093a20e455acd51d58f",
"author": "Hiroyuki Ikezoe \u003chikezoe@mozilla.com\u003e",
"desc": "Bug 1340340 - Stop mutating nsRefreshDriver during parallel traversal. r=heycam\n\nMozReview-Commit-ID: D5VYPWXm5jO",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 373,
"line": "\n",
"lineno": 1128,
"revdate": [1487569033.0, -32400]
}, {
"node": "1029e1a5b03d2d1a81f11c1a8d2720be7ee4b3bd",
"author": "Bobby Holley \u003cbobbyholley@gmail.com\u003e",
"desc": "Bug 1343362 - Allow restyle hints to be posted during change hint handling. r=emilio\n\nMozReview-Commit-ID: 6ZU24tLQCjV\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 387,
"line": "\n",
"lineno": 1129,
"revdate": [1488420434.0, 28800]
}, {
"node": "1029e1a5b03d2d1a81f11c1a8d2720be7ee4b3bd",
"author": "Bobby Holley \u003cbobbyholley@gmail.com\u003e",
"desc": "Bug 1343362 - Allow restyle hints to be posted during change hint handling. r=emilio\n\nMozReview-Commit-ID: 6ZU24tLQCjV\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 388,
"line": "  // Perform the Servo traversal, and the post-traversal if required. We do this\n",
"lineno": 1130,
"revdate": [1488420434.0, 28800]
}, {
"node": "1029e1a5b03d2d1a81f11c1a8d2720be7ee4b3bd",
"author": "Bobby Holley \u003cbobbyholley@gmail.com\u003e",
"desc": "Bug 1343362 - Allow restyle hints to be posted during change hint handling. r=emilio\n\nMozReview-Commit-ID: 6ZU24tLQCjV\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 389,
"line": "  // in a loop because certain rare paths in the frame constructor (like\n",
"lineno": 1131,
"revdate": [1488420434.0, 28800]
}, {
"node": "1029e1a5b03d2d1a81f11c1a8d2720be7ee4b3bd",
"author": "Bobby Holley \u003cbobbyholley@gmail.com\u003e",
"desc": "Bug 1343362 - Allow restyle hints to be posted during change hint handling. r=emilio\n\nMozReview-Commit-ID: 6ZU24tLQCjV\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 390,
"line": "  // uninstalling XBL bindings) can trigger additional style validations.\n",
"lineno": 1132,
"revdate": [1488420434.0, 28800]
}, {
"node": "ce456f7140a59f3ab1748573060cd0d97db9725a",
"author": "Cameron McCormack \u003ccam@mcc.id.au\u003e",
"desc": "Bug 1331294 - Part 5: Make ServoRestyleManager::ProcessPendingRestyles use StyleDocument()'s return value to determine whether to return early. r=bholley\n\nMozReview-Commit-ID: Hbk0vuQMhJs",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 334,
"line": "  mInStyleRefresh = true;\n",
"lineno": 1133,
"revdate": [1486694550.0, -28800]
}, {
"node": "6ad2ece5008130c8e435383196571f316a03df61",
"author": "Hiroyuki Ikezoe \u003chikezoe@mozilla.com\u003e",
"desc": "Bug 1388031 - Process normal traversal for throttled animation flush as well. r=bholley\n\nMozReview-Commit-ID: BirD8BDMifp\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1073,
"line": "  if (mHaveNonAnimationRestyles) {\n",
"lineno": 1134,
"revdate": [1502481275.0, 25200]
}, {
"node": "a418fa4ad28555c8ea6bea2e6a9f2d079822112f",
"author": "Boris Chiou \u003cboris.chiou@gmail.com\u003e",
"desc": "Bug 1355758 - Update RestyleManager::mAnimationGeneration for non-animation update. r=heycam\n\nWe use RestyleManager::mAnimationGeneration as the animation index of a\nnew created transition, and Element.getAnimations() uses this index to\nsort the order of transitions. We increase mAnimationGeneration one per\nrestyle cycle if there is any non-animation update.\n\nMozReview-Commit-ID: KmirBzI7CXi",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 397,
"line": "    ++mAnimationGeneration;\n",
"lineno": 1135,
"revdate": [1492764257.0, -28800]
}, {
"node": "a418fa4ad28555c8ea6bea2e6a9f2d079822112f",
"author": "Boris Chiou \u003cboris.chiou@gmail.com\u003e",
"desc": "Bug 1355758 - Update RestyleManager::mAnimationGeneration for non-animation update. r=heycam\n\nWe use RestyleManager::mAnimationGeneration as the animation index of a\nnew created transition, and Element.getAnimations() uses this index to\nsort the order of transitions. We increase mAnimationGeneration one per\nrestyle cycle if there is any non-animation update.\n\nMozReview-Commit-ID: KmirBzI7CXi",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 398,
"line": "  }\n",
"lineno": 1136,
"revdate": [1492764257.0, -28800]
}, {
"node": "2150351429b5c9515589facd9f2aefb1e4640842",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1355343: Take all the snapshots into account. r=bholley\n\nI've chosen this approach mainly because there's no other good way to guarantee\nthe model is correct than holding the snapshots alive until a style refresh.\n\nWhat I tried before this (storing them in a sort of \"immutable element data\") is\na pain, since we call into style from the frame constructor and other content\nnotifications, which makes keeping track of which snapshots should be cleared an\nwhich shouldn't an insane task.\n\nIdeally we'd have a single entry-point for style, but that's not the case right\nnow, and changing that requires pretty non-trivial changes to the frame\nconstructor.\n\nMozReview-Commit-ID: FF1KWZv2iBM",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 471,
"line": "\n",
"lineno": 1137,
"revdate": [1494167807.0, -7200]
}, {
"node": "81049c04c4ad1731f36e63666dc1f5ffaf98149b",
"author": "Bobby Holley \u003cbobbyholley@gmail.com\u003e",
"desc": "Bug 1384769 - Pass TraversalFlags from C++ into Rust. r=emilio\n\nMozReview-Commit-ID: EVUzgnL5coN\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 851,
"line": "  if (mRestyleForCSSRuleChanges) {\n",
"lineno": 1138,
"revdate": [1501033537.0, 25200]
}, {
"node": "81049c04c4ad1731f36e63666dc1f5ffaf98149b",
"author": "Bobby Holley \u003cbobbyholley@gmail.com\u003e",
"desc": "Bug 1384769 - Pass TraversalFlags from C++ into Rust. r=emilio\n\nMozReview-Commit-ID: EVUzgnL5coN\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 852,
"line": "    aFlags |= ServoTraversalFlags::ForCSSRuleChanges;\n",
"lineno": 1139,
"revdate": [1501033537.0, 25200]
}, {
"node": "81049c04c4ad1731f36e63666dc1f5ffaf98149b",
"author": "Bobby Holley \u003cbobbyholley@gmail.com\u003e",
"desc": "Bug 1384769 - Pass TraversalFlags from C++ into Rust. r=emilio\n\nMozReview-Commit-ID: EVUzgnL5coN\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 853,
"line": "  }\n",
"lineno": 1140,
"revdate": [1501033537.0, 25200]
}, {
"node": "81049c04c4ad1731f36e63666dc1f5ffaf98149b",
"author": "Bobby Holley \u003cbobbyholley@gmail.com\u003e",
"desc": "Bug 1384769 - Pass TraversalFlags from C++ into Rust. r=emilio\n\nMozReview-Commit-ID: EVUzgnL5coN\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 854,
"line": "\n",
"lineno": 1141,
"revdate": [1501033537.0, 25200]
}, {
"node": "3386f7cad63badc4241a7b3b7939d046567cb881",
"author": "Bobby Holley \u003cbobbyholley@gmail.com\u003e",
"desc": "Bug 1392863 - Clean up DoProcessPendingRestyles. r=emilio\n\nMozReview-Commit-ID: 4JhWFNPVvGn\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1015,
"line": "  while (styleSet-\u003eStyleDocument(aFlags)) {\n",
"lineno": 1142,
"revdate": [1503450837.0, 25200]
}, {
"node": "6ad2ece5008130c8e435383196571f316a03df61",
"author": "Hiroyuki Ikezoe \u003chikezoe@mozilla.com\u003e",
"desc": "Bug 1388031 - Process normal traversal for throttled animation flush as well. r=bholley\n\nMozReview-Commit-ID: BirD8BDMifp\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1082,
"line": "    ClearSnapshots();\n",
"lineno": 1143,
"revdate": [1502481275.0, 25200]
}, {
"node": "2150351429b5c9515589facd9f2aefb1e4640842",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1355343: Take all the snapshots into account. r=bholley\n\nI've chosen this approach mainly because there's no other good way to guarantee\nthe model is correct than holding the snapshots alive until a style refresh.\n\nWhat I tried before this (storing them in a sort of \"immutable element data\") is\na pain, since we call into style from the frame constructor and other content\nnotifications, which makes keeping track of which snapshots should be cleared an\nwhich shouldn't an insane task.\n\nIdeally we'd have a single entry-point for style, but that's not the case right\nnow, and changing that requires pretty non-trivial changes to the frame\nconstructor.\n\nMozReview-Commit-ID: FF1KWZv2iBM",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 474,
"line": "\n",
"lineno": 1144,
"revdate": [1494167807.0, -7200]
}, {
"node": "4128cdabed05cdb331d803e5c102229e4da16bf9",
"author": "J. Ryan Stinnett \u003cjryans@gmail.com\u003e",
"desc": "Bug 1371457 - Add restyle markers for Stylo. r=bholley,gregtatum\n\nAdd restyle markers to `PrepareAndTraverseSubtree` to cover both initial styling\nand part of the work of restyling.  Also add restyle markers around the post\ntraversal work in `DoProcessPendingRestyles`.\n\nA new marker is also added around the change hint processing after the post\ntraversal.\n\nMozReview-Commit-ID: 43PSyCJLikR",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 787,
"line": "    nsStyleChangeList currentChanges(StyleBackendType::Servo);\n",
"lineno": 1145,
"revdate": [1498676598.0, 25200]
}, {
"node": "4128cdabed05cdb331d803e5c102229e4da16bf9",
"author": "J. Ryan Stinnett \u003cjryans@gmail.com\u003e",
"desc": "Bug 1371457 - Add restyle markers for Stylo. r=bholley,gregtatum\n\nAdd restyle markers to `PrepareAndTraverseSubtree` to cover both initial styling\nand part of the work of restyling.  Also add restyle markers around the post\ntraversal work in `DoProcessPendingRestyles`.\n\nA new marker is also added around the change hint processing after the post\ntraversal.\n\nMozReview-Commit-ID: 43PSyCJLikR",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 788,
"line": "    bool anyStyleChanged = false;\n",
"lineno": 1146,
"revdate": [1498676598.0, 25200]
}, {
"node": "4128cdabed05cdb331d803e5c102229e4da16bf9",
"author": "J. Ryan Stinnett \u003cjryans@gmail.com\u003e",
"desc": "Bug 1371457 - Add restyle markers for Stylo. r=bholley,gregtatum\n\nAdd restyle markers to `PrepareAndTraverseSubtree` to cover both initial styling\nand part of the work of restyling.  Also add restyle markers around the post\ntraversal work in `DoProcessPendingRestyles`.\n\nA new marker is also added around the change hint processing after the post\ntraversal.\n\nMozReview-Commit-ID: 43PSyCJLikR",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 789,
"line": "\n",
"lineno": 1147,
"revdate": [1498676598.0, 25200]
}, {
"node": "4a2a58be8c6c54dbf85b90aa85e4d4281e72088f",
"author": "Bobby Holley \u003cbobbyholley@gmail.com\u003e",
"desc": "Bug 1338921 - Handle lazy frame construction in the regular post-servo pass. r=emilio\n\nMozReview-Commit-ID: FSXKAiyZDzt\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 388,
"line": "    // Recreate style contexts, and queue up change hints (which also handle\n",
"lineno": 1148,
"revdate": [1488251167.0, 28800]
}, {
"node": "4a2a58be8c6c54dbf85b90aa85e4d4281e72088f",
"author": "Bobby Holley \u003cbobbyholley@gmail.com\u003e",
"desc": "Bug 1338921 - Handle lazy frame construction in the regular post-servo pass. r=emilio\n\nMozReview-Commit-ID: FSXKAiyZDzt\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 389,
"line": "    // lazy frame construction).\n",
"lineno": 1149,
"revdate": [1488251167.0, 28800]
}, {
"node": "4128cdabed05cdb331d803e5c102229e4da16bf9",
"author": "J. Ryan Stinnett \u003cjryans@gmail.com\u003e",
"desc": "Bug 1371457 - Add restyle markers for Stylo. r=bholley,gregtatum\n\nAdd restyle markers to `PrepareAndTraverseSubtree` to cover both initial styling\nand part of the work of restyling.  Also add restyle markers around the post\ntraversal work in `DoProcessPendingRestyles`.\n\nA new marker is also added around the change hint processing after the post\ntraversal.\n\nMozReview-Commit-ID: 43PSyCJLikR",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 792,
"line": "    {\n",
"lineno": 1150,
"revdate": [1498676598.0, 25200]
}, {
"node": "83d6c4007b512d0535759b2ff7eeeb5082c66012",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1430844: Add assertions that would've caught this. r=bz\n\nMozReview-Commit-ID: 1UfhIRn2We2\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1148,
"line": "      AutoRestyleTimelineMarker marker(presContext-\u003eGetDocShell(), false);\n",
"lineno": 1151,
"revdate": [1516132138.0, -3600]
}, {
"node": "86b793bcbcd090a4189814f14204a2e0ea7929ef",
"author": "Bobby Holley \u003cbobbyholley@gmail.com\u003e",
"desc": "Bug 1383332 - Track the restyle root and use it to do less work during the traversal. r=emilio\n\nMozReview-Commit-ID: A8O3JOpsv4E\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1022,
"line": "      DocumentStyleRootIterator iter(doc-\u003eGetServoRestyleRoot());\n",
"lineno": 1152,
"revdate": [1500428327.0, 25200]
}, {
"node": "4128cdabed05cdb331d803e5c102229e4da16bf9",
"author": "J. Ryan Stinnett \u003cjryans@gmail.com\u003e",
"desc": "Bug 1371457 - Add restyle markers for Stylo. r=bholley,gregtatum\n\nAdd restyle markers to `PrepareAndTraverseSubtree` to cover both initial styling\nand part of the work of restyling.  Also add restyle markers around the post\ntraversal work in `DoProcessPendingRestyles`.\n\nA new marker is also added around the change hint processing after the post\ntraversal.\n\nMozReview-Commit-ID: 43PSyCJLikR",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 796,
"line": "      while (Element* root = iter.GetNextStyleRoot()) {\n",
"lineno": 1153,
"revdate": [1498676598.0, 25200]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1111,
"line": "        nsTArray\u003cnsIFrame*\u003e wrappersToRestyle;\n",
"lineno": 1154,
"revdate": [1502424626.0, 14400]
}, {
"node": "fb891d5aa58fdc3470d34ef91b5e06575f253c39",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388625 part 5.  Implement wrapper anonymous box restyling in ServoRestyleManager.  r=heycam\n\nMozReview-Commit-ID: FRW4RCR1GT4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1112,
"line": "        ServoRestyleState state(*styleSet, currentChanges, wrappersToRestyle);\n",
"lineno": 1155,
"revdate": [1502424626.0, 14400]
}, {
"node": "2a54187a362e9809ee0a45c4bb7008705f3016b9",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1390409 part 2 - Replace aParentWasRestyled with a bitflag. r=emilio\n\nMozReview-Commit-ID: 49C1N6LNXi7",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1041,
"line": "        ServoPostTraversalFlags flags = ServoPostTraversalFlags::Empty;\n",
"lineno": 1156,
"revdate": [1503896015.0, -36000]
}, {
"node": "2a54187a362e9809ee0a45c4bb7008705f3016b9",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1390409 part 2 - Replace aParentWasRestyled with a bitflag. r=emilio\n\nMozReview-Commit-ID: 49C1N6LNXi7",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1042,
"line": "        anyStyleChanged |= ProcessPostTraversal(root, nullptr, state, flags);\n",
"lineno": 1157,
"revdate": [1503896015.0, -36000]
}, {
"node": "4128cdabed05cdb331d803e5c102229e4da16bf9",
"author": "J. Ryan Stinnett \u003cjryans@gmail.com\u003e",
"desc": "Bug 1371457 - Add restyle markers for Stylo. r=bholley,gregtatum\n\nAdd restyle markers to `PrepareAndTraverseSubtree` to cover both initial styling\nand part of the work of restyling.  Also add restyle markers around the post\ntraversal work in `DoProcessPendingRestyles`.\n\nA new marker is also added around the change hint processing after the post\ntraversal.\n\nMozReview-Commit-ID: 43PSyCJLikR",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 799,
"line": "      }\n",
"lineno": 1158,
"revdate": [1498676598.0, 25200]
}, {
"node": "3976b04bf08a4442eb75cace5ad4899ca0eb0ced",
"author": "Cameron McCormack \u003ccam@mcc.id.au\u003e",
"desc": "Bug 1321284 - Part 5: Process document level NAC when restyling. r=bholley\n\nMozReview-Commit-ID: GigSrTHXXte",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 316,
"line": "    }\n",
"lineno": 1159,
"revdate": [1480580390.0, -28800]
}, {
"node": "25f6a27f309d85438bd3729d392291a038ad248f",
"author": "Cameron McCormack \u003ccam@mcc.id.au\u003e",
"desc": "Bug 1315889 - stylo: don't try to restyle elements that have been removed from the document. r=emilio\n\nMozReview-Commit-ID: EiFS1KAKAj6",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 377,
"line": "\n",
"lineno": 1160,
"revdate": [1478593474.0, -28800]
}, {
"node": "86b793bcbcd090a4189814f14204a2e0ea7929ef",
"author": "Bobby Holley \u003cbobbyholley@gmail.com\u003e",
"desc": "Bug 1383332 - Track the restyle root and use it to do less work during the traversal. r=emilio\n\nMozReview-Commit-ID: A8O3JOpsv4E\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1032,
"line": "    doc-\u003eClearServoRestyleRoot();\n",
"lineno": 1161,
"revdate": [1500428327.0, 25200]
}, {
"node": "86b793bcbcd090a4189814f14204a2e0ea7929ef",
"author": "Bobby Holley \u003cbobbyholley@gmail.com\u003e",
"desc": "Bug 1383332 - Track the restyle root and use it to do less work during the traversal. r=emilio\n\nMozReview-Commit-ID: A8O3JOpsv4E\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1033,
"line": "\n",
"lineno": 1162,
"revdate": [1500428327.0, 25200]
}, {
"node": "7c852ac4acf83d5d1776e98a6af36193bd97a9e5",
"author": "Bobby Holley \u003cbobbyholley@gmail.com\u003e",
"desc": "Bug 1317016 - Basic infrastructure for RestyleHint-driven traversal. r=emilio\n\nMozReview-Commit-ID: 7wH5XcILVmX\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 314,
"line": "    // Process the change hints.\n",
"lineno": 1163,
"revdate": [1478067084.0, 25200]
}, {
"node": "7c852ac4acf83d5d1776e98a6af36193bd97a9e5",
"author": "Bobby Holley \u003cbobbyholley@gmail.com\u003e",
"desc": "Bug 1317016 - Basic infrastructure for RestyleHint-driven traversal. r=emilio\n\nMozReview-Commit-ID: 7wH5XcILVmX\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 315,
"line": "    //\n",
"lineno": 1164,
"revdate": [1478067084.0, 25200]
}, {
"node": "7c852ac4acf83d5d1776e98a6af36193bd97a9e5",
"author": "Bobby Holley \u003cbobbyholley@gmail.com\u003e",
"desc": "Bug 1317016 - Basic infrastructure for RestyleHint-driven traversal. r=emilio\n\nMozReview-Commit-ID: 7wH5XcILVmX\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 316,
"line": "    // Unfortunately, the frame constructor can generate new change hints while\n",
"lineno": 1165,
"revdate": [1478067084.0, 25200]
}, {
"node": "7c852ac4acf83d5d1776e98a6af36193bd97a9e5",
"author": "Bobby Holley \u003cbobbyholley@gmail.com\u003e",
"desc": "Bug 1317016 - Basic infrastructure for RestyleHint-driven traversal. r=emilio\n\nMozReview-Commit-ID: 7wH5XcILVmX\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 317,
"line": "    // processing existing ones. We redirect those into a secondary queue and\n",
"lineno": 1166,
"revdate": [1478067084.0, 25200]
}, {
"node": "7c852ac4acf83d5d1776e98a6af36193bd97a9e5",
"author": "Bobby Holley \u003cbobbyholley@gmail.com\u003e",
"desc": "Bug 1317016 - Basic infrastructure for RestyleHint-driven traversal. r=emilio\n\nMozReview-Commit-ID: 7wH5XcILVmX\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 318,
"line": "    // iterate until there's nothing left.\n",
"lineno": 1167,
"revdate": [1478067084.0, 25200]
}, {
"node": "4128cdabed05cdb331d803e5c102229e4da16bf9",
"author": "J. Ryan Stinnett \u003cjryans@gmail.com\u003e",
"desc": "Bug 1371457 - Add restyle markers for Stylo. r=bholley,gregtatum\n\nAdd restyle markers to `PrepareAndTraverseSubtree` to cover both initial styling\nand part of the work of restyling.  Also add restyle markers around the post\ntraversal work in `DoProcessPendingRestyles`.\n\nA new marker is also added around the change hint processing after the post\ntraversal.\n\nMozReview-Commit-ID: 43PSyCJLikR",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 807,
"line": "    {\n",
"lineno": 1168,
"revdate": [1498676598.0, 25200]
}, {
"node": "4128cdabed05cdb331d803e5c102229e4da16bf9",
"author": "J. Ryan Stinnett \u003cjryans@gmail.com\u003e",
"desc": "Bug 1371457 - Add restyle markers for Stylo. r=bholley,gregtatum\n\nAdd restyle markers to `PrepareAndTraverseSubtree` to cover both initial styling\nand part of the work of restyling.  Also add restyle markers around the post\ntraversal work in `DoProcessPendingRestyles`.\n\nA new marker is also added around the change hint processing after the post\ntraversal.\n\nMozReview-Commit-ID: 43PSyCJLikR",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 808,
"line": "      AutoTimelineMarker marker(\n",
"lineno": 1169,
"revdate": [1498676598.0, 25200]
}, {
"node": "83d6c4007b512d0535759b2ff7eeeb5082c66012",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1430844: Add assertions that would've caught this. r=bz\n\nMozReview-Commit-ID: 1UfhIRn2We2\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1167,
"line": "        presContext-\u003eGetDocShell(), \"StylesApplyChanges\");\n",
"lineno": 1170,
"revdate": [1516132138.0, -3600]
}, {
"node": "4128cdabed05cdb331d803e5c102229e4da16bf9",
"author": "J. Ryan Stinnett \u003cjryans@gmail.com\u003e",
"desc": "Bug 1371457 - Add restyle markers for Stylo. r=bholley,gregtatum\n\nAdd restyle markers to `PrepareAndTraverseSubtree` to cover both initial styling\nand part of the work of restyling.  Also add restyle markers around the post\ntraversal work in `DoProcessPendingRestyles`.\n\nA new marker is also added around the change hint processing after the post\ntraversal.\n\nMozReview-Commit-ID: 43PSyCJLikR",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 810,
"line": "      ReentrantChangeList newChanges;\n",
"lineno": 1171,
"revdate": [1498676598.0, 25200]
}, {
"node": "4128cdabed05cdb331d803e5c102229e4da16bf9",
"author": "J. Ryan Stinnett \u003cjryans@gmail.com\u003e",
"desc": "Bug 1371457 - Add restyle markers for Stylo. r=bholley,gregtatum\n\nAdd restyle markers to `PrepareAndTraverseSubtree` to cover both initial styling\nand part of the work of restyling.  Also add restyle markers around the post\ntraversal work in `DoProcessPendingRestyles`.\n\nA new marker is also added around the change hint processing after the post\ntraversal.\n\nMozReview-Commit-ID: 43PSyCJLikR",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 811,
"line": "      mReentrantChanges = &newChanges;\n",
"lineno": 1172,
"revdate": [1498676598.0, 25200]
}, {
"node": "4128cdabed05cdb331d803e5c102229e4da16bf9",
"author": "J. Ryan Stinnett \u003cjryans@gmail.com\u003e",
"desc": "Bug 1371457 - Add restyle markers for Stylo. r=bholley,gregtatum\n\nAdd restyle markers to `PrepareAndTraverseSubtree` to cover both initial styling\nand part of the work of restyling.  Also add restyle markers around the post\ntraversal work in `DoProcessPendingRestyles`.\n\nA new marker is also added around the change hint processing after the post\ntraversal.\n\nMozReview-Commit-ID: 43PSyCJLikR",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 812,
"line": "      while (!currentChanges.IsEmpty()) {\n",
"lineno": 1173,
"revdate": [1498676598.0, 25200]
}, {
"node": "4128cdabed05cdb331d803e5c102229e4da16bf9",
"author": "J. Ryan Stinnett \u003cjryans@gmail.com\u003e",
"desc": "Bug 1371457 - Add restyle markers for Stylo. r=bholley,gregtatum\n\nAdd restyle markers to `PrepareAndTraverseSubtree` to cover both initial styling\nand part of the work of restyling.  Also add restyle markers around the post\ntraversal work in `DoProcessPendingRestyles`.\n\nA new marker is also added around the change hint processing after the post\ntraversal.\n\nMozReview-Commit-ID: 43PSyCJLikR",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 813,
"line": "        ProcessRestyledFrames(currentChanges);\n",
"lineno": 1174,
"revdate": [1498676598.0, 25200]
}, {
"node": "4128cdabed05cdb331d803e5c102229e4da16bf9",
"author": "J. Ryan Stinnett \u003cjryans@gmail.com\u003e",
"desc": "Bug 1371457 - Add restyle markers for Stylo. r=bholley,gregtatum\n\nAdd restyle markers to `PrepareAndTraverseSubtree` to cover both initial styling\nand part of the work of restyling.  Also add restyle markers around the post\ntraversal work in `DoProcessPendingRestyles`.\n\nA new marker is also added around the change hint processing after the post\ntraversal.\n\nMozReview-Commit-ID: 43PSyCJLikR",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 814,
"line": "        MOZ_ASSERT(currentChanges.IsEmpty());\n",
"lineno": 1175,
"revdate": [1498676598.0, 25200]
}, {
"node": "4128cdabed05cdb331d803e5c102229e4da16bf9",
"author": "J. Ryan Stinnett \u003cjryans@gmail.com\u003e",
"desc": "Bug 1371457 - Add restyle markers for Stylo. r=bholley,gregtatum\n\nAdd restyle markers to `PrepareAndTraverseSubtree` to cover both initial styling\nand part of the work of restyling.  Also add restyle markers around the post\ntraversal work in `DoProcessPendingRestyles`.\n\nA new marker is also added around the change hint processing after the post\ntraversal.\n\nMozReview-Commit-ID: 43PSyCJLikR",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 815,
"line": "        for (ReentrantChange& change: newChanges)  {\n",
"lineno": 1176,
"revdate": [1498676598.0, 25200]
}, {
"node": "4128cdabed05cdb331d803e5c102229e4da16bf9",
"author": "J. Ryan Stinnett \u003cjryans@gmail.com\u003e",
"desc": "Bug 1371457 - Add restyle markers for Stylo. r=bholley,gregtatum\n\nAdd restyle markers to `PrepareAndTraverseSubtree` to cover both initial styling\nand part of the work of restyling.  Also add restyle markers around the post\ntraversal work in `DoProcessPendingRestyles`.\n\nA new marker is also added around the change hint processing after the post\ntraversal.\n\nMozReview-Commit-ID: 43PSyCJLikR",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 816,
"line": "          if (!(change.mHint & nsChangeHint_ReconstructFrame) &&\n",
"lineno": 1177,
"revdate": [1498676598.0, 25200]
}, {
"node": "4128cdabed05cdb331d803e5c102229e4da16bf9",
"author": "J. Ryan Stinnett \u003cjryans@gmail.com\u003e",
"desc": "Bug 1371457 - Add restyle markers for Stylo. r=bholley,gregtatum\n\nAdd restyle markers to `PrepareAndTraverseSubtree` to cover both initial styling\nand part of the work of restyling.  Also add restyle markers around the post\ntraversal work in `DoProcessPendingRestyles`.\n\nA new marker is also added around the change hint processing after the post\ntraversal.\n\nMozReview-Commit-ID: 43PSyCJLikR",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 817,
"line": "              !change.mContent-\u003eGetPrimaryFrame()) {\n",
"lineno": 1178,
"revdate": [1498676598.0, 25200]
}, {
"node": "4128cdabed05cdb331d803e5c102229e4da16bf9",
"author": "J. Ryan Stinnett \u003cjryans@gmail.com\u003e",
"desc": "Bug 1371457 - Add restyle markers for Stylo. r=bholley,gregtatum\n\nAdd restyle markers to `PrepareAndTraverseSubtree` to cover both initial styling\nand part of the work of restyling.  Also add restyle markers around the post\ntraversal work in `DoProcessPendingRestyles`.\n\nA new marker is also added around the change hint processing after the post\ntraversal.\n\nMozReview-Commit-ID: 43PSyCJLikR",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 818,
"line": "            // SVG Elements post change hints without ensuring that the primary\n",
"lineno": 1179,
"revdate": [1498676598.0, 25200]
}, {
"node": "4128cdabed05cdb331d803e5c102229e4da16bf9",
"author": "J. Ryan Stinnett \u003cjryans@gmail.com\u003e",
"desc": "Bug 1371457 - Add restyle markers for Stylo. r=bholley,gregtatum\n\nAdd restyle markers to `PrepareAndTraverseSubtree` to cover both initial styling\nand part of the work of restyling.  Also add restyle markers around the post\ntraversal work in `DoProcessPendingRestyles`.\n\nA new marker is also added around the change hint processing after the post\ntraversal.\n\nMozReview-Commit-ID: 43PSyCJLikR",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 819,
"line": "            // frame will be there after that (see bug 1366142).\n",
"lineno": 1180,
"revdate": [1498676598.0, 25200]
}, {
"node": "4128cdabed05cdb331d803e5c102229e4da16bf9",
"author": "J. Ryan Stinnett \u003cjryans@gmail.com\u003e",
"desc": "Bug 1371457 - Add restyle markers for Stylo. r=bholley,gregtatum\n\nAdd restyle markers to `PrepareAndTraverseSubtree` to cover both initial styling\nand part of the work of restyling.  Also add restyle markers around the post\ntraversal work in `DoProcessPendingRestyles`.\n\nA new marker is also added around the change hint processing after the post\ntraversal.\n\nMozReview-Commit-ID: 43PSyCJLikR",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 820,
"line": "            //\n",
"lineno": 1181,
"revdate": [1498676598.0, 25200]
}, {
"node": "4128cdabed05cdb331d803e5c102229e4da16bf9",
"author": "J. Ryan Stinnett \u003cjryans@gmail.com\u003e",
"desc": "Bug 1371457 - Add restyle markers for Stylo. r=bholley,gregtatum\n\nAdd restyle markers to `PrepareAndTraverseSubtree` to cover both initial styling\nand part of the work of restyling.  Also add restyle markers around the post\ntraversal work in `DoProcessPendingRestyles`.\n\nA new marker is also added around the change hint processing after the post\ntraversal.\n\nMozReview-Commit-ID: 43PSyCJLikR",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 821,
"line": "            // Just ignore those, since we can't really process them.\n",
"lineno": 1182,
"revdate": [1498676598.0, 25200]
}, {
"node": "4128cdabed05cdb331d803e5c102229e4da16bf9",
"author": "J. Ryan Stinnett \u003cjryans@gmail.com\u003e",
"desc": "Bug 1371457 - Add restyle markers for Stylo. r=bholley,gregtatum\n\nAdd restyle markers to `PrepareAndTraverseSubtree` to cover both initial styling\nand part of the work of restyling.  Also add restyle markers around the post\ntraversal work in `DoProcessPendingRestyles`.\n\nA new marker is also added around the change hint processing after the post\ntraversal.\n\nMozReview-Commit-ID: 43PSyCJLikR",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 822,
"line": "            continue;\n",
"lineno": 1183,
"revdate": [1498676598.0, 25200]
}, {
"node": "4128cdabed05cdb331d803e5c102229e4da16bf9",
"author": "J. Ryan Stinnett \u003cjryans@gmail.com\u003e",
"desc": "Bug 1371457 - Add restyle markers for Stylo. r=bholley,gregtatum\n\nAdd restyle markers to `PrepareAndTraverseSubtree` to cover both initial styling\nand part of the work of restyling.  Also add restyle markers around the post\ntraversal work in `DoProcessPendingRestyles`.\n\nA new marker is also added around the change hint processing after the post\ntraversal.\n\nMozReview-Commit-ID: 43PSyCJLikR",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 823,
"line": "          }\n",
"lineno": 1184,
"revdate": [1498676598.0, 25200]
}, {
"node": "4128cdabed05cdb331d803e5c102229e4da16bf9",
"author": "J. Ryan Stinnett \u003cjryans@gmail.com\u003e",
"desc": "Bug 1371457 - Add restyle markers for Stylo. r=bholley,gregtatum\n\nAdd restyle markers to `PrepareAndTraverseSubtree` to cover both initial styling\nand part of the work of restyling.  Also add restyle markers around the post\ntraversal work in `DoProcessPendingRestyles`.\n\nA new marker is also added around the change hint processing after the post\ntraversal.\n\nMozReview-Commit-ID: 43PSyCJLikR",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 824,
"line": "          currentChanges.AppendChange(change.mContent-\u003eGetPrimaryFrame(),\n",
"lineno": 1185,
"revdate": [1498676598.0, 25200]
}, {
"node": "4128cdabed05cdb331d803e5c102229e4da16bf9",
"author": "J. Ryan Stinnett \u003cjryans@gmail.com\u003e",
"desc": "Bug 1371457 - Add restyle markers for Stylo. r=bholley,gregtatum\n\nAdd restyle markers to `PrepareAndTraverseSubtree` to cover both initial styling\nand part of the work of restyling.  Also add restyle markers around the post\ntraversal work in `DoProcessPendingRestyles`.\n\nA new marker is also added around the change hint processing after the post\ntraversal.\n\nMozReview-Commit-ID: 43PSyCJLikR",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 825,
"line": "                                      change.mContent, change.mHint);\n",
"lineno": 1186,
"revdate": [1498676598.0, 25200]
}, {
"node": "0665f9f01eb2afa3494edbd4b96f65320695044f",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1366142: Ignore reentrant change hints without primary frame. r=heycam\n\nMozReview-Commit-ID: 4bF7M0KMhNL",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 588,
"line": "        }\n",
"lineno": 1187,
"revdate": [1495283737.0, -7200]
}, {
"node": "4128cdabed05cdb331d803e5c102229e4da16bf9",
"author": "J. Ryan Stinnett \u003cjryans@gmail.com\u003e",
"desc": "Bug 1371457 - Add restyle markers for Stylo. r=bholley,gregtatum\n\nAdd restyle markers to `PrepareAndTraverseSubtree` to cover both initial styling\nand part of the work of restyling.  Also add restyle markers around the post\ntraversal work in `DoProcessPendingRestyles`.\n\nA new marker is also added around the change hint processing after the post\ntraversal.\n\nMozReview-Commit-ID: 43PSyCJLikR",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 827,
"line": "        newChanges.Clear();\n",
"lineno": 1188,
"revdate": [1498676598.0, 25200]
}, {
"node": "4c1cb8ecde7fa13a4f4c5d28df5b34cbed6e3319",
"author": "Cameron McCormack \u003ccam@mcc.id.au\u003e",
"desc": "Bug 1316247 - stylo: Handle restyles generated during change hint processing sooner. r=emilio\n\nMozReview-Commit-ID: HpgJ94ifJ7e",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 397,
"line": "      }\n",
"lineno": 1189,
"revdate": [1478672728.0, -28800]
}, {
"node": "4128cdabed05cdb331d803e5c102229e4da16bf9",
"author": "J. Ryan Stinnett \u003cjryans@gmail.com\u003e",
"desc": "Bug 1371457 - Add restyle markers for Stylo. r=bholley,gregtatum\n\nAdd restyle markers to `PrepareAndTraverseSubtree` to cover both initial styling\nand part of the work of restyling.  Also add restyle markers around the post\ntraversal work in `DoProcessPendingRestyles`.\n\nA new marker is also added around the change hint processing after the post\ntraversal.\n\nMozReview-Commit-ID: 43PSyCJLikR",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 829,
"line": "      mReentrantChanges = nullptr;\n",
"lineno": 1190,
"revdate": [1498676598.0, 25200]
}, {
"node": "7c852ac4acf83d5d1776e98a6af36193bd97a9e5",
"author": "Bobby Holley \u003cbobbyholley@gmail.com\u003e",
"desc": "Bug 1317016 - Basic infrastructure for RestyleHint-driven traversal. r=emilio\n\nMozReview-Commit-ID: 7wH5XcILVmX\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 329,
"line": "    }\n",
"lineno": 1191,
"revdate": [1478067084.0, 25200]
}, {
"node": "e0477439b222422a105c9e108878fadf1f36354b",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1357461: Ensure not to increment the restyle generation if we haven't restyled after all. r=heycam\n\nThis can happen with content attribute or state changes that end up not\ngenerating any hint.\n\nIn particular, in the media_queries_dynamic.html case, the iframe resize was\ntoggling a few scrollbar attributes, which made us never pass the \"didn't\nrestyle\" test, even though the test really passed.\n\nI'll probably need to add a workaround to assume we use viewport units, so\nprobably won't pass for long.\n\nMozReview-Commit-ID: 2oEfic5yaOy",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 622,
"line": "\n",
"lineno": 1192,
"revdate": [1496431661.0, -7200]
}, {
"node": "e0477439b222422a105c9e108878fadf1f36354b",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1357461: Ensure not to increment the restyle generation if we haven't restyled after all. r=heycam\n\nThis can happen with content attribute or state changes that end up not\ngenerating any hint.\n\nIn particular, in the media_queries_dynamic.html case, the iframe resize was\ntoggling a few scrollbar attributes, which made us never pass the \"didn't\nrestyle\" test, even though the test really passed.\n\nI'll probably need to add a workaround to assume we use viewport units, so\nprobably won't pass for long.\n\nMozReview-Commit-ID: 2oEfic5yaOy",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 623,
"line": "    if (anyStyleChanged) {\n",
"lineno": 1193,
"revdate": [1496431661.0, -7200]
}, {
"node": "e0477439b222422a105c9e108878fadf1f36354b",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1357461: Ensure not to increment the restyle generation if we haven't restyled after all. r=heycam\n\nThis can happen with content attribute or state changes that end up not\ngenerating any hint.\n\nIn particular, in the media_queries_dynamic.html case, the iframe resize was\ntoggling a few scrollbar attributes, which made us never pass the \"didn't\nrestyle\" test, even though the test really passed.\n\nI'll probably need to add a workaround to assume we use viewport units, so\nprobably won't pass for long.\n\nMozReview-Commit-ID: 2oEfic5yaOy",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 624,
"line": "      // Maybe no styles changed when:\n",
"lineno": 1194,
"revdate": [1496431661.0, -7200]
}, {
"node": "e0477439b222422a105c9e108878fadf1f36354b",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1357461: Ensure not to increment the restyle generation if we haven't restyled after all. r=heycam\n\nThis can happen with content attribute or state changes that end up not\ngenerating any hint.\n\nIn particular, in the media_queries_dynamic.html case, the iframe resize was\ntoggling a few scrollbar attributes, which made us never pass the \"didn't\nrestyle\" test, even though the test really passed.\n\nI'll probably need to add a workaround to assume we use viewport units, so\nprobably won't pass for long.\n\nMozReview-Commit-ID: 2oEfic5yaOy",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 625,
"line": "      //\n",
"lineno": 1195,
"revdate": [1496431661.0, -7200]
}, {
"node": "e0477439b222422a105c9e108878fadf1f36354b",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1357461: Ensure not to increment the restyle generation if we haven't restyled after all. r=heycam\n\nThis can happen with content attribute or state changes that end up not\ngenerating any hint.\n\nIn particular, in the media_queries_dynamic.html case, the iframe resize was\ntoggling a few scrollbar attributes, which made us never pass the \"didn't\nrestyle\" test, even though the test really passed.\n\nI'll probably need to add a workaround to assume we use viewport units, so\nprobably won't pass for long.\n\nMozReview-Commit-ID: 2oEfic5yaOy",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 626,
"line": "      //  * Only explicit change hints were posted in the first place.\n",
"lineno": 1196,
"revdate": [1496431661.0, -7200]
}, {
"node": "e0477439b222422a105c9e108878fadf1f36354b",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1357461: Ensure not to increment the restyle generation if we haven't restyled after all. r=heycam\n\nThis can happen with content attribute or state changes that end up not\ngenerating any hint.\n\nIn particular, in the media_queries_dynamic.html case, the iframe resize was\ntoggling a few scrollbar attributes, which made us never pass the \"didn't\nrestyle\" test, even though the test really passed.\n\nI'll probably need to add a workaround to assume we use viewport units, so\nprobably won't pass for long.\n\nMozReview-Commit-ID: 2oEfic5yaOy",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 627,
"line": "      //  * When an attribute or state change in the content happens not to need\n",
"lineno": 1197,
"revdate": [1496431661.0, -7200]
}, {
"node": "e0477439b222422a105c9e108878fadf1f36354b",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1357461: Ensure not to increment the restyle generation if we haven't restyled after all. r=heycam\n\nThis can happen with content attribute or state changes that end up not\ngenerating any hint.\n\nIn particular, in the media_queries_dynamic.html case, the iframe resize was\ntoggling a few scrollbar attributes, which made us never pass the \"didn't\nrestyle\" test, even though the test really passed.\n\nI'll probably need to add a workaround to assume we use viewport units, so\nprobably won't pass for long.\n\nMozReview-Commit-ID: 2oEfic5yaOy",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 628,
"line": "      //    a restyle after all.\n",
"lineno": 1198,
"revdate": [1496431661.0, -7200]
}, {
"node": "e0477439b222422a105c9e108878fadf1f36354b",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1357461: Ensure not to increment the restyle generation if we haven't restyled after all. r=heycam\n\nThis can happen with content attribute or state changes that end up not\ngenerating any hint.\n\nIn particular, in the media_queries_dynamic.html case, the iframe resize was\ntoggling a few scrollbar attributes, which made us never pass the \"didn't\nrestyle\" test, even though the test really passed.\n\nI'll probably need to add a workaround to assume we use viewport units, so\nprobably won't pass for long.\n\nMozReview-Commit-ID: 2oEfic5yaOy",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 629,
"line": "      //\n",
"lineno": 1199,
"revdate": [1496431661.0, -7200]
}, {
"node": "e0477439b222422a105c9e108878fadf1f36354b",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1357461: Ensure not to increment the restyle generation if we haven't restyled after all. r=heycam\n\nThis can happen with content attribute or state changes that end up not\ngenerating any hint.\n\nIn particular, in the media_queries_dynamic.html case, the iframe resize was\ntoggling a few scrollbar attributes, which made us never pass the \"didn't\nrestyle\" test, even though the test really passed.\n\nI'll probably need to add a workaround to assume we use viewport units, so\nprobably won't pass for long.\n\nMozReview-Commit-ID: 2oEfic5yaOy",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 630,
"line": "      // In any case, we don't need to increment the restyle generation in that\n",
"lineno": 1200,
"revdate": [1496431661.0, -7200]
}, {
"node": "e0477439b222422a105c9e108878fadf1f36354b",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1357461: Ensure not to increment the restyle generation if we haven't restyled after all. r=heycam\n\nThis can happen with content attribute or state changes that end up not\ngenerating any hint.\n\nIn particular, in the media_queries_dynamic.html case, the iframe resize was\ntoggling a few scrollbar attributes, which made us never pass the \"didn't\nrestyle\" test, even though the test really passed.\n\nI'll probably need to add a workaround to assume we use viewport units, so\nprobably won't pass for long.\n\nMozReview-Commit-ID: 2oEfic5yaOy",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 631,
"line": "      // case.\n",
"lineno": 1201,
"revdate": [1496431661.0, -7200]
}, {
"node": "e0477439b222422a105c9e108878fadf1f36354b",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1357461: Ensure not to increment the restyle generation if we haven't restyled after all. r=heycam\n\nThis can happen with content attribute or state changes that end up not\ngenerating any hint.\n\nIn particular, in the media_queries_dynamic.html case, the iframe resize was\ntoggling a few scrollbar attributes, which made us never pass the \"didn't\nrestyle\" test, even though the test really passed.\n\nI'll probably need to add a workaround to assume we use viewport units, so\nprobably won't pass for long.\n\nMozReview-Commit-ID: 2oEfic5yaOy",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 632,
"line": "      IncrementRestyleGeneration();\n",
"lineno": 1202,
"revdate": [1496431661.0, -7200]
}, {
"node": "e0477439b222422a105c9e108878fadf1f36354b",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1357461: Ensure not to increment the restyle generation if we haven't restyled after all. r=heycam\n\nThis can happen with content attribute or state changes that end up not\ngenerating any hint.\n\nIn particular, in the media_queries_dynamic.html case, the iframe resize was\ntoggling a few scrollbar attributes, which made us never pass the \"didn't\nrestyle\" test, even though the test really passed.\n\nI'll probably need to add a workaround to assume we use viewport units, so\nprobably won't pass for long.\n\nMozReview-Commit-ID: 2oEfic5yaOy",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 633,
"line": "    }\n",
"lineno": 1203,
"revdate": [1496431661.0, -7200]
}, {
"node": "6ba3d1fe1de9e8dbb77e49c18bda7b602e3c8a08",
"author": "Emilio Cobos \u00c1lvarez \u003cecoal95@gmail.com\u003e",
"desc": "Bug 1286445: stylo: Support restyles of non-pseudo content on state change. r=heycam\n\nThis includes, for example :hover.\n\nAlso removes the call to IsStyledByServo() in the document constructor, it's not\nonly unnecessary, but also we call UpdateStyleBackendType() too early.\n\nMozReview-Commit-ID: 4YfCdmLoSxu\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 147,
"line": "  }\n",
"lineno": 1204,
"revdate": [1468442567.0, 25200]
}, {
"node": "6ba3d1fe1de9e8dbb77e49c18bda7b602e3c8a08",
"author": "Emilio Cobos \u00c1lvarez \u003cecoal95@gmail.com\u003e",
"desc": "Bug 1286445: stylo: Support restyles of non-pseudo content on state change. r=heycam\n\nThis includes, for example :hover.\n\nAlso removes the call to IsStyledByServo() in the document constructor, it's not\nonly unnecessary, but also we call UpdateStyleBackendType() too early.\n\nMozReview-Commit-ID: 4YfCdmLoSxu\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 148,
"line": "\n",
"lineno": 1205,
"revdate": [1468442567.0, 25200]
}, {
"node": "3386f7cad63badc4241a7b3b7939d046567cb881",
"author": "Bobby Holley \u003cbobbyholley@gmail.com\u003e",
"desc": "Bug 1392863 - Clean up DoProcessPendingRestyles. r=emilio\n\nMozReview-Commit-ID: 4JhWFNPVvGn\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1080,
"line": "  doc-\u003eClearServoRestyleRoot();\n",
"lineno": 1206,
"revdate": [1503450837.0, 25200]
}, {
"node": "3386f7cad63badc4241a7b3b7939d046567cb881",
"author": "Bobby Holley \u003cbobbyholley@gmail.com\u003e",
"desc": "Bug 1392863 - Clean up DoProcessPendingRestyles. r=emilio\n\nMozReview-Commit-ID: 4JhWFNPVvGn\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1081,
"line": "\n",
"lineno": 1207,
"revdate": [1503450837.0, 25200]
}, {
"node": "43cff735bb7ce94d846f7098613a6cf5cdd43e8c",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1350140: Flush the overflow changed tracker when done with restyles. r=heycam\n\nMozReview-Commit-ID: 6ENzvvxCok5",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 420,
"line": "  FlushOverflowChangedTracker();\n",
"lineno": 1208,
"revdate": [1490648120.0, -7200]
}, {
"node": "43cff735bb7ce94d846f7098613a6cf5cdd43e8c",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1350140: Flush the overflow changed tracker when done with restyles. r=heycam\n\nMozReview-Commit-ID: 6ENzvvxCok5",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 421,
"line": "\n",
"lineno": 1209,
"revdate": [1490648120.0, -7200]
}, {
"node": "6ad2ece5008130c8e435383196571f316a03df61",
"author": "Hiroyuki Ikezoe \u003chikezoe@mozilla.com\u003e",
"desc": "Bug 1388031 - Process normal traversal for throttled animation flush as well. r=bholley\n\nMozReview-Commit-ID: BirD8BDMifp\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1146,
"line": "  ClearSnapshots();\n",
"lineno": 1210,
"revdate": [1502481275.0, 25200]
}, {
"node": "6ad2ece5008130c8e435383196571f316a03df61",
"author": "Hiroyuki Ikezoe \u003chikezoe@mozilla.com\u003e",
"desc": "Bug 1388031 - Process normal traversal for throttled animation flush as well. r=bholley\n\nMozReview-Commit-ID: BirD8BDMifp\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1147,
"line": "  styleSet-\u003eAssertTreeIsClean();\n",
"lineno": 1211,
"revdate": [1502481275.0, 25200]
}, {
"node": "6ad2ece5008130c8e435383196571f316a03df61",
"author": "Hiroyuki Ikezoe \u003chikezoe@mozilla.com\u003e",
"desc": "Bug 1388031 - Process normal traversal for throttled animation flush as well. r=bholley\n\nMozReview-Commit-ID: BirD8BDMifp\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1148,
"line": "  mHaveNonAnimationRestyles = false;\n",
"lineno": 1212,
"revdate": [1502481275.0, 25200]
}, {
"node": "3bce1540107cb517e3f9f0a19cc08562edfd0076",
"author": "Hiroyuki Ikezoe \u003chikezoe@mozilla.com\u003e",
"desc": "Bug 1364799 - Add PostRestyleEventForCSSRuleChanges to distinguish PostRestyleEvent. r=birtles,heycam\n\nThe difference is that PostRestyleEventForCSSRuleChanges sets\nmRestyleForCSSRuleChanges true. In a subsequent patch,\nwe propagate a new TraversalRestyleBehavior flag to servo side\nif mRestyleForCSSRuleChanges is true.\n\nMozReview-Commit-ID: IKsBbm09uT9",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 617,
"line": "  mRestyleForCSSRuleChanges = false;\n",
"lineno": 1213,
"revdate": [1495322186.0, -32400]
}, {
"node": "ce456f7140a59f3ab1748573060cd0d97db9725a",
"author": "Cameron McCormack \u003ccam@mcc.id.au\u003e",
"desc": "Bug 1331294 - Part 5: Make ServoRestyleManager::ProcessPendingRestyles use StyleDocument()'s return value to determine whether to return early. r=bholley\n\nMozReview-Commit-ID: Hbk0vuQMhJs",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 379,
"line": "  mInStyleRefresh = false;\n",
"lineno": 1214,
"revdate": [1486694550.0, -28800]
}, {
"node": "ce456f7140a59f3ab1748573060cd0d97db9725a",
"author": "Cameron McCormack \u003ccam@mcc.id.au\u003e",
"desc": "Bug 1331294 - Part 5: Make ServoRestyleManager::ProcessPendingRestyles use StyleDocument()'s return value to determine whether to return early. r=bholley\n\nMozReview-Commit-ID: Hbk0vuQMhJs",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 380,
"line": "\n",
"lineno": 1215,
"revdate": [1486694550.0, -28800]
}, {
"node": "a21be24aa822651b24ea8c655867f7d1dcb8365f",
"author": "Bobby Holley \u003cbobbyholley@gmail.com\u003e",
"desc": "Bug 1373725 - Trigger a rule tree gc at the end of DoProcessPendingRestyles. r=emilio\n\nMozReview-Commit-ID: W2lkQohudA\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 683,
"line": "  // Now that everything has settled, see if we have enough free rule nodes in\n",
"lineno": 1216,
"revdate": [1497633625.0, 25200]
}, {
"node": "a21be24aa822651b24ea8c655867f7d1dcb8365f",
"author": "Bobby Holley \u003cbobbyholley@gmail.com\u003e",
"desc": "Bug 1373725 - Trigger a rule tree gc at the end of DoProcessPendingRestyles. r=emilio\n\nMozReview-Commit-ID: W2lkQohudA\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 684,
"line": "  // the tree to warrant sweeping them.\n",
"lineno": 1217,
"revdate": [1497633625.0, 25200]
}, {
"node": "a21be24aa822651b24ea8c655867f7d1dcb8365f",
"author": "Bobby Holley \u003cbobbyholley@gmail.com\u003e",
"desc": "Bug 1373725 - Trigger a rule tree gc at the end of DoProcessPendingRestyles. r=emilio\n\nMozReview-Commit-ID: W2lkQohudA\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 685,
"line": "  styleSet-\u003eMaybeGCRuleTree();\n",
"lineno": 1218,
"revdate": [1497633625.0, 25200]
}, {
"node": "a21be24aa822651b24ea8c655867f7d1dcb8365f",
"author": "Bobby Holley \u003cbobbyholley@gmail.com\u003e",
"desc": "Bug 1373725 - Trigger a rule tree gc at the end of DoProcessPendingRestyles. r=emilio\n\nMozReview-Commit-ID: W2lkQohudA\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 686,
"line": "\n",
"lineno": 1219,
"revdate": [1497633625.0, 25200]
}, {
"node": "b401d8f83eb1564055a057718d0977e967f59cbb",
"author": "Boris Chiou \u003cboris.chiou@gmail.com\u003e",
"desc": "Bug 1324691 - Part 3: Support AnimationsWithDestroyedFrame for ServoRestyleManager. r=heycam\n\nMozReview-Commit-ID: 4cQ6PoieLLG",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 367,
"line": "  // Note: We are in the scope of |animationsWithDestroyedFrame|, so\n",
"lineno": 1220,
"revdate": [1485492346.0, -28800]
}, {
"node": "b401d8f83eb1564055a057718d0977e967f59cbb",
"author": "Boris Chiou \u003cboris.chiou@gmail.com\u003e",
"desc": "Bug 1324691 - Part 3: Support AnimationsWithDestroyedFrame for ServoRestyleManager. r=heycam\n\nMozReview-Commit-ID: 4cQ6PoieLLG",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 368,
"line": "  //       |mAnimationsWithDestroyedFrame| is still valid.\n",
"lineno": 1221,
"revdate": [1485492346.0, -28800]
}, {
"node": "b401d8f83eb1564055a057718d0977e967f59cbb",
"author": "Boris Chiou \u003cboris.chiou@gmail.com\u003e",
"desc": "Bug 1324691 - Part 3: Support AnimationsWithDestroyedFrame for ServoRestyleManager. r=heycam\n\nMozReview-Commit-ID: 4cQ6PoieLLG",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 369,
"line": "  MOZ_ASSERT(mAnimationsWithDestroyedFrame);\n",
"lineno": 1222,
"revdate": [1485492346.0, -28800]
}, {
"node": "b401d8f83eb1564055a057718d0977e967f59cbb",
"author": "Boris Chiou \u003cboris.chiou@gmail.com\u003e",
"desc": "Bug 1324691 - Part 3: Support AnimationsWithDestroyedFrame for ServoRestyleManager. r=heycam\n\nMozReview-Commit-ID: 4cQ6PoieLLG",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 370,
"line": "  mAnimationsWithDestroyedFrame-\u003eStopAnimationsForElementsWithoutFrames();\n",
"lineno": 1223,
"revdate": [1485492346.0, -28800]
}, {
"node": "f3ab6216d197647011cc48b90fff685cb875c983",
"author": "Cameron McCormack \u003ccam@mcc.id.au\u003e",
"desc": "Bug 1248864 - Part 2: Add skeleton ServoRestyleManager and a RestyleManagerHandle smart pointer. r=dholbert",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 51,
"line": "}\n",
"lineno": 1224,
"revdate": [1456297272.0, -39600]
}, {
"node": "f3ab6216d197647011cc48b90fff685cb875c983",
"author": "Cameron McCormack \u003ccam@mcc.id.au\u003e",
"desc": "Bug 1248864 - Part 2: Add skeleton ServoRestyleManager and a RestyleManagerHandle smart pointer. r=dholbert",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 52,
"line": "\n",
"lineno": 1225,
"revdate": [1456297272.0, -39600]
}, {
"node": "2011b90ddb79817efddb3ac8c9feb0b6ed4b24a9",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1409088: Fix destination insertion point removal algorithm. r=bz\n\nWhen an insertion point (a) is added to the document before another insertion\npoint (b), and that insertion point matches nodes that used to match (b), the\nfollowing happens in RedistributeAllNodes:\n\n * Loop through (a), and clear the existing insertion points on nodes\n   distributed into it (none, since it was just inserted).\n\n * Go through the node pool and add the matched nodes. That makes the node\n   (which already had (b) in the insertion point array) have [(b), (a)] as the\n   insertion points.\n\n * Go through (b), and clear the existing insertion points on the nodes\n   distributed to it. That used to do IndexOf() + SetLength(), but since (b) was\n   the first node by then in the insertion point array, we'll leave the\n   insertion point array empty, while (a) would still think that the node is\n   distributed to it.\n\nThis causes the bloom filter code, which loops through the flattened tree\nparents, to not insert any (because the node doesn't know about where it's\ninserted).\n\nAlso, add a debug phase to verify the flat tree before restyling that would've\ncaught this more clearly (happy to remove it if you don't think it's worth).\n\nWe still can't assert that the insertion point is properly referenced due to the\nhacky way mInsertionPoints is cleared in\nHTMLContentElement::UpdateFallbackDistribution, but we'll still clear the\ninsertion points either there, or on the rest of insertion point removal code in\nShadowRoot::DistributeAllNodes.\n\nMozReview-Commit-ID: 9k2gnsAKMEe",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1210,
"line": "#ifdef DEBUG\n",
"lineno": 1226,
"revdate": [1508417116.0, -7200]
}, {
"node": "2011b90ddb79817efddb3ac8c9feb0b6ed4b24a9",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1409088: Fix destination insertion point removal algorithm. r=bz\n\nWhen an insertion point (a) is added to the document before another insertion\npoint (b), and that insertion point matches nodes that used to match (b), the\nfollowing happens in RedistributeAllNodes:\n\n * Loop through (a), and clear the existing insertion points on nodes\n   distributed into it (none, since it was just inserted).\n\n * Go through the node pool and add the matched nodes. That makes the node\n   (which already had (b) in the insertion point array) have [(b), (a)] as the\n   insertion points.\n\n * Go through (b), and clear the existing insertion points on the nodes\n   distributed to it. That used to do IndexOf() + SetLength(), but since (b) was\n   the first node by then in the insertion point array, we'll leave the\n   insertion point array empty, while (a) would still think that the node is\n   distributed to it.\n\nThis causes the bloom filter code, which loops through the flattened tree\nparents, to not insert any (because the node doesn't know about where it's\ninserted).\n\nAlso, add a debug phase to verify the flat tree before restyling that would've\ncaught this more clearly (happy to remove it if you don't think it's worth).\n\nWe still can't assert that the insertion point is properly referenced due to the\nhacky way mInsertionPoints is cleared in\nHTMLContentElement::UpdateFallbackDistribution, but we'll still clear the\ninsertion points either there, or on the rest of insertion point removal code in\nShadowRoot::DistributeAllNodes.\n\nMozReview-Commit-ID: 9k2gnsAKMEe",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1211,
"line": "static void\n",
"lineno": 1227,
"revdate": [1508417116.0, -7200]
}, {
"node": "2011b90ddb79817efddb3ac8c9feb0b6ed4b24a9",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1409088: Fix destination insertion point removal algorithm. r=bz\n\nWhen an insertion point (a) is added to the document before another insertion\npoint (b), and that insertion point matches nodes that used to match (b), the\nfollowing happens in RedistributeAllNodes:\n\n * Loop through (a), and clear the existing insertion points on nodes\n   distributed into it (none, since it was just inserted).\n\n * Go through the node pool and add the matched nodes. That makes the node\n   (which already had (b) in the insertion point array) have [(b), (a)] as the\n   insertion points.\n\n * Go through (b), and clear the existing insertion points on the nodes\n   distributed to it. That used to do IndexOf() + SetLength(), but since (b) was\n   the first node by then in the insertion point array, we'll leave the\n   insertion point array empty, while (a) would still think that the node is\n   distributed to it.\n\nThis causes the bloom filter code, which loops through the flattened tree\nparents, to not insert any (because the node doesn't know about where it's\ninserted).\n\nAlso, add a debug phase to verify the flat tree before restyling that would've\ncaught this more clearly (happy to remove it if you don't think it's worth).\n\nWe still can't assert that the insertion point is properly referenced due to the\nhacky way mInsertionPoints is cleared in\nHTMLContentElement::UpdateFallbackDistribution, but we'll still clear the\ninsertion points either there, or on the rest of insertion point removal code in\nShadowRoot::DistributeAllNodes.\n\nMozReview-Commit-ID: 9k2gnsAKMEe",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1212,
"line": "VerifyFlatTree(const nsIContent& aContent)\n",
"lineno": 1228,
"revdate": [1508417116.0, -7200]
}, {
"node": "2011b90ddb79817efddb3ac8c9feb0b6ed4b24a9",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1409088: Fix destination insertion point removal algorithm. r=bz\n\nWhen an insertion point (a) is added to the document before another insertion\npoint (b), and that insertion point matches nodes that used to match (b), the\nfollowing happens in RedistributeAllNodes:\n\n * Loop through (a), and clear the existing insertion points on nodes\n   distributed into it (none, since it was just inserted).\n\n * Go through the node pool and add the matched nodes. That makes the node\n   (which already had (b) in the insertion point array) have [(b), (a)] as the\n   insertion points.\n\n * Go through (b), and clear the existing insertion points on the nodes\n   distributed to it. That used to do IndexOf() + SetLength(), but since (b) was\n   the first node by then in the insertion point array, we'll leave the\n   insertion point array empty, while (a) would still think that the node is\n   distributed to it.\n\nThis causes the bloom filter code, which loops through the flattened tree\nparents, to not insert any (because the node doesn't know about where it's\ninserted).\n\nAlso, add a debug phase to verify the flat tree before restyling that would've\ncaught this more clearly (happy to remove it if you don't think it's worth).\n\nWe still can't assert that the insertion point is properly referenced due to the\nhacky way mInsertionPoints is cleared in\nHTMLContentElement::UpdateFallbackDistribution, but we'll still clear the\ninsertion points either there, or on the rest of insertion point removal code in\nShadowRoot::DistributeAllNodes.\n\nMozReview-Commit-ID: 9k2gnsAKMEe",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1213,
"line": "{\n",
"lineno": 1229,
"revdate": [1508417116.0, -7200]
}, {
"node": "2011b90ddb79817efddb3ac8c9feb0b6ed4b24a9",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1409088: Fix destination insertion point removal algorithm. r=bz\n\nWhen an insertion point (a) is added to the document before another insertion\npoint (b), and that insertion point matches nodes that used to match (b), the\nfollowing happens in RedistributeAllNodes:\n\n * Loop through (a), and clear the existing insertion points on nodes\n   distributed into it (none, since it was just inserted).\n\n * Go through the node pool and add the matched nodes. That makes the node\n   (which already had (b) in the insertion point array) have [(b), (a)] as the\n   insertion points.\n\n * Go through (b), and clear the existing insertion points on the nodes\n   distributed to it. That used to do IndexOf() + SetLength(), but since (b) was\n   the first node by then in the insertion point array, we'll leave the\n   insertion point array empty, while (a) would still think that the node is\n   distributed to it.\n\nThis causes the bloom filter code, which loops through the flattened tree\nparents, to not insert any (because the node doesn't know about where it's\ninserted).\n\nAlso, add a debug phase to verify the flat tree before restyling that would've\ncaught this more clearly (happy to remove it if you don't think it's worth).\n\nWe still can't assert that the insertion point is properly referenced due to the\nhacky way mInsertionPoints is cleared in\nHTMLContentElement::UpdateFallbackDistribution, but we'll still clear the\ninsertion points either there, or on the rest of insertion point removal code in\nShadowRoot::DistributeAllNodes.\n\nMozReview-Commit-ID: 9k2gnsAKMEe",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1214,
"line": "  StyleChildrenIterator iter(&aContent);\n",
"lineno": 1230,
"revdate": [1508417116.0, -7200]
}, {
"node": "2011b90ddb79817efddb3ac8c9feb0b6ed4b24a9",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1409088: Fix destination insertion point removal algorithm. r=bz\n\nWhen an insertion point (a) is added to the document before another insertion\npoint (b), and that insertion point matches nodes that used to match (b), the\nfollowing happens in RedistributeAllNodes:\n\n * Loop through (a), and clear the existing insertion points on nodes\n   distributed into it (none, since it was just inserted).\n\n * Go through the node pool and add the matched nodes. That makes the node\n   (which already had (b) in the insertion point array) have [(b), (a)] as the\n   insertion points.\n\n * Go through (b), and clear the existing insertion points on the nodes\n   distributed to it. That used to do IndexOf() + SetLength(), but since (b) was\n   the first node by then in the insertion point array, we'll leave the\n   insertion point array empty, while (a) would still think that the node is\n   distributed to it.\n\nThis causes the bloom filter code, which loops through the flattened tree\nparents, to not insert any (because the node doesn't know about where it's\ninserted).\n\nAlso, add a debug phase to verify the flat tree before restyling that would've\ncaught this more clearly (happy to remove it if you don't think it's worth).\n\nWe still can't assert that the insertion point is properly referenced due to the\nhacky way mInsertionPoints is cleared in\nHTMLContentElement::UpdateFallbackDistribution, but we'll still clear the\ninsertion points either there, or on the rest of insertion point removal code in\nShadowRoot::DistributeAllNodes.\n\nMozReview-Commit-ID: 9k2gnsAKMEe",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1215,
"line": "\n",
"lineno": 1231,
"revdate": [1508417116.0, -7200]
}, {
"node": "2011b90ddb79817efddb3ac8c9feb0b6ed4b24a9",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1409088: Fix destination insertion point removal algorithm. r=bz\n\nWhen an insertion point (a) is added to the document before another insertion\npoint (b), and that insertion point matches nodes that used to match (b), the\nfollowing happens in RedistributeAllNodes:\n\n * Loop through (a), and clear the existing insertion points on nodes\n   distributed into it (none, since it was just inserted).\n\n * Go through the node pool and add the matched nodes. That makes the node\n   (which already had (b) in the insertion point array) have [(b), (a)] as the\n   insertion points.\n\n * Go through (b), and clear the existing insertion points on the nodes\n   distributed to it. That used to do IndexOf() + SetLength(), but since (b) was\n   the first node by then in the insertion point array, we'll leave the\n   insertion point array empty, while (a) would still think that the node is\n   distributed to it.\n\nThis causes the bloom filter code, which loops through the flattened tree\nparents, to not insert any (because the node doesn't know about where it's\ninserted).\n\nAlso, add a debug phase to verify the flat tree before restyling that would've\ncaught this more clearly (happy to remove it if you don't think it's worth).\n\nWe still can't assert that the insertion point is properly referenced due to the\nhacky way mInsertionPoints is cleared in\nHTMLContentElement::UpdateFallbackDistribution, but we'll still clear the\ninsertion points either there, or on the rest of insertion point removal code in\nShadowRoot::DistributeAllNodes.\n\nMozReview-Commit-ID: 9k2gnsAKMEe",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1216,
"line": "  for (auto* content = iter.GetNextChild();\n",
"lineno": 1232,
"revdate": [1508417116.0, -7200]
}, {
"node": "2011b90ddb79817efddb3ac8c9feb0b6ed4b24a9",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1409088: Fix destination insertion point removal algorithm. r=bz\n\nWhen an insertion point (a) is added to the document before another insertion\npoint (b), and that insertion point matches nodes that used to match (b), the\nfollowing happens in RedistributeAllNodes:\n\n * Loop through (a), and clear the existing insertion points on nodes\n   distributed into it (none, since it was just inserted).\n\n * Go through the node pool and add the matched nodes. That makes the node\n   (which already had (b) in the insertion point array) have [(b), (a)] as the\n   insertion points.\n\n * Go through (b), and clear the existing insertion points on the nodes\n   distributed to it. That used to do IndexOf() + SetLength(), but since (b) was\n   the first node by then in the insertion point array, we'll leave the\n   insertion point array empty, while (a) would still think that the node is\n   distributed to it.\n\nThis causes the bloom filter code, which loops through the flattened tree\nparents, to not insert any (because the node doesn't know about where it's\ninserted).\n\nAlso, add a debug phase to verify the flat tree before restyling that would've\ncaught this more clearly (happy to remove it if you don't think it's worth).\n\nWe still can't assert that the insertion point is properly referenced due to the\nhacky way mInsertionPoints is cleared in\nHTMLContentElement::UpdateFallbackDistribution, but we'll still clear the\ninsertion points either there, or on the rest of insertion point removal code in\nShadowRoot::DistributeAllNodes.\n\nMozReview-Commit-ID: 9k2gnsAKMEe",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1217,
"line": "       content;\n",
"lineno": 1233,
"revdate": [1508417116.0, -7200]
}, {
"node": "2011b90ddb79817efddb3ac8c9feb0b6ed4b24a9",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1409088: Fix destination insertion point removal algorithm. r=bz\n\nWhen an insertion point (a) is added to the document before another insertion\npoint (b), and that insertion point matches nodes that used to match (b), the\nfollowing happens in RedistributeAllNodes:\n\n * Loop through (a), and clear the existing insertion points on nodes\n   distributed into it (none, since it was just inserted).\n\n * Go through the node pool and add the matched nodes. That makes the node\n   (which already had (b) in the insertion point array) have [(b), (a)] as the\n   insertion points.\n\n * Go through (b), and clear the existing insertion points on the nodes\n   distributed to it. That used to do IndexOf() + SetLength(), but since (b) was\n   the first node by then in the insertion point array, we'll leave the\n   insertion point array empty, while (a) would still think that the node is\n   distributed to it.\n\nThis causes the bloom filter code, which loops through the flattened tree\nparents, to not insert any (because the node doesn't know about where it's\ninserted).\n\nAlso, add a debug phase to verify the flat tree before restyling that would've\ncaught this more clearly (happy to remove it if you don't think it's worth).\n\nWe still can't assert that the insertion point is properly referenced due to the\nhacky way mInsertionPoints is cleared in\nHTMLContentElement::UpdateFallbackDistribution, but we'll still clear the\ninsertion points either there, or on the rest of insertion point removal code in\nShadowRoot::DistributeAllNodes.\n\nMozReview-Commit-ID: 9k2gnsAKMEe",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1218,
"line": "       content = iter.GetNextChild()) {\n",
"lineno": 1234,
"revdate": [1508417116.0, -7200]
}, {
"node": "2011b90ddb79817efddb3ac8c9feb0b6ed4b24a9",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1409088: Fix destination insertion point removal algorithm. r=bz\n\nWhen an insertion point (a) is added to the document before another insertion\npoint (b), and that insertion point matches nodes that used to match (b), the\nfollowing happens in RedistributeAllNodes:\n\n * Loop through (a), and clear the existing insertion points on nodes\n   distributed into it (none, since it was just inserted).\n\n * Go through the node pool and add the matched nodes. That makes the node\n   (which already had (b) in the insertion point array) have [(b), (a)] as the\n   insertion points.\n\n * Go through (b), and clear the existing insertion points on the nodes\n   distributed to it. That used to do IndexOf() + SetLength(), but since (b) was\n   the first node by then in the insertion point array, we'll leave the\n   insertion point array empty, while (a) would still think that the node is\n   distributed to it.\n\nThis causes the bloom filter code, which loops through the flattened tree\nparents, to not insert any (because the node doesn't know about where it's\ninserted).\n\nAlso, add a debug phase to verify the flat tree before restyling that would've\ncaught this more clearly (happy to remove it if you don't think it's worth).\n\nWe still can't assert that the insertion point is properly referenced due to the\nhacky way mInsertionPoints is cleared in\nHTMLContentElement::UpdateFallbackDistribution, but we'll still clear the\ninsertion points either there, or on the rest of insertion point removal code in\nShadowRoot::DistributeAllNodes.\n\nMozReview-Commit-ID: 9k2gnsAKMEe",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1219,
"line": "    MOZ_ASSERT(content-\u003eGetFlattenedTreeParentNodeForStyle() == &aContent);\n",
"lineno": 1235,
"revdate": [1508417116.0, -7200]
}, {
"node": "2011b90ddb79817efddb3ac8c9feb0b6ed4b24a9",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1409088: Fix destination insertion point removal algorithm. r=bz\n\nWhen an insertion point (a) is added to the document before another insertion\npoint (b), and that insertion point matches nodes that used to match (b), the\nfollowing happens in RedistributeAllNodes:\n\n * Loop through (a), and clear the existing insertion points on nodes\n   distributed into it (none, since it was just inserted).\n\n * Go through the node pool and add the matched nodes. That makes the node\n   (which already had (b) in the insertion point array) have [(b), (a)] as the\n   insertion points.\n\n * Go through (b), and clear the existing insertion points on the nodes\n   distributed to it. That used to do IndexOf() + SetLength(), but since (b) was\n   the first node by then in the insertion point array, we'll leave the\n   insertion point array empty, while (a) would still think that the node is\n   distributed to it.\n\nThis causes the bloom filter code, which loops through the flattened tree\nparents, to not insert any (because the node doesn't know about where it's\ninserted).\n\nAlso, add a debug phase to verify the flat tree before restyling that would've\ncaught this more clearly (happy to remove it if you don't think it's worth).\n\nWe still can't assert that the insertion point is properly referenced due to the\nhacky way mInsertionPoints is cleared in\nHTMLContentElement::UpdateFallbackDistribution, but we'll still clear the\ninsertion points either there, or on the rest of insertion point removal code in\nShadowRoot::DistributeAllNodes.\n\nMozReview-Commit-ID: 9k2gnsAKMEe",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1220,
"line": "    VerifyFlatTree(*content);\n",
"lineno": 1236,
"revdate": [1508417116.0, -7200]
}, {
"node": "2011b90ddb79817efddb3ac8c9feb0b6ed4b24a9",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1409088: Fix destination insertion point removal algorithm. r=bz\n\nWhen an insertion point (a) is added to the document before another insertion\npoint (b), and that insertion point matches nodes that used to match (b), the\nfollowing happens in RedistributeAllNodes:\n\n * Loop through (a), and clear the existing insertion points on nodes\n   distributed into it (none, since it was just inserted).\n\n * Go through the node pool and add the matched nodes. That makes the node\n   (which already had (b) in the insertion point array) have [(b), (a)] as the\n   insertion points.\n\n * Go through (b), and clear the existing insertion points on the nodes\n   distributed to it. That used to do IndexOf() + SetLength(), but since (b) was\n   the first node by then in the insertion point array, we'll leave the\n   insertion point array empty, while (a) would still think that the node is\n   distributed to it.\n\nThis causes the bloom filter code, which loops through the flattened tree\nparents, to not insert any (because the node doesn't know about where it's\ninserted).\n\nAlso, add a debug phase to verify the flat tree before restyling that would've\ncaught this more clearly (happy to remove it if you don't think it's worth).\n\nWe still can't assert that the insertion point is properly referenced due to the\nhacky way mInsertionPoints is cleared in\nHTMLContentElement::UpdateFallbackDistribution, but we'll still clear the\ninsertion points either there, or on the rest of insertion point removal code in\nShadowRoot::DistributeAllNodes.\n\nMozReview-Commit-ID: 9k2gnsAKMEe",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1221,
"line": "  }\n",
"lineno": 1237,
"revdate": [1508417116.0, -7200]
}, {
"node": "2011b90ddb79817efddb3ac8c9feb0b6ed4b24a9",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1409088: Fix destination insertion point removal algorithm. r=bz\n\nWhen an insertion point (a) is added to the document before another insertion\npoint (b), and that insertion point matches nodes that used to match (b), the\nfollowing happens in RedistributeAllNodes:\n\n * Loop through (a), and clear the existing insertion points on nodes\n   distributed into it (none, since it was just inserted).\n\n * Go through the node pool and add the matched nodes. That makes the node\n   (which already had (b) in the insertion point array) have [(b), (a)] as the\n   insertion points.\n\n * Go through (b), and clear the existing insertion points on the nodes\n   distributed to it. That used to do IndexOf() + SetLength(), but since (b) was\n   the first node by then in the insertion point array, we'll leave the\n   insertion point array empty, while (a) would still think that the node is\n   distributed to it.\n\nThis causes the bloom filter code, which loops through the flattened tree\nparents, to not insert any (because the node doesn't know about where it's\ninserted).\n\nAlso, add a debug phase to verify the flat tree before restyling that would've\ncaught this more clearly (happy to remove it if you don't think it's worth).\n\nWe still can't assert that the insertion point is properly referenced due to the\nhacky way mInsertionPoints is cleared in\nHTMLContentElement::UpdateFallbackDistribution, but we'll still clear the\ninsertion points either there, or on the rest of insertion point removal code in\nShadowRoot::DistributeAllNodes.\n\nMozReview-Commit-ID: 9k2gnsAKMEe",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1222,
"line": "}\n",
"lineno": 1238,
"revdate": [1508417116.0, -7200]
}, {
"node": "2011b90ddb79817efddb3ac8c9feb0b6ed4b24a9",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1409088: Fix destination insertion point removal algorithm. r=bz\n\nWhen an insertion point (a) is added to the document before another insertion\npoint (b), and that insertion point matches nodes that used to match (b), the\nfollowing happens in RedistributeAllNodes:\n\n * Loop through (a), and clear the existing insertion points on nodes\n   distributed into it (none, since it was just inserted).\n\n * Go through the node pool and add the matched nodes. That makes the node\n   (which already had (b) in the insertion point array) have [(b), (a)] as the\n   insertion points.\n\n * Go through (b), and clear the existing insertion points on the nodes\n   distributed to it. That used to do IndexOf() + SetLength(), but since (b) was\n   the first node by then in the insertion point array, we'll leave the\n   insertion point array empty, while (a) would still think that the node is\n   distributed to it.\n\nThis causes the bloom filter code, which loops through the flattened tree\nparents, to not insert any (because the node doesn't know about where it's\ninserted).\n\nAlso, add a debug phase to verify the flat tree before restyling that would've\ncaught this more clearly (happy to remove it if you don't think it's worth).\n\nWe still can't assert that the insertion point is properly referenced due to the\nhacky way mInsertionPoints is cleared in\nHTMLContentElement::UpdateFallbackDistribution, but we'll still clear the\ninsertion points either there, or on the rest of insertion point removal code in\nShadowRoot::DistributeAllNodes.\n\nMozReview-Commit-ID: 9k2gnsAKMEe",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1223,
"line": "#endif\n",
"lineno": 1239,
"revdate": [1508417116.0, -7200]
}, {
"node": "2011b90ddb79817efddb3ac8c9feb0b6ed4b24a9",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1409088: Fix destination insertion point removal algorithm. r=bz\n\nWhen an insertion point (a) is added to the document before another insertion\npoint (b), and that insertion point matches nodes that used to match (b), the\nfollowing happens in RedistributeAllNodes:\n\n * Loop through (a), and clear the existing insertion points on nodes\n   distributed into it (none, since it was just inserted).\n\n * Go through the node pool and add the matched nodes. That makes the node\n   (which already had (b) in the insertion point array) have [(b), (a)] as the\n   insertion points.\n\n * Go through (b), and clear the existing insertion points on the nodes\n   distributed to it. That used to do IndexOf() + SetLength(), but since (b) was\n   the first node by then in the insertion point array, we'll leave the\n   insertion point array empty, while (a) would still think that the node is\n   distributed to it.\n\nThis causes the bloom filter code, which loops through the flattened tree\nparents, to not insert any (because the node doesn't know about where it's\ninserted).\n\nAlso, add a debug phase to verify the flat tree before restyling that would've\ncaught this more clearly (happy to remove it if you don't think it's worth).\n\nWe still can't assert that the insertion point is properly referenced due to the\nhacky way mInsertionPoints is cleared in\nHTMLContentElement::UpdateFallbackDistribution, but we'll still clear the\ninsertion points either there, or on the rest of insertion point removal code in\nShadowRoot::DistributeAllNodes.\n\nMozReview-Commit-ID: 9k2gnsAKMEe",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1224,
"line": "\n",
"lineno": 1240,
"revdate": [1508417116.0, -7200]
}, {
"node": "f3ab6216d197647011cc48b90fff685cb875c983",
"author": "Cameron McCormack \u003ccam@mcc.id.au\u003e",
"desc": "Bug 1248864 - Part 2: Add skeleton ServoRestyleManager and a RestyleManagerHandle smart pointer. r=dholbert",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 53,
"line": "void\n",
"lineno": 1241,
"revdate": [1456297272.0, -39600]
}, {
"node": "096add92a79f793e2a9ed6388be1576d1ae62d57",
"author": "Boris Chiou \u003cboris.chiou@gmail.com\u003e",
"desc": "Bug 1334036 - Part 11: Trigger animation-only restyle when we handle an event with coordinates. r=birtles,heycam\n\nWe need to request an animation-only restyle to force flush all throttled\nanimations on main thread when we handle an event with coordinates\n(e.g. mouse event).\n\nMozReview-Commit-ID: KkjeQVsLgTl",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 607,
"line": "ServoRestyleManager::ProcessPendingRestyles()\n",
"lineno": 1242,
"revdate": [1495181801.0, -28800]
}, {
"node": "096add92a79f793e2a9ed6388be1576d1ae62d57",
"author": "Boris Chiou \u003cboris.chiou@gmail.com\u003e",
"desc": "Bug 1334036 - Part 11: Trigger animation-only restyle when we handle an event with coordinates. r=birtles,heycam\n\nWe need to request an animation-only restyle to force flush all throttled\nanimations on main thread when we handle an event with coordinates\n(e.g. mouse event).\n\nMozReview-Commit-ID: KkjeQVsLgTl",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 608,
"line": "{\n",
"lineno": 1243,
"revdate": [1495181801.0, -28800]
}, {
"node": "2011b90ddb79817efddb3ac8c9feb0b6ed4b24a9",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1409088: Fix destination insertion point removal algorithm. r=bz\n\nWhen an insertion point (a) is added to the document before another insertion\npoint (b), and that insertion point matches nodes that used to match (b), the\nfollowing happens in RedistributeAllNodes:\n\n * Loop through (a), and clear the existing insertion points on nodes\n   distributed into it (none, since it was just inserted).\n\n * Go through the node pool and add the matched nodes. That makes the node\n   (which already had (b) in the insertion point array) have [(b), (a)] as the\n   insertion points.\n\n * Go through (b), and clear the existing insertion points on the nodes\n   distributed to it. That used to do IndexOf() + SetLength(), but since (b) was\n   the first node by then in the insertion point array, we'll leave the\n   insertion point array empty, while (a) would still think that the node is\n   distributed to it.\n\nThis causes the bloom filter code, which loops through the flattened tree\nparents, to not insert any (because the node doesn't know about where it's\ninserted).\n\nAlso, add a debug phase to verify the flat tree before restyling that would've\ncaught this more clearly (happy to remove it if you don't think it's worth).\n\nWe still can't assert that the insertion point is properly referenced due to the\nhacky way mInsertionPoints is cleared in\nHTMLContentElement::UpdateFallbackDistribution, but we'll still clear the\ninsertion points either there, or on the rest of insertion point removal code in\nShadowRoot::DistributeAllNodes.\n\nMozReview-Commit-ID: 9k2gnsAKMEe",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1228,
"line": "#ifdef DEBUG\n",
"lineno": 1244,
"revdate": [1508417116.0, -7200]
}, {
"node": "2011b90ddb79817efddb3ac8c9feb0b6ed4b24a9",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1409088: Fix destination insertion point removal algorithm. r=bz\n\nWhen an insertion point (a) is added to the document before another insertion\npoint (b), and that insertion point matches nodes that used to match (b), the\nfollowing happens in RedistributeAllNodes:\n\n * Loop through (a), and clear the existing insertion points on nodes\n   distributed into it (none, since it was just inserted).\n\n * Go through the node pool and add the matched nodes. That makes the node\n   (which already had (b) in the insertion point array) have [(b), (a)] as the\n   insertion points.\n\n * Go through (b), and clear the existing insertion points on the nodes\n   distributed to it. That used to do IndexOf() + SetLength(), but since (b) was\n   the first node by then in the insertion point array, we'll leave the\n   insertion point array empty, while (a) would still think that the node is\n   distributed to it.\n\nThis causes the bloom filter code, which loops through the flattened tree\nparents, to not insert any (because the node doesn't know about where it's\ninserted).\n\nAlso, add a debug phase to verify the flat tree before restyling that would've\ncaught this more clearly (happy to remove it if you don't think it's worth).\n\nWe still can't assert that the insertion point is properly referenced due to the\nhacky way mInsertionPoints is cleared in\nHTMLContentElement::UpdateFallbackDistribution, but we'll still clear the\ninsertion points either there, or on the rest of insertion point removal code in\nShadowRoot::DistributeAllNodes.\n\nMozReview-Commit-ID: 9k2gnsAKMEe",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1229,
"line": "  if (auto* root = mPresContext-\u003eDocument()-\u003eGetRootElement()) {\n",
"lineno": 1245,
"revdate": [1508417116.0, -7200]
}, {
"node": "2011b90ddb79817efddb3ac8c9feb0b6ed4b24a9",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1409088: Fix destination insertion point removal algorithm. r=bz\n\nWhen an insertion point (a) is added to the document before another insertion\npoint (b), and that insertion point matches nodes that used to match (b), the\nfollowing happens in RedistributeAllNodes:\n\n * Loop through (a), and clear the existing insertion points on nodes\n   distributed into it (none, since it was just inserted).\n\n * Go through the node pool and add the matched nodes. That makes the node\n   (which already had (b) in the insertion point array) have [(b), (a)] as the\n   insertion points.\n\n * Go through (b), and clear the existing insertion points on the nodes\n   distributed to it. That used to do IndexOf() + SetLength(), but since (b) was\n   the first node by then in the insertion point array, we'll leave the\n   insertion point array empty, while (a) would still think that the node is\n   distributed to it.\n\nThis causes the bloom filter code, which loops through the flattened tree\nparents, to not insert any (because the node doesn't know about where it's\ninserted).\n\nAlso, add a debug phase to verify the flat tree before restyling that would've\ncaught this more clearly (happy to remove it if you don't think it's worth).\n\nWe still can't assert that the insertion point is properly referenced due to the\nhacky way mInsertionPoints is cleared in\nHTMLContentElement::UpdateFallbackDistribution, but we'll still clear the\ninsertion points either there, or on the rest of insertion point removal code in\nShadowRoot::DistributeAllNodes.\n\nMozReview-Commit-ID: 9k2gnsAKMEe",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1230,
"line": "    VerifyFlatTree(*root);\n",
"lineno": 1246,
"revdate": [1508417116.0, -7200]
}, {
"node": "2011b90ddb79817efddb3ac8c9feb0b6ed4b24a9",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1409088: Fix destination insertion point removal algorithm. r=bz\n\nWhen an insertion point (a) is added to the document before another insertion\npoint (b), and that insertion point matches nodes that used to match (b), the\nfollowing happens in RedistributeAllNodes:\n\n * Loop through (a), and clear the existing insertion points on nodes\n   distributed into it (none, since it was just inserted).\n\n * Go through the node pool and add the matched nodes. That makes the node\n   (which already had (b) in the insertion point array) have [(b), (a)] as the\n   insertion points.\n\n * Go through (b), and clear the existing insertion points on the nodes\n   distributed to it. That used to do IndexOf() + SetLength(), but since (b) was\n   the first node by then in the insertion point array, we'll leave the\n   insertion point array empty, while (a) would still think that the node is\n   distributed to it.\n\nThis causes the bloom filter code, which loops through the flattened tree\nparents, to not insert any (because the node doesn't know about where it's\ninserted).\n\nAlso, add a debug phase to verify the flat tree before restyling that would've\ncaught this more clearly (happy to remove it if you don't think it's worth).\n\nWe still can't assert that the insertion point is properly referenced due to the\nhacky way mInsertionPoints is cleared in\nHTMLContentElement::UpdateFallbackDistribution, but we'll still clear the\ninsertion points either there, or on the rest of insertion point removal code in\nShadowRoot::DistributeAllNodes.\n\nMozReview-Commit-ID: 9k2gnsAKMEe",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1231,
"line": "  }\n",
"lineno": 1247,
"revdate": [1508417116.0, -7200]
}, {
"node": "2011b90ddb79817efddb3ac8c9feb0b6ed4b24a9",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1409088: Fix destination insertion point removal algorithm. r=bz\n\nWhen an insertion point (a) is added to the document before another insertion\npoint (b), and that insertion point matches nodes that used to match (b), the\nfollowing happens in RedistributeAllNodes:\n\n * Loop through (a), and clear the existing insertion points on nodes\n   distributed into it (none, since it was just inserted).\n\n * Go through the node pool and add the matched nodes. That makes the node\n   (which already had (b) in the insertion point array) have [(b), (a)] as the\n   insertion points.\n\n * Go through (b), and clear the existing insertion points on the nodes\n   distributed to it. That used to do IndexOf() + SetLength(), but since (b) was\n   the first node by then in the insertion point array, we'll leave the\n   insertion point array empty, while (a) would still think that the node is\n   distributed to it.\n\nThis causes the bloom filter code, which loops through the flattened tree\nparents, to not insert any (because the node doesn't know about where it's\ninserted).\n\nAlso, add a debug phase to verify the flat tree before restyling that would've\ncaught this more clearly (happy to remove it if you don't think it's worth).\n\nWe still can't assert that the insertion point is properly referenced due to the\nhacky way mInsertionPoints is cleared in\nHTMLContentElement::UpdateFallbackDistribution, but we'll still clear the\ninsertion points either there, or on the rest of insertion point removal code in\nShadowRoot::DistributeAllNodes.\n\nMozReview-Commit-ID: 9k2gnsAKMEe",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1232,
"line": "#endif\n",
"lineno": 1248,
"revdate": [1508417116.0, -7200]
}, {
"node": "2011b90ddb79817efddb3ac8c9feb0b6ed4b24a9",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1409088: Fix destination insertion point removal algorithm. r=bz\n\nWhen an insertion point (a) is added to the document before another insertion\npoint (b), and that insertion point matches nodes that used to match (b), the\nfollowing happens in RedistributeAllNodes:\n\n * Loop through (a), and clear the existing insertion points on nodes\n   distributed into it (none, since it was just inserted).\n\n * Go through the node pool and add the matched nodes. That makes the node\n   (which already had (b) in the insertion point array) have [(b), (a)] as the\n   insertion points.\n\n * Go through (b), and clear the existing insertion points on the nodes\n   distributed to it. That used to do IndexOf() + SetLength(), but since (b) was\n   the first node by then in the insertion point array, we'll leave the\n   insertion point array empty, while (a) would still think that the node is\n   distributed to it.\n\nThis causes the bloom filter code, which loops through the flattened tree\nparents, to not insert any (because the node doesn't know about where it's\ninserted).\n\nAlso, add a debug phase to verify the flat tree before restyling that would've\ncaught this more clearly (happy to remove it if you don't think it's worth).\n\nWe still can't assert that the insertion point is properly referenced due to the\nhacky way mInsertionPoints is cleared in\nHTMLContentElement::UpdateFallbackDistribution, but we'll still clear the\ninsertion points either there, or on the rest of insertion point removal code in\nShadowRoot::DistributeAllNodes.\n\nMozReview-Commit-ID: 9k2gnsAKMEe",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1233,
"line": "\n",
"lineno": 1249,
"revdate": [1508417116.0, -7200]
}, {
"node": "81049c04c4ad1731f36e63666dc1f5ffaf98149b",
"author": "Bobby Holley \u003cbobbyholley@gmail.com\u003e",
"desc": "Bug 1384769 - Pass TraversalFlags from C++ into Rust. r=emilio\n\nMozReview-Commit-ID: EVUzgnL5coN\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 944,
"line": "  DoProcessPendingRestyles(ServoTraversalFlags::Empty);\n",
"lineno": 1250,
"revdate": [1501033537.0, 25200]
}, {
"node": "096add92a79f793e2a9ed6388be1576d1ae62d57",
"author": "Boris Chiou \u003cboris.chiou@gmail.com\u003e",
"desc": "Bug 1334036 - Part 11: Trigger animation-only restyle when we handle an event with coordinates. r=birtles,heycam\n\nWe need to request an animation-only restyle to force flush all throttled\nanimations on main thread when we handle an event with coordinates\n(e.g. mouse event).\n\nMozReview-Commit-ID: KkjeQVsLgTl",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 610,
"line": "}\n",
"lineno": 1251,
"revdate": [1495181801.0, -28800]
}, {
"node": "096add92a79f793e2a9ed6388be1576d1ae62d57",
"author": "Boris Chiou \u003cboris.chiou@gmail.com\u003e",
"desc": "Bug 1334036 - Part 11: Trigger animation-only restyle when we handle an event with coordinates. r=birtles,heycam\n\nWe need to request an animation-only restyle to force flush all throttled\nanimations on main thread when we handle an event with coordinates\n(e.g. mouse event).\n\nMozReview-Commit-ID: KkjeQVsLgTl",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 611,
"line": "\n",
"lineno": 1252,
"revdate": [1495181801.0, -28800]
}, {
"node": "096add92a79f793e2a9ed6388be1576d1ae62d57",
"author": "Boris Chiou \u003cboris.chiou@gmail.com\u003e",
"desc": "Bug 1334036 - Part 11: Trigger animation-only restyle when we handle an event with coordinates. r=birtles,heycam\n\nWe need to request an animation-only restyle to force flush all throttled\nanimations on main thread when we handle an event with coordinates\n(e.g. mouse event).\n\nMozReview-Commit-ID: KkjeQVsLgTl",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 612,
"line": "void\n",
"lineno": 1253,
"revdate": [1495181801.0, -28800]
}, {
"node": "4142a9865b9214e9ffe0e74f85722ce792095046",
"author": "Wei-Cheng Pan \u003cwpan@mozilla.com\u003e",
"desc": "Bug 1388298 - Add an API to process all invalidations on the main thread. r=emilio\n\nMozReview-Commit-ID: I7rBwvPQykR",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1107,
"line": "ServoRestyleManager::ProcessAllPendingAttributeAndStateInvalidations()\n",
"lineno": 1254,
"revdate": [1503560208.0, -28800]
}, {
"node": "4142a9865b9214e9ffe0e74f85722ce792095046",
"author": "Wei-Cheng Pan \u003cwpan@mozilla.com\u003e",
"desc": "Bug 1388298 - Add an API to process all invalidations on the main thread. r=emilio\n\nMozReview-Commit-ID: I7rBwvPQykR",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1108,
"line": "{\n",
"lineno": 1255,
"revdate": [1503560208.0, -28800]
}, {
"node": "3b0852f8a69668d7ca4e26b9c6ac789fcbabb8c6",
"author": "Wei-Cheng Pan \u003cwpan@mozilla.com\u003e",
"desc": "Bug 1363805 - Part 3: Do lazy flushing if possible. r=heycam\n\nSkips flushing current document if the target of getComputedDOMStyle cannot be\naffected by any pending restyles.\n\nMozReview-Commit-ID: C87HDIDvOth",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1199,
"line": "  if (mSnapshots.IsEmpty()) {\n",
"lineno": 1256,
"revdate": [1495512131.0, -28800]
}, {
"node": "3b0852f8a69668d7ca4e26b9c6ac789fcbabb8c6",
"author": "Wei-Cheng Pan \u003cwpan@mozilla.com\u003e",
"desc": "Bug 1363805 - Part 3: Do lazy flushing if possible. r=heycam\n\nSkips flushing current document if the target of getComputedDOMStyle cannot be\naffected by any pending restyles.\n\nMozReview-Commit-ID: C87HDIDvOth",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1200,
"line": "    return;\n",
"lineno": 1257,
"revdate": [1495512131.0, -28800]
}, {
"node": "3b0852f8a69668d7ca4e26b9c6ac789fcbabb8c6",
"author": "Wei-Cheng Pan \u003cwpan@mozilla.com\u003e",
"desc": "Bug 1363805 - Part 3: Do lazy flushing if possible. r=heycam\n\nSkips flushing current document if the target of getComputedDOMStyle cannot be\naffected by any pending restyles.\n\nMozReview-Commit-ID: C87HDIDvOth",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1201,
"line": "  }\n",
"lineno": 1258,
"revdate": [1495512131.0, -28800]
}, {
"node": "4142a9865b9214e9ffe0e74f85722ce792095046",
"author": "Wei-Cheng Pan \u003cwpan@mozilla.com\u003e",
"desc": "Bug 1388298 - Add an API to process all invalidations on the main thread. r=emilio\n\nMozReview-Commit-ID: I7rBwvPQykR",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1111,
"line": "  for (auto iter = mSnapshots.Iter(); !iter.Done(); iter.Next()) {\n",
"lineno": 1259,
"revdate": [1503560208.0, -28800]
}, {
"node": "3b0852f8a69668d7ca4e26b9c6ac789fcbabb8c6",
"author": "Wei-Cheng Pan \u003cwpan@mozilla.com\u003e",
"desc": "Bug 1363805 - Part 3: Do lazy flushing if possible. r=heycam\n\nSkips flushing current document if the target of getComputedDOMStyle cannot be\naffected by any pending restyles.\n\nMozReview-Commit-ID: C87HDIDvOth",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1203,
"line": "    // Servo data for the element might have been dropped. (e.g. by removing\n",
"lineno": 1260,
"revdate": [1495512131.0, -28800]
}, {
"node": "3b0852f8a69668d7ca4e26b9c6ac789fcbabb8c6",
"author": "Wei-Cheng Pan \u003cwpan@mozilla.com\u003e",
"desc": "Bug 1363805 - Part 3: Do lazy flushing if possible. r=heycam\n\nSkips flushing current document if the target of getComputedDOMStyle cannot be\naffected by any pending restyles.\n\nMozReview-Commit-ID: C87HDIDvOth",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1204,
"line": "    // from its document)\n",
"lineno": 1261,
"revdate": [1495512131.0, -28800]
}, {
"node": "3b0852f8a69668d7ca4e26b9c6ac789fcbabb8c6",
"author": "Wei-Cheng Pan \u003cwpan@mozilla.com\u003e",
"desc": "Bug 1363805 - Part 3: Do lazy flushing if possible. r=heycam\n\nSkips flushing current document if the target of getComputedDOMStyle cannot be\naffected by any pending restyles.\n\nMozReview-Commit-ID: C87HDIDvOth",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1205,
"line": "    if (iter.Key()-\u003eHasFlag(ELEMENT_HAS_SNAPSHOT)) {\n",
"lineno": 1262,
"revdate": [1495512131.0, -28800]
}, {
"node": "3b0852f8a69668d7ca4e26b9c6ac789fcbabb8c6",
"author": "Wei-Cheng Pan \u003cwpan@mozilla.com\u003e",
"desc": "Bug 1363805 - Part 3: Do lazy flushing if possible. r=heycam\n\nSkips flushing current document if the target of getComputedDOMStyle cannot be\naffected by any pending restyles.\n\nMozReview-Commit-ID: C87HDIDvOth",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1206,
"line": "      Servo_ProcessInvalidations(StyleSet()-\u003eRawSet(), iter.Key(), &mSnapshots);\n",
"lineno": 1263,
"revdate": [1495512131.0, -28800]
}, {
"node": "3b0852f8a69668d7ca4e26b9c6ac789fcbabb8c6",
"author": "Wei-Cheng Pan \u003cwpan@mozilla.com\u003e",
"desc": "Bug 1363805 - Part 3: Do lazy flushing if possible. r=heycam\n\nSkips flushing current document if the target of getComputedDOMStyle cannot be\naffected by any pending restyles.\n\nMozReview-Commit-ID: C87HDIDvOth",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1207,
"line": "    }\n",
"lineno": 1264,
"revdate": [1495512131.0, -28800]
}, {
"node": "4142a9865b9214e9ffe0e74f85722ce792095046",
"author": "Wei-Cheng Pan \u003cwpan@mozilla.com\u003e",
"desc": "Bug 1388298 - Add an API to process all invalidations on the main thread. r=emilio\n\nMozReview-Commit-ID: I7rBwvPQykR",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1113,
"line": "  }\n",
"lineno": 1265,
"revdate": [1503560208.0, -28800]
}, {
"node": "4142a9865b9214e9ffe0e74f85722ce792095046",
"author": "Wei-Cheng Pan \u003cwpan@mozilla.com\u003e",
"desc": "Bug 1388298 - Add an API to process all invalidations on the main thread. r=emilio\n\nMozReview-Commit-ID: I7rBwvPQykR",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1114,
"line": "  ClearSnapshots();\n",
"lineno": 1266,
"revdate": [1503560208.0, -28800]
}, {
"node": "4142a9865b9214e9ffe0e74f85722ce792095046",
"author": "Wei-Cheng Pan \u003cwpan@mozilla.com\u003e",
"desc": "Bug 1388298 - Add an API to process all invalidations on the main thread. r=emilio\n\nMozReview-Commit-ID: I7rBwvPQykR",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1115,
"line": "}\n",
"lineno": 1267,
"revdate": [1503560208.0, -28800]
}, {
"node": "4142a9865b9214e9ffe0e74f85722ce792095046",
"author": "Wei-Cheng Pan \u003cwpan@mozilla.com\u003e",
"desc": "Bug 1388298 - Add an API to process all invalidations on the main thread. r=emilio\n\nMozReview-Commit-ID: I7rBwvPQykR",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1116,
"line": "\n",
"lineno": 1268,
"revdate": [1503560208.0, -28800]
}, {
"node": "d12b61881a56d3ba674dc83aca671f35fc511b26",
"author": "Wei-Cheng Pan \u003cwpan@mozilla.com\u003e",
"desc": "Bug 1397168 - Add a function to find out if a node has any ancestor that is pending for restyling. r=emilio\n\nMozReview-Commit-ID: DXcodMcQP59",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1205,
"line": "bool\n",
"lineno": 1269,
"revdate": [1504683725.0, -28800]
}, {
"node": "d12b61881a56d3ba674dc83aca671f35fc511b26",
"author": "Wei-Cheng Pan \u003cwpan@mozilla.com\u003e",
"desc": "Bug 1397168 - Add a function to find out if a node has any ancestor that is pending for restyling. r=emilio\n\nMozReview-Commit-ID: DXcodMcQP59",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1206,
"line": "ServoRestyleManager::HasPendingRestyleAncestor(Element* aElement) const\n",
"lineno": 1270,
"revdate": [1504683725.0, -28800]
}, {
"node": "d12b61881a56d3ba674dc83aca671f35fc511b26",
"author": "Wei-Cheng Pan \u003cwpan@mozilla.com\u003e",
"desc": "Bug 1397168 - Add a function to find out if a node has any ancestor that is pending for restyling. r=emilio\n\nMozReview-Commit-ID: DXcodMcQP59",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1207,
"line": "{\n",
"lineno": 1271,
"revdate": [1504683725.0, -28800]
}, {
"node": "d12b61881a56d3ba674dc83aca671f35fc511b26",
"author": "Wei-Cheng Pan \u003cwpan@mozilla.com\u003e",
"desc": "Bug 1397168 - Add a function to find out if a node has any ancestor that is pending for restyling. r=emilio\n\nMozReview-Commit-ID: DXcodMcQP59",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1208,
"line": "  return Servo_HasPendingRestyleAncestor(aElement);\n",
"lineno": 1272,
"revdate": [1504683725.0, -28800]
}, {
"node": "d12b61881a56d3ba674dc83aca671f35fc511b26",
"author": "Wei-Cheng Pan \u003cwpan@mozilla.com\u003e",
"desc": "Bug 1397168 - Add a function to find out if a node has any ancestor that is pending for restyling. r=emilio\n\nMozReview-Commit-ID: DXcodMcQP59",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1209,
"line": "}\n",
"lineno": 1273,
"revdate": [1504683725.0, -28800]
}, {
"node": "d12b61881a56d3ba674dc83aca671f35fc511b26",
"author": "Wei-Cheng Pan \u003cwpan@mozilla.com\u003e",
"desc": "Bug 1397168 - Add a function to find out if a node has any ancestor that is pending for restyling. r=emilio\n\nMozReview-Commit-ID: DXcodMcQP59",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1210,
"line": "\n",
"lineno": 1274,
"revdate": [1504683725.0, -28800]
}, {
"node": "4142a9865b9214e9ffe0e74f85722ce792095046",
"author": "Wei-Cheng Pan \u003cwpan@mozilla.com\u003e",
"desc": "Bug 1388298 - Add an API to process all invalidations on the main thread. r=emilio\n\nMozReview-Commit-ID: I7rBwvPQykR",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1117,
"line": "void\n",
"lineno": 1275,
"revdate": [1503560208.0, -28800]
}, {
"node": "8fba8ca208f29b73161d38eb06f91ae3325fb3fb",
"author": "Sebastian Hengst \u003carchaeopteryx@coole-files.de\u003e",
"desc": "Backed out changeset 27e08c76b767 (bug 1388692) for failing mochitest layout/style/test/test_animations_styles_on_event.html on Android. r=backout",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1166,
"line": "ServoRestyleManager::UpdateOnlyAnimationStyles()\n",
"lineno": 1276,
"revdate": [1502716588.0, -7200]
}, {
"node": "096add92a79f793e2a9ed6388be1576d1ae62d57",
"author": "Boris Chiou \u003cboris.chiou@gmail.com\u003e",
"desc": "Bug 1334036 - Part 11: Trigger animation-only restyle when we handle an event with coordinates. r=birtles,heycam\n\nWe need to request an animation-only restyle to force flush all throttled\nanimations on main thread when we handle an event with coordinates\n(e.g. mouse event).\n\nMozReview-Commit-ID: KkjeQVsLgTl",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 614,
"line": "{\n",
"lineno": 1277,
"revdate": [1495181801.0, -28800]
}, {
"node": "8fba8ca208f29b73161d38eb06f91ae3325fb3fb",
"author": "Sebastian Hengst \u003carchaeopteryx@coole-files.de\u003e",
"desc": "Backed out changeset 27e08c76b767 (bug 1388692) for failing mochitest layout/style/test/test_animations_styles_on_event.html on Android. r=backout",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1169,
"line": "  bool doCSS = PresContext()-\u003eEffectCompositor()-\u003eHasPendingStyleUpdates();\n",
"lineno": 1278,
"revdate": [1502716588.0, -7200]
}, {
"node": "8fba8ca208f29b73161d38eb06f91ae3325fb3fb",
"author": "Sebastian Hengst \u003carchaeopteryx@coole-files.de\u003e",
"desc": "Backed out changeset 27e08c76b767 (bug 1388692) for failing mochitest layout/style/test/test_animations_styles_on_event.html on Android. r=backout",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1170,
"line": "  if (!doCSS) {\n",
"lineno": 1279,
"revdate": [1502716588.0, -7200]
}, {
"node": "8fba8ca208f29b73161d38eb06f91ae3325fb3fb",
"author": "Sebastian Hengst \u003carchaeopteryx@coole-files.de\u003e",
"desc": "Backed out changeset 27e08c76b767 (bug 1388692) for failing mochitest layout/style/test/test_animations_styles_on_event.html on Android. r=backout",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1171,
"line": "    return;\n",
"lineno": 1280,
"revdate": [1502716588.0, -7200]
}, {
"node": "8fba8ca208f29b73161d38eb06f91ae3325fb3fb",
"author": "Sebastian Hengst \u003carchaeopteryx@coole-files.de\u003e",
"desc": "Backed out changeset 27e08c76b767 (bug 1388692) for failing mochitest layout/style/test/test_animations_styles_on_event.html on Android. r=backout",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1172,
"line": "  }\n",
"lineno": 1281,
"revdate": [1502716588.0, -7200]
}, {
"node": "8fba8ca208f29b73161d38eb06f91ae3325fb3fb",
"author": "Sebastian Hengst \u003carchaeopteryx@coole-files.de\u003e",
"desc": "Backed out changeset 27e08c76b767 (bug 1388692) for failing mochitest layout/style/test/test_animations_styles_on_event.html on Android. r=backout",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1173,
"line": "\n",
"lineno": 1282,
"revdate": [1502716588.0, -7200]
}, {
"node": "6ad2ece5008130c8e435383196571f316a03df61",
"author": "Hiroyuki Ikezoe \u003chikezoe@mozilla.com\u003e",
"desc": "Bug 1388031 - Process normal traversal for throttled animation flush as well. r=bholley\n\nMozReview-Commit-ID: BirD8BDMifp\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1177,
"line": "  DoProcessPendingRestyles(ServoTraversalFlags::FlushThrottledAnimations);\n",
"lineno": 1283,
"revdate": [1502481275.0, 25200]
}, {
"node": "096add92a79f793e2a9ed6388be1576d1ae62d57",
"author": "Boris Chiou \u003cboris.chiou@gmail.com\u003e",
"desc": "Bug 1334036 - Part 11: Trigger animation-only restyle when we handle an event with coordinates. r=birtles,heycam\n\nWe need to request an animation-only restyle to force flush all throttled\nanimations on main thread when we handle an event with coordinates\n(e.g. mouse event).\n\nMozReview-Commit-ID: KkjeQVsLgTl",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 622,
"line": "}\n",
"lineno": 1284,
"revdate": [1495181801.0, -28800]
}, {
"node": "096add92a79f793e2a9ed6388be1576d1ae62d57",
"author": "Boris Chiou \u003cboris.chiou@gmail.com\u003e",
"desc": "Bug 1334036 - Part 11: Trigger animation-only restyle when we handle an event with coordinates. r=birtles,heycam\n\nWe need to request an animation-only restyle to force flush all throttled\nanimations on main thread when we handle an event with coordinates\n(e.g. mouse event).\n\nMozReview-Commit-ID: KkjeQVsLgTl",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 623,
"line": "\n",
"lineno": 1285,
"revdate": [1495181801.0, -28800]
}, {
"node": "096add92a79f793e2a9ed6388be1576d1ae62d57",
"author": "Boris Chiou \u003cboris.chiou@gmail.com\u003e",
"desc": "Bug 1334036 - Part 11: Trigger animation-only restyle when we handle an event with coordinates. r=birtles,heycam\n\nWe need to request an animation-only restyle to force flush all throttled\nanimations on main thread when we handle an event with coordinates\n(e.g. mouse event).\n\nMozReview-Commit-ID: KkjeQVsLgTl",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 624,
"line": "void\n",
"lineno": 1286,
"revdate": [1495181801.0, -28800]
}, {
"node": "f3ab6216d197647011cc48b90fff685cb875c983",
"author": "Cameron McCormack \u003ccam@mcc.id.au\u003e",
"desc": "Bug 1248864 - Part 2: Add skeleton ServoRestyleManager and a RestyleManagerHandle smart pointer. r=dholbert",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 76,
"line": "ServoRestyleManager::ContentStateChanged(nsIContent* aContent,\n",
"lineno": 1287,
"revdate": [1456297272.0, -39600]
}, {
"node": "5daa5c05033142561e0377f4b16b212fbbe8f811",
"author": "Emilio Cobos \u00c1lvarez \u003cecoal95@gmail.com\u003e",
"desc": "Bug 1287951: stylo: Add support for computing style hints from Servo. r=heycam\n\nMozReview-Commit-ID: ALuJxcfAMuL\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 252,
"line": "                                         EventStates aChangedBits)\n",
"lineno": 1288,
"revdate": [1468890175.0, 25200]
}, {
"node": "f3ab6216d197647011cc48b90fff685cb875c983",
"author": "Cameron McCormack \u003ccam@mcc.id.au\u003e",
"desc": "Bug 1248864 - Part 2: Add skeleton ServoRestyleManager and a RestyleManagerHandle smart pointer. r=dholbert",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 78,
"line": "{\n",
"lineno": 1289,
"revdate": [1456297272.0, -39600]
}, {
"node": "2150351429b5c9515589facd9f2aefb1e4640842",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1355343: Take all the snapshots into account. r=bholley\n\nI've chosen this approach mainly because there's no other good way to guarantee\nthe model is correct than holding the snapshots alive until a style refresh.\n\nWhat I tried before this (storing them in a sort of \"immutable element data\") is\na pain, since we call into style from the frame constructor and other content\nnotifications, which makes keeping track of which snapshots should be cleared an\nwhich shouldn't an insane task.\n\nIdeally we'd have a single entry-point for style, but that's not the case right\nnow, and changing that requires pretty non-trivial changes to the frame\nconstructor.\n\nMozReview-Commit-ID: FF1KWZv2iBM",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 555,
"line": "  MOZ_ASSERT(!mInStyleRefresh);\n",
"lineno": 1290,
"revdate": [1494167807.0, -7200]
}, {
"node": "2150351429b5c9515589facd9f2aefb1e4640842",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1355343: Take all the snapshots into account. r=bholley\n\nI've chosen this approach mainly because there's no other good way to guarantee\nthe model is correct than holding the snapshots alive until a style refresh.\n\nWhat I tried before this (storing them in a sort of \"immutable element data\") is\na pain, since we call into style from the frame constructor and other content\nnotifications, which makes keeping track of which snapshots should be cleared an\nwhich shouldn't an insane task.\n\nIdeally we'd have a single entry-point for style, but that's not the case right\nnow, and changing that requires pretty non-trivial changes to the frame\nconstructor.\n\nMozReview-Commit-ID: FF1KWZv2iBM",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 556,
"line": "\n",
"lineno": 1291,
"revdate": [1494167807.0, -7200]
}, {
"node": "769a86b5787dfd7d2bbd10584a54979320c260d9",
"author": "Emilio Cobos \u00c1lvarez \u003cecoal95@gmail.com\u003e",
"desc": "Bug 1285474: Add mozilla::RestyleManagerBase to share logic between RestyleManager and ServoRestyleManager. r=bholley\n\nPartially implement some restyling APIs to take rid of some gecko-only code\npaths.\n\nMozReview-Commit-ID: L5i6Kr2Qars\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 105,
"line": "  if (!aContent-\u003eIsElement()) {\n",
"lineno": 1292,
"revdate": [1467961726.0, 25200]
}, {
"node": "9b7c568cd42ff8d927d948ffe505c93afb6d5244",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1296516: Tidy RestyleManager::ContentStateChanged. r=heycam\n\nMozReview-Commit-ID: 7iWc6JvljhT\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 470,
"line": "    return;\n",
"lineno": 1293,
"revdate": [1489921250.0, -3600]
}, {
"node": "769a86b5787dfd7d2bbd10584a54979320c260d9",
"author": "Emilio Cobos \u00c1lvarez \u003cecoal95@gmail.com\u003e",
"desc": "Bug 1285474: Add mozilla::RestyleManagerBase to share logic between RestyleManager and ServoRestyleManager. r=bholley\n\nPartially implement some restyling APIs to take rid of some gecko-only code\npaths.\n\nMozReview-Commit-ID: L5i6Kr2Qars\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 107,
"line": "  }\n",
"lineno": 1294,
"revdate": [1467961726.0, 25200]
}, {
"node": "769a86b5787dfd7d2bbd10584a54979320c260d9",
"author": "Emilio Cobos \u00c1lvarez \u003cecoal95@gmail.com\u003e",
"desc": "Bug 1285474: Add mozilla::RestyleManagerBase to share logic between RestyleManager and ServoRestyleManager. r=bholley\n\nPartially implement some restyling APIs to take rid of some gecko-only code\npaths.\n\nMozReview-Commit-ID: L5i6Kr2Qars\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 108,
"line": "\n",
"lineno": 1295,
"revdate": [1467961726.0, 25200]
}, {
"node": "769a86b5787dfd7d2bbd10584a54979320c260d9",
"author": "Emilio Cobos \u00c1lvarez \u003cecoal95@gmail.com\u003e",
"desc": "Bug 1285474: Add mozilla::RestyleManagerBase to share logic between RestyleManager and ServoRestyleManager. r=bholley\n\nPartially implement some restyling APIs to take rid of some gecko-only code\npaths.\n\nMozReview-Commit-ID: L5i6Kr2Qars\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 109,
"line": "  Element* aElement = aContent-\u003eAsElement();\n",
"lineno": 1296,
"revdate": [1467961726.0, 25200]
}, {
"node": "2150351429b5c9515589facd9f2aefb1e4640842",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1355343: Take all the snapshots into account. r=bholley\n\nI've chosen this approach mainly because there's no other good way to guarantee\nthe model is correct than holding the snapshots alive until a style refresh.\n\nWhat I tried before this (storing them in a sort of \"immutable element data\") is\na pain, since we call into style from the frame constructor and other content\nnotifications, which makes keeping track of which snapshots should be cleared an\nwhich shouldn't an insane task.\n\nIdeally we'd have a single entry-point for style, but that's not the case right\nnow, and changing that requires pretty non-trivial changes to the frame\nconstructor.\n\nMozReview-Commit-ID: FF1KWZv2iBM",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 565,
"line": "  if (!aElement-\u003eHasServoData()) {\n",
"lineno": 1297,
"revdate": [1494167807.0, -7200]
}, {
"node": "2150351429b5c9515589facd9f2aefb1e4640842",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1355343: Take all the snapshots into account. r=bholley\n\nI've chosen this approach mainly because there's no other good way to guarantee\nthe model is correct than holding the snapshots alive until a style refresh.\n\nWhat I tried before this (storing them in a sort of \"immutable element data\") is\na pain, since we call into style from the frame constructor and other content\nnotifications, which makes keeping track of which snapshots should be cleared an\nwhich shouldn't an insane task.\n\nIdeally we'd have a single entry-point for style, but that's not the case right\nnow, and changing that requires pretty non-trivial changes to the frame\nconstructor.\n\nMozReview-Commit-ID: FF1KWZv2iBM",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 566,
"line": "    return;\n",
"lineno": 1298,
"revdate": [1494167807.0, -7200]
}, {
"node": "2150351429b5c9515589facd9f2aefb1e4640842",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1355343: Take all the snapshots into account. r=bholley\n\nI've chosen this approach mainly because there's no other good way to guarantee\nthe model is correct than holding the snapshots alive until a style refresh.\n\nWhat I tried before this (storing them in a sort of \"immutable element data\") is\na pain, since we call into style from the frame constructor and other content\nnotifications, which makes keeping track of which snapshots should be cleared an\nwhich shouldn't an insane task.\n\nIdeally we'd have a single entry-point for style, but that's not the case right\nnow, and changing that requires pretty non-trivial changes to the frame\nconstructor.\n\nMozReview-Commit-ID: FF1KWZv2iBM",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 567,
"line": "  }\n",
"lineno": 1299,
"revdate": [1494167807.0, -7200]
}, {
"node": "2150351429b5c9515589facd9f2aefb1e4640842",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1355343: Take all the snapshots into account. r=bholley\n\nI've chosen this approach mainly because there's no other good way to guarantee\nthe model is correct than holding the snapshots alive until a style refresh.\n\nWhat I tried before this (storing them in a sort of \"immutable element data\") is\na pain, since we call into style from the frame constructor and other content\nnotifications, which makes keeping track of which snapshots should be cleared an\nwhich shouldn't an insane task.\n\nIdeally we'd have a single entry-point for style, but that's not the case right\nnow, and changing that requires pretty non-trivial changes to the frame\nconstructor.\n\nMozReview-Commit-ID: FF1KWZv2iBM",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 568,
"line": "\n",
"lineno": 1300,
"revdate": [1494167807.0, -7200]
}, {
"node": "194d51097e24aae71fbb688f5e62d79d5ebeac96",
"author": "Brad Werth \u003cbwerth@mozilla.com\u003e",
"desc": "Bug 1385789: Refactor RestyleManager::ContentStateChangedInternal to move nsRestyleHint calculation out to GeckoRestyleManager. r=bholley\n\nMozReview-Commit-ID: 7GXkPcjfYe6",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1228,
"line": "  nsChangeHint changeHint;\n",
"lineno": 1301,
"revdate": [1504047050.0, 25200]
}, {
"node": "194d51097e24aae71fbb688f5e62d79d5ebeac96",
"author": "Brad Werth \u003cbwerth@mozilla.com\u003e",
"desc": "Bug 1385789: Refactor RestyleManager::ContentStateChangedInternal to move nsRestyleHint calculation out to GeckoRestyleManager. r=bholley\n\nMozReview-Commit-ID: 7GXkPcjfYe6",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1229,
"line": "  ContentStateChangedInternal(aElement, aChangedBits, &changeHint);\n",
"lineno": 1302,
"revdate": [1504047050.0, 25200]
}, {
"node": "5daa5c05033142561e0377f4b16b212fbbe8f811",
"author": "Emilio Cobos \u00c1lvarez \u003cecoal95@gmail.com\u003e",
"desc": "Bug 1287951: stylo: Add support for computing style hints from Servo. r=heycam\n\nMozReview-Commit-ID: ALuJxcfAMuL\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 283,
"line": "\n",
"lineno": 1303,
"revdate": [1468890175.0, 25200]
}, {
"node": "064975f358bc7efe7a6da2fcb1583e0ba1f65698",
"author": "Cameron McCormack \u003ccam@mcc.id.au\u003e",
"desc": "Bug 1352306 - Part 2: stylo: Only snapshot EventStates if there is some rule that depends on it. r=emilio\n\nMozReview-Commit-ID: J5xhdi7pGSv",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 785,
"line": "  // Don't bother taking a snapshot if no rules depend on these state bits.\n",
"lineno": 1304,
"revdate": [1494324825.0, -28800]
}, {
"node": "064975f358bc7efe7a6da2fcb1583e0ba1f65698",
"author": "Cameron McCormack \u003ccam@mcc.id.au\u003e",
"desc": "Bug 1352306 - Part 2: stylo: Only snapshot EventStates if there is some rule that depends on it. r=emilio\n\nMozReview-Commit-ID: J5xhdi7pGSv",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 786,
"line": "  //\n",
"lineno": 1305,
"revdate": [1494324825.0, -28800]
}, {
"node": "064975f358bc7efe7a6da2fcb1583e0ba1f65698",
"author": "Cameron McCormack \u003ccam@mcc.id.au\u003e",
"desc": "Bug 1352306 - Part 2: stylo: Only snapshot EventStates if there is some rule that depends on it. r=emilio\n\nMozReview-Commit-ID: J5xhdi7pGSv",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 787,
"line": "  // We always take a snapshot for the LTR/RTL event states, since Servo doesn't\n",
"lineno": 1306,
"revdate": [1494324825.0, -28800]
}, {
"node": "064975f358bc7efe7a6da2fcb1583e0ba1f65698",
"author": "Cameron McCormack \u003ccam@mcc.id.au\u003e",
"desc": "Bug 1352306 - Part 2: stylo: Only snapshot EventStates if there is some rule that depends on it. r=emilio\n\nMozReview-Commit-ID: J5xhdi7pGSv",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 788,
"line": "  // track those bits in the same way, and we know that :dir() rules are always\n",
"lineno": 1307,
"revdate": [1494324825.0, -28800]
}, {
"node": "064975f358bc7efe7a6da2fcb1583e0ba1f65698",
"author": "Cameron McCormack \u003ccam@mcc.id.au\u003e",
"desc": "Bug 1352306 - Part 2: stylo: Only snapshot EventStates if there is some rule that depends on it. r=emilio\n\nMozReview-Commit-ID: J5xhdi7pGSv",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 789,
"line": "  // present in UA style sheets.\n",
"lineno": 1308,
"revdate": [1494324825.0, -28800]
}, {
"node": "064975f358bc7efe7a6da2fcb1583e0ba1f65698",
"author": "Cameron McCormack \u003ccam@mcc.id.au\u003e",
"desc": "Bug 1352306 - Part 2: stylo: Only snapshot EventStates if there is some rule that depends on it. r=emilio\n\nMozReview-Commit-ID: J5xhdi7pGSv",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 790,
"line": "  if (!aChangedBits.HasAtLeastOneOfStates(DIRECTION_STATES) &&\n",
"lineno": 1309,
"revdate": [1494324825.0, -28800]
}, {
"node": "d39cf29c7a5cd24cb9babe6abc22c1e0d9bd61c3",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1375969: Fix MightHave{State,Attribute}Dependency for XBL. r=heycam\n\nMozReview-Commit-ID: 8I29pMHq4uf\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 939,
"line": "      !StyleSet()-\u003eHasStateDependency(*aElement, aChangedBits)) {\n",
"lineno": 1310,
"revdate": [1498627082.0, 25200]
}, {
"node": "064975f358bc7efe7a6da2fcb1583e0ba1f65698",
"author": "Cameron McCormack \u003ccam@mcc.id.au\u003e",
"desc": "Bug 1352306 - Part 2: stylo: Only snapshot EventStates if there is some rule that depends on it. r=emilio\n\nMozReview-Commit-ID: J5xhdi7pGSv",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 792,
"line": "    return;\n",
"lineno": 1311,
"revdate": [1494324825.0, -28800]
}, {
"node": "064975f358bc7efe7a6da2fcb1583e0ba1f65698",
"author": "Cameron McCormack \u003ccam@mcc.id.au\u003e",
"desc": "Bug 1352306 - Part 2: stylo: Only snapshot EventStates if there is some rule that depends on it. r=emilio\n\nMozReview-Commit-ID: J5xhdi7pGSv",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 793,
"line": "  }\n",
"lineno": 1312,
"revdate": [1494324825.0, -28800]
}, {
"node": "064975f358bc7efe7a6da2fcb1583e0ba1f65698",
"author": "Cameron McCormack \u003ccam@mcc.id.au\u003e",
"desc": "Bug 1352306 - Part 2: stylo: Only snapshot EventStates if there is some rule that depends on it. r=emilio\n\nMozReview-Commit-ID: J5xhdi7pGSv",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 794,
"line": "\n",
"lineno": 1313,
"revdate": [1494324825.0, -28800]
}, {
"node": "2150351429b5c9515589facd9f2aefb1e4640842",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1355343: Take all the snapshots into account. r=bholley\n\nI've chosen this approach mainly because there's no other good way to guarantee\nthe model is correct than holding the snapshots alive until a style refresh.\n\nWhat I tried before this (storing them in a sort of \"immutable element data\") is\na pain, since we call into style from the frame constructor and other content\nnotifications, which makes keeping track of which snapshots should be cleared an\nwhich shouldn't an insane task.\n\nIdeally we'd have a single entry-point for style, but that's not the case right\nnow, and changing that requires pretty non-trivial changes to the frame\nconstructor.\n\nMozReview-Commit-ID: FF1KWZv2iBM",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 591,
"line": "  ServoElementSnapshot& snapshot = SnapshotFor(aElement);\n",
"lineno": 1314,
"revdate": [1494167807.0, -7200]
}, {
"node": "5daa5c05033142561e0377f4b16b212fbbe8f811",
"author": "Emilio Cobos \u00c1lvarez \u003cecoal95@gmail.com\u003e",
"desc": "Bug 1287951: stylo: Add support for computing style hints from Servo. r=heycam\n\nMozReview-Commit-ID: ALuJxcfAMuL\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 284,
"line": "  EventStates previousState = aElement-\u003eStyleState() ^ aChangedBits;\n",
"lineno": 1315,
"revdate": [1468890175.0, 25200]
}, {
"node": "2150351429b5c9515589facd9f2aefb1e4640842",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1355343: Take all the snapshots into account. r=bholley\n\nI've chosen this approach mainly because there's no other good way to guarantee\nthe model is correct than holding the snapshots alive until a style refresh.\n\nWhat I tried before this (storing them in a sort of \"immutable element data\") is\na pain, since we call into style from the frame constructor and other content\nnotifications, which makes keeping track of which snapshots should be cleared an\nwhich shouldn't an insane task.\n\nIdeally we'd have a single entry-point for style, but that's not the case right\nnow, and changing that requires pretty non-trivial changes to the frame\nconstructor.\n\nMozReview-Commit-ID: FF1KWZv2iBM",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 593,
"line": "  snapshot.AddState(previousState);\n",
"lineno": 1316,
"revdate": [1494167807.0, -7200]
}, {
"node": "2150351429b5c9515589facd9f2aefb1e4640842",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1355343: Take all the snapshots into account. r=bholley\n\nI've chosen this approach mainly because there's no other good way to guarantee\nthe model is correct than holding the snapshots alive until a style refresh.\n\nWhat I tried before this (storing them in a sort of \"immutable element data\") is\na pain, since we call into style from the frame constructor and other content\nnotifications, which makes keeping track of which snapshots should be cleared an\nwhich shouldn't an insane task.\n\nIdeally we'd have a single entry-point for style, but that's not the case right\nnow, and changing that requires pretty non-trivial changes to the frame\nconstructor.\n\nMozReview-Commit-ID: FF1KWZv2iBM",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 594,
"line": "\n",
"lineno": 1317,
"revdate": [1494167807.0, -7200]
}, {
"node": "194d51097e24aae71fbb688f5e62d79d5ebeac96",
"author": "Brad Werth \u003cbwerth@mozilla.com\u003e",
"desc": "Bug 1385789: Refactor RestyleManager::ContentStateChangedInternal to move nsRestyleHint calculation out to GeckoRestyleManager. r=bholley\n\nMozReview-Commit-ID: 7GXkPcjfYe6",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1245,
"line": "  if (changeHint) {\n",
"lineno": 1318,
"revdate": [1504047050.0, 25200]
}, {
"node": "194d51097e24aae71fbb688f5e62d79d5ebeac96",
"author": "Brad Werth \u003cbwerth@mozilla.com\u003e",
"desc": "Bug 1385789: Refactor RestyleManager::ContentStateChangedInternal to move nsRestyleHint calculation out to GeckoRestyleManager. r=bholley\n\nMozReview-Commit-ID: 7GXkPcjfYe6",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1246,
"line": "    Servo_NoteExplicitHints(aElement, nsRestyleHint(0), changeHint);\n",
"lineno": 1319,
"revdate": [1504047050.0, 25200]
}, {
"node": "ac434d1aa45d689cd6548426012b0385b269296a",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1378190: Try to make ServoRestyleManager easier to follow. r=heycam\n\nMozReview-Commit-ID: B9bw23n2jUe",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 967,
"line": "  }\n",
"lineno": 1320,
"revdate": [1499188564.0, -7200]
}, {
"node": "b46807aa128f157b740142528e1e6eb5cf436f50",
"author": "Wei-Cheng Pan \u003cwpan@mozilla.com\u003e",
"desc": "Bug 1366964 - Update style context generation after style resolved. r=heycam\n\nAdds another restyle generation which represents the dirty state of raw\nstyle changes, so that getComputedStyle() wont be confused by optimizations\nmade by style engines.\n\nMozReview-Commit-ID: 7RYeNCzFygO",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 951,
"line": "\n",
"lineno": 1321,
"revdate": [1495520027.0, -28800]
}, {
"node": "b46807aa128f157b740142528e1e6eb5cf436f50",
"author": "Wei-Cheng Pan \u003cwpan@mozilla.com\u003e",
"desc": "Bug 1366964 - Update style context generation after style resolved. r=heycam\n\nAdds another restyle generation which represents the dirty state of raw\nstyle changes, so that getComputedStyle() wont be confused by optimizations\nmade by style engines.\n\nMozReview-Commit-ID: 7RYeNCzFygO",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 952,
"line": "  // Assuming we need to invalidate cached style in getComputedStyle for\n",
"lineno": 1322,
"revdate": [1495520027.0, -28800]
}, {
"node": "b46807aa128f157b740142528e1e6eb5cf436f50",
"author": "Wei-Cheng Pan \u003cwpan@mozilla.com\u003e",
"desc": "Bug 1366964 - Update style context generation after style resolved. r=heycam\n\nAdds another restyle generation which represents the dirty state of raw\nstyle changes, so that getComputedStyle() wont be confused by optimizations\nmade by style engines.\n\nMozReview-Commit-ID: 7RYeNCzFygO",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 953,
"line": "  // undisplayed elements, since we don't know if it is needed.\n",
"lineno": 1323,
"revdate": [1495520027.0, -28800]
}, {
"node": "b46807aa128f157b740142528e1e6eb5cf436f50",
"author": "Wei-Cheng Pan \u003cwpan@mozilla.com\u003e",
"desc": "Bug 1366964 - Update style context generation after style resolved. r=heycam\n\nAdds another restyle generation which represents the dirty state of raw\nstyle changes, so that getComputedStyle() wont be confused by optimizations\nmade by style engines.\n\nMozReview-Commit-ID: 7RYeNCzFygO",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 954,
"line": "  IncrementUndisplayedRestyleGeneration();\n",
"lineno": 1324,
"revdate": [1495520027.0, -28800]
}, {
"node": "ac434d1aa45d689cd6548426012b0385b269296a",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1378190: Try to make ServoRestyleManager easier to follow. r=heycam\n\nMozReview-Commit-ID: B9bw23n2jUe",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 968,
"line": "}\n",
"lineno": 1325,
"revdate": [1499188564.0, -7200]
}, {
"node": "ac434d1aa45d689cd6548426012b0385b269296a",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1378190: Try to make ServoRestyleManager easier to follow. r=heycam\n\nMozReview-Commit-ID: B9bw23n2jUe",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 969,
"line": "\n",
"lineno": 1326,
"revdate": [1499188564.0, -7200]
}, {
"node": "ac434d1aa45d689cd6548426012b0385b269296a",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1378190: Try to make ServoRestyleManager easier to follow. r=heycam\n\nMozReview-Commit-ID: B9bw23n2jUe",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 970,
"line": "static inline bool\n",
"lineno": 1327,
"revdate": [1499188564.0, -7200]
}, {
"node": "ac434d1aa45d689cd6548426012b0385b269296a",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1378190: Try to make ServoRestyleManager easier to follow. r=heycam\n\nMozReview-Commit-ID: B9bw23n2jUe",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 971,
"line": "AttributeInfluencesOtherPseudoClassState(const Element& aElement,\n",
"lineno": 1328,
"revdate": [1499188564.0, -7200]
}, {
"node": "67a8e12324569dd730347187e2ffccae486c758b",
"author": "Nicholas Nethercote \u003cnnethercote@mozilla.com\u003e",
"desc": "Bug 1400460 - Rename nsIAtom as nsAtom. r=hiro.\n\n(Path is actually r=froydnj.)\n\nBug 1400459 devirtualized nsIAtom so that it is no longer a subclass of\nnsISupports. This means that nsAtom is now a better name for it than nsIAtom.\n\nMozReview-Commit-ID: 91U22X2NydP",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1289,
"line": "                                         const nsAtom* aAttribute)\n",
"lineno": 1329,
"revdate": [1506981919.0, -39600]
}, {
"node": "ac434d1aa45d689cd6548426012b0385b269296a",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1378190: Try to make ServoRestyleManager easier to follow. r=heycam\n\nMozReview-Commit-ID: B9bw23n2jUe",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 973,
"line": "{\n",
"lineno": 1330,
"revdate": [1499188564.0, -7200]
}, {
"node": "ac434d1aa45d689cd6548426012b0385b269296a",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1378190: Try to make ServoRestyleManager easier to follow. r=heycam\n\nMozReview-Commit-ID: B9bw23n2jUe",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 974,
"line": "  // We must record some state for :-moz-browser-frame and\n",
"lineno": 1331,
"revdate": [1499188564.0, -7200]
}, {
"node": "ac434d1aa45d689cd6548426012b0385b269296a",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1378190: Try to make ServoRestyleManager easier to follow. r=heycam\n\nMozReview-Commit-ID: B9bw23n2jUe",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 975,
"line": "  // :-moz-table-border-nonzero.\n",
"lineno": 1332,
"revdate": [1499188564.0, -7200]
}, {
"node": "ac434d1aa45d689cd6548426012b0385b269296a",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1378190: Try to make ServoRestyleManager easier to follow. r=heycam\n\nMozReview-Commit-ID: B9bw23n2jUe",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 976,
"line": "  if (aAttribute == nsGkAtoms::mozbrowser) {\n",
"lineno": 1333,
"revdate": [1499188564.0, -7200]
}, {
"node": "ac434d1aa45d689cd6548426012b0385b269296a",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1378190: Try to make ServoRestyleManager easier to follow. r=heycam\n\nMozReview-Commit-ID: B9bw23n2jUe",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 977,
"line": "    return aElement.IsAnyOfHTMLElements(nsGkAtoms::iframe, nsGkAtoms::frame);\n",
"lineno": 1334,
"revdate": [1499188564.0, -7200]
}, {
"node": "ac434d1aa45d689cd6548426012b0385b269296a",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1378190: Try to make ServoRestyleManager easier to follow. r=heycam\n\nMozReview-Commit-ID: B9bw23n2jUe",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 978,
"line": "  }\n",
"lineno": 1335,
"revdate": [1499188564.0, -7200]
}, {
"node": "ac434d1aa45d689cd6548426012b0385b269296a",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1378190: Try to make ServoRestyleManager easier to follow. r=heycam\n\nMozReview-Commit-ID: B9bw23n2jUe",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 979,
"line": "\n",
"lineno": 1336,
"revdate": [1499188564.0, -7200]
}, {
"node": "ac434d1aa45d689cd6548426012b0385b269296a",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1378190: Try to make ServoRestyleManager easier to follow. r=heycam\n\nMozReview-Commit-ID: B9bw23n2jUe",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 980,
"line": "  if (aAttribute == nsGkAtoms::border) {\n",
"lineno": 1337,
"revdate": [1499188564.0, -7200]
}, {
"node": "ac434d1aa45d689cd6548426012b0385b269296a",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1378190: Try to make ServoRestyleManager easier to follow. r=heycam\n\nMozReview-Commit-ID: B9bw23n2jUe",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 981,
"line": "    return aElement.IsHTMLElement(nsGkAtoms::table);\n",
"lineno": 1338,
"revdate": [1499188564.0, -7200]
}, {
"node": "ac434d1aa45d689cd6548426012b0385b269296a",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1378190: Try to make ServoRestyleManager easier to follow. r=heycam\n\nMozReview-Commit-ID: B9bw23n2jUe",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 982,
"line": "  }\n",
"lineno": 1339,
"revdate": [1499188564.0, -7200]
}, {
"node": "ac434d1aa45d689cd6548426012b0385b269296a",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1378190: Try to make ServoRestyleManager easier to follow. r=heycam\n\nMozReview-Commit-ID: B9bw23n2jUe",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 983,
"line": "\n",
"lineno": 1340,
"revdate": [1499188564.0, -7200]
}, {
"node": "ac434d1aa45d689cd6548426012b0385b269296a",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1378190: Try to make ServoRestyleManager easier to follow. r=heycam\n\nMozReview-Commit-ID: B9bw23n2jUe",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 984,
"line": "  return false;\n",
"lineno": 1341,
"revdate": [1499188564.0, -7200]
}, {
"node": "f3ab6216d197647011cc48b90fff685cb875c983",
"author": "Cameron McCormack \u003ccam@mcc.id.au\u003e",
"desc": "Bug 1248864 - Part 2: Add skeleton ServoRestyleManager and a RestyleManagerHandle smart pointer. r=dholbert",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 80,
"line": "}\n",
"lineno": 1342,
"revdate": [1456297272.0, -39600]
}, {
"node": "f3ab6216d197647011cc48b90fff685cb875c983",
"author": "Cameron McCormack \u003ccam@mcc.id.au\u003e",
"desc": "Bug 1248864 - Part 2: Add skeleton ServoRestyleManager and a RestyleManagerHandle smart pointer. r=dholbert",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 81,
"line": "\n",
"lineno": 1343,
"revdate": [1456297272.0, -39600]
}, {
"node": "ce1f1e2027ef040d0ae0f7540392d453f6515f95",
"author": "Cameron McCormack \u003ccam@mcc.id.au\u003e",
"desc": "Bug 1365159 - Part 1: Record :-moz-browser-frame and :-moz-table-border-nonzero state on snapshots. r=emilio\n\nMozReview-Commit-ID: BEglHnXhpYJ",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 754,
"line": "static inline bool\n",
"lineno": 1344,
"revdate": [1496643570.0, -28800]
}, {
"node": "ac434d1aa45d689cd6548426012b0385b269296a",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1378190: Try to make ServoRestyleManager easier to follow. r=heycam\n\nMozReview-Commit-ID: B9bw23n2jUe",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 988,
"line": "NeedToRecordAttrChange(const ServoStyleSet& aStyleSet,\n",
"lineno": 1345,
"revdate": [1499188564.0, -7200]
}, {
"node": "ac434d1aa45d689cd6548426012b0385b269296a",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1378190: Try to make ServoRestyleManager easier to follow. r=heycam\n\nMozReview-Commit-ID: B9bw23n2jUe",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 989,
"line": "                       const Element& aElement,\n",
"lineno": 1346,
"revdate": [1499188564.0, -7200]
}, {
"node": "ac434d1aa45d689cd6548426012b0385b269296a",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1378190: Try to make ServoRestyleManager easier to follow. r=heycam\n\nMozReview-Commit-ID: B9bw23n2jUe",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 990,
"line": "                       int32_t aNameSpaceID,\n",
"lineno": 1347,
"revdate": [1499188564.0, -7200]
}, {
"node": "67a8e12324569dd730347187e2ffccae486c758b",
"author": "Nicholas Nethercote \u003cnnethercote@mozilla.com\u003e",
"desc": "Bug 1400460 - Rename nsIAtom as nsAtom. r=hiro.\n\n(Path is actually r=froydnj.)\n\nBug 1400459 devirtualized nsIAtom so that it is no longer a subclass of\nnsISupports. This means that nsAtom is now a better name for it than nsIAtom.\n\nMozReview-Commit-ID: 91U22X2NydP",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1308,
"line": "                       nsAtom* aAttribute,\n",
"lineno": 1348,
"revdate": [1506981919.0, -39600]
}, {
"node": "ac434d1aa45d689cd6548426012b0385b269296a",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1378190: Try to make ServoRestyleManager easier to follow. r=heycam\n\nMozReview-Commit-ID: B9bw23n2jUe",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 992,
"line": "                       bool* aInfluencesOtherPseudoClassState)\n",
"lineno": 1349,
"revdate": [1499188564.0, -7200]
}, {
"node": "ce1f1e2027ef040d0ae0f7540392d453f6515f95",
"author": "Cameron McCormack \u003ccam@mcc.id.au\u003e",
"desc": "Bug 1365159 - Part 1: Record :-moz-browser-frame and :-moz-table-border-nonzero state on snapshots. r=emilio\n\nMozReview-Commit-ID: BEglHnXhpYJ",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 756,
"line": "{\n",
"lineno": 1350,
"revdate": [1496643570.0, -28800]
}, {
"node": "ac434d1aa45d689cd6548426012b0385b269296a",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1378190: Try to make ServoRestyleManager easier to follow. r=heycam\n\nMozReview-Commit-ID: B9bw23n2jUe",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 994,
"line": "  *aInfluencesOtherPseudoClassState =\n",
"lineno": 1351,
"revdate": [1499188564.0, -7200]
}, {
"node": "ac434d1aa45d689cd6548426012b0385b269296a",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1378190: Try to make ServoRestyleManager easier to follow. r=heycam\n\nMozReview-Commit-ID: B9bw23n2jUe",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 995,
"line": "    AttributeInfluencesOtherPseudoClassState(aElement, aAttribute);\n",
"lineno": 1352,
"revdate": [1499188564.0, -7200]
}, {
"node": "ac434d1aa45d689cd6548426012b0385b269296a",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1378190: Try to make ServoRestyleManager easier to follow. r=heycam\n\nMozReview-Commit-ID: B9bw23n2jUe",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 996,
"line": "\n",
"lineno": 1353,
"revdate": [1499188564.0, -7200]
}, {
"node": "ac434d1aa45d689cd6548426012b0385b269296a",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1378190: Try to make ServoRestyleManager easier to follow. r=heycam\n\nMozReview-Commit-ID: B9bw23n2jUe",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 997,
"line": "  // If the attribute influences one of the pseudo-classes that are backed by\n",
"lineno": 1354,
"revdate": [1499188564.0, -7200]
}, {
"node": "ac434d1aa45d689cd6548426012b0385b269296a",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1378190: Try to make ServoRestyleManager easier to follow. r=heycam\n\nMozReview-Commit-ID: B9bw23n2jUe",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 998,
"line": "  // attributes, we just record it.\n",
"lineno": 1355,
"revdate": [1499188564.0, -7200]
}, {
"node": "ac434d1aa45d689cd6548426012b0385b269296a",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1378190: Try to make ServoRestyleManager easier to follow. r=heycam\n\nMozReview-Commit-ID: B9bw23n2jUe",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 999,
"line": "  if (*aInfluencesOtherPseudoClassState) {\n",
"lineno": 1356,
"revdate": [1499188564.0, -7200]
}, {
"node": "ac434d1aa45d689cd6548426012b0385b269296a",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1378190: Try to make ServoRestyleManager easier to follow. r=heycam\n\nMozReview-Commit-ID: B9bw23n2jUe",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1000,
"line": "    return true;\n",
"lineno": 1357,
"revdate": [1499188564.0, -7200]
}, {
"node": "ac434d1aa45d689cd6548426012b0385b269296a",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1378190: Try to make ServoRestyleManager easier to follow. r=heycam\n\nMozReview-Commit-ID: B9bw23n2jUe",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1001,
"line": "  }\n",
"lineno": 1358,
"revdate": [1499188564.0, -7200]
}, {
"node": "ac434d1aa45d689cd6548426012b0385b269296a",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1378190: Try to make ServoRestyleManager easier to follow. r=heycam\n\nMozReview-Commit-ID: B9bw23n2jUe",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1002,
"line": "\n",
"lineno": 1359,
"revdate": [1499188564.0, -7200]
}, {
"node": "ac434d1aa45d689cd6548426012b0385b269296a",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1378190: Try to make ServoRestyleManager easier to follow. r=heycam\n\nMozReview-Commit-ID: B9bw23n2jUe",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1003,
"line": "  // We assume that id and class attributes are used in class/id selectors, and\n",
"lineno": 1360,
"revdate": [1499188564.0, -7200]
}, {
"node": "ac434d1aa45d689cd6548426012b0385b269296a",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1378190: Try to make ServoRestyleManager easier to follow. r=heycam\n\nMozReview-Commit-ID: B9bw23n2jUe",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1004,
"line": "  // thus record them.\n",
"lineno": 1361,
"revdate": [1499188564.0, -7200]
}, {
"node": "ac434d1aa45d689cd6548426012b0385b269296a",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1378190: Try to make ServoRestyleManager easier to follow. r=heycam\n\nMozReview-Commit-ID: B9bw23n2jUe",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1005,
"line": "  //\n",
"lineno": 1362,
"revdate": [1499188564.0, -7200]
}, {
"node": "ac434d1aa45d689cd6548426012b0385b269296a",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1378190: Try to make ServoRestyleManager easier to follow. r=heycam\n\nMozReview-Commit-ID: B9bw23n2jUe",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1006,
"line": "  // TODO(emilio): We keep a filter of the ids in use somewhere in the StyleSet,\n",
"lineno": 1363,
"revdate": [1499188564.0, -7200]
}, {
"node": "ac434d1aa45d689cd6548426012b0385b269296a",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1378190: Try to make ServoRestyleManager easier to follow. r=heycam\n\nMozReview-Commit-ID: B9bw23n2jUe",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1007,
"line": "  // presumably we could try to filter the old and new id, but it's not clear\n",
"lineno": 1364,
"revdate": [1499188564.0, -7200]
}, {
"node": "ac434d1aa45d689cd6548426012b0385b269296a",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1378190: Try to make ServoRestyleManager easier to follow. r=heycam\n\nMozReview-Commit-ID: B9bw23n2jUe",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1008,
"line": "  // it's worth it.\n",
"lineno": 1365,
"revdate": [1499188564.0, -7200]
}, {
"node": "ac434d1aa45d689cd6548426012b0385b269296a",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1378190: Try to make ServoRestyleManager easier to follow. r=heycam\n\nMozReview-Commit-ID: B9bw23n2jUe",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1009,
"line": "  if (aNameSpaceID == kNameSpaceID_None &&\n",
"lineno": 1366,
"revdate": [1499188564.0, -7200]
}, {
"node": "ac434d1aa45d689cd6548426012b0385b269296a",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1378190: Try to make ServoRestyleManager easier to follow. r=heycam\n\nMozReview-Commit-ID: B9bw23n2jUe",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1010,
"line": "      (aAttribute == nsGkAtoms::id || aAttribute == nsGkAtoms::_class)) {\n",
"lineno": 1367,
"revdate": [1499188564.0, -7200]
}, {
"node": "ac434d1aa45d689cd6548426012b0385b269296a",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1378190: Try to make ServoRestyleManager easier to follow. r=heycam\n\nMozReview-Commit-ID: B9bw23n2jUe",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1011,
"line": "    return true;\n",
"lineno": 1368,
"revdate": [1499188564.0, -7200]
}, {
"node": "ac434d1aa45d689cd6548426012b0385b269296a",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1378190: Try to make ServoRestyleManager easier to follow. r=heycam\n\nMozReview-Commit-ID: B9bw23n2jUe",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1012,
"line": "  }\n",
"lineno": 1369,
"revdate": [1499188564.0, -7200]
}, {
"node": "ac434d1aa45d689cd6548426012b0385b269296a",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1378190: Try to make ServoRestyleManager easier to follow. r=heycam\n\nMozReview-Commit-ID: B9bw23n2jUe",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1013,
"line": "\n",
"lineno": 1370,
"revdate": [1499188564.0, -7200]
}, {
"node": "ac434d1aa45d689cd6548426012b0385b269296a",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1378190: Try to make ServoRestyleManager easier to follow. r=heycam\n\nMozReview-Commit-ID: B9bw23n2jUe",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1014,
"line": "  // We always record lang=\"\", even though we force a subtree restyle when it\n",
"lineno": 1371,
"revdate": [1499188564.0, -7200]
}, {
"node": "ac434d1aa45d689cd6548426012b0385b269296a",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1378190: Try to make ServoRestyleManager easier to follow. r=heycam\n\nMozReview-Commit-ID: B9bw23n2jUe",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1015,
"line": "  // changes, since it can change how its siblings match :lang(..) due to\n",
"lineno": 1372,
"revdate": [1499188564.0, -7200]
}, {
"node": "ac434d1aa45d689cd6548426012b0385b269296a",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1378190: Try to make ServoRestyleManager easier to follow. r=heycam\n\nMozReview-Commit-ID: B9bw23n2jUe",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1016,
"line": "  // selectors like :lang(..) + div.\n",
"lineno": 1373,
"revdate": [1499188564.0, -7200]
}, {
"node": "ac434d1aa45d689cd6548426012b0385b269296a",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1378190: Try to make ServoRestyleManager easier to follow. r=heycam\n\nMozReview-Commit-ID: B9bw23n2jUe",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1017,
"line": "  if (aAttribute == nsGkAtoms::lang) {\n",
"lineno": 1374,
"revdate": [1499188564.0, -7200]
}, {
"node": "ac434d1aa45d689cd6548426012b0385b269296a",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1378190: Try to make ServoRestyleManager easier to follow. r=heycam\n\nMozReview-Commit-ID: B9bw23n2jUe",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1018,
"line": "    return true;\n",
"lineno": 1375,
"revdate": [1499188564.0, -7200]
}, {
"node": "ac434d1aa45d689cd6548426012b0385b269296a",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1378190: Try to make ServoRestyleManager easier to follow. r=heycam\n\nMozReview-Commit-ID: B9bw23n2jUe",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1019,
"line": "  }\n",
"lineno": 1376,
"revdate": [1499188564.0, -7200]
}, {
"node": "ac434d1aa45d689cd6548426012b0385b269296a",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1378190: Try to make ServoRestyleManager easier to follow. r=heycam\n\nMozReview-Commit-ID: B9bw23n2jUe",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1020,
"line": "\n",
"lineno": 1377,
"revdate": [1499188564.0, -7200]
}, {
"node": "ac434d1aa45d689cd6548426012b0385b269296a",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1378190: Try to make ServoRestyleManager easier to follow. r=heycam\n\nMozReview-Commit-ID: B9bw23n2jUe",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1021,
"line": "  // Otherwise, just record the attribute change if a selector in the page may\n",
"lineno": 1378,
"revdate": [1499188564.0, -7200]
}, {
"node": "ac434d1aa45d689cd6548426012b0385b269296a",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1378190: Try to make ServoRestyleManager easier to follow. r=heycam\n\nMozReview-Commit-ID: B9bw23n2jUe",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1022,
"line": "  // reference it from an attribute selector.\n",
"lineno": 1379,
"revdate": [1499188564.0, -7200]
}, {
"node": "ac434d1aa45d689cd6548426012b0385b269296a",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1378190: Try to make ServoRestyleManager easier to follow. r=heycam\n\nMozReview-Commit-ID: B9bw23n2jUe",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1023,
"line": "  return aStyleSet.MightHaveAttributeDependency(aElement, aAttribute);\n",
"lineno": 1380,
"revdate": [1499188564.0, -7200]
}, {
"node": "ce1f1e2027ef040d0ae0f7540392d453f6515f95",
"author": "Cameron McCormack \u003ccam@mcc.id.au\u003e",
"desc": "Bug 1365159 - Part 1: Record :-moz-browser-frame and :-moz-table-border-nonzero state on snapshots. r=emilio\n\nMozReview-Commit-ID: BEglHnXhpYJ",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 763,
"line": "}\n",
"lineno": 1381,
"revdate": [1496643570.0, -28800]
}, {
"node": "ce1f1e2027ef040d0ae0f7540392d453f6515f95",
"author": "Cameron McCormack \u003ccam@mcc.id.au\u003e",
"desc": "Bug 1365159 - Part 1: Record :-moz-browser-frame and :-moz-table-border-nonzero state on snapshots. r=emilio\n\nMozReview-Commit-ID: BEglHnXhpYJ",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 764,
"line": "\n",
"lineno": 1382,
"revdate": [1496643570.0, -28800]
}, {
"node": "f3ab6216d197647011cc48b90fff685cb875c983",
"author": "Cameron McCormack \u003ccam@mcc.id.au\u003e",
"desc": "Bug 1248864 - Part 2: Add skeleton ServoRestyleManager and a RestyleManagerHandle smart pointer. r=dholbert",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 82,
"line": "void\n",
"lineno": 1383,
"revdate": [1456297272.0, -39600]
}, {
"node": "f3ab6216d197647011cc48b90fff685cb875c983",
"author": "Cameron McCormack \u003ccam@mcc.id.au\u003e",
"desc": "Bug 1248864 - Part 2: Add skeleton ServoRestyleManager and a RestyleManagerHandle smart pointer. r=dholbert",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 83,
"line": "ServoRestyleManager::AttributeWillChange(Element* aElement,\n",
"lineno": 1384,
"revdate": [1456297272.0, -39600]
}, {
"node": "f3ab6216d197647011cc48b90fff685cb875c983",
"author": "Cameron McCormack \u003ccam@mcc.id.au\u003e",
"desc": "Bug 1248864 - Part 2: Add skeleton ServoRestyleManager and a RestyleManagerHandle smart pointer. r=dholbert",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 84,
"line": "                                         int32_t aNameSpaceID,\n",
"lineno": 1385,
"revdate": [1456297272.0, -39600]
}, {
"node": "67a8e12324569dd730347187e2ffccae486c758b",
"author": "Nicholas Nethercote \u003cnnethercote@mozilla.com\u003e",
"desc": "Bug 1400460 - Rename nsIAtom as nsAtom. r=hiro.\n\n(Path is actually r=froydnj.)\n\nBug 1400459 devirtualized nsIAtom so that it is no longer a subclass of\nnsISupports. This means that nsAtom is now a better name for it than nsIAtom.\n\nMozReview-Commit-ID: 91U22X2NydP",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1346,
"line": "                                         nsAtom* aAttribute, int32_t aModType,\n",
"lineno": 1386,
"revdate": [1506981919.0, -39600]
}, {
"node": "f3ab6216d197647011cc48b90fff685cb875c983",
"author": "Cameron McCormack \u003ccam@mcc.id.au\u003e",
"desc": "Bug 1248864 - Part 2: Add skeleton ServoRestyleManager and a RestyleManagerHandle smart pointer. r=dholbert",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 87,
"line": "                                         const nsAttrValue* aNewValue)\n",
"lineno": 1387,
"revdate": [1456297272.0, -39600]
}, {
"node": "f3ab6216d197647011cc48b90fff685cb875c983",
"author": "Cameron McCormack \u003ccam@mcc.id.au\u003e",
"desc": "Bug 1248864 - Part 2: Add skeleton ServoRestyleManager and a RestyleManagerHandle smart pointer. r=dholbert",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 88,
"line": "{\n",
"lineno": 1388,
"revdate": [1456297272.0, -39600]
}, {
"node": "9d0c157be7670fa138de10829d30239db7abaabd",
"author": "Brian Birtles \u003cbirtles@gmail.com\u003e",
"desc": "Bug 1365472 - Use animated class names when doing selector matching in Servo; r=heycam\n\nUsing SVG SMIL it is possible to animate the class attribute of an element using\nmarkup such as the following:\n\n  \u003cstyle\u003e\n    .red {\n      fill: red;\n    }\n  \u003c/style\u003e\n  \u003csvg\u003e\n    \u003ccircle cx=\"50\" cy=\"50\" r=\"30\" fill=\"blue\"\u003e\n      \u003cset attributeName=\"class\" to=\"red\" begin=\"1s\"/\u003e\n    \u003c/circle\u003e\n  \u003c/svg\u003e\n\nIn Gecko, Element::GetClasses handles this case by looking for an animated class\nstring when the element in question is an SVG element.\n\nThis patch causes our Servo bindings to use GetClasses when querying attribute\nvalues for selector matching.\n\nNote that animating the class attribute is *not* expected to affect attribute\nselectors such as `circle[class=\"red\"]`. It does in Chrome, but that is due to\na Blink bug where animating attributes using SMIL affects the result of\ngetAttribute:\n\n  https://bugs.chromium.org/p/chromium/issues/detail?id=735820\n\nThis patch adjusts the behavior for both the GeckoElement case and the\nServoElementSnapshot case.\n\nMozReview-Commit-ID: DAFWHSH1aYB",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 984,
"line": "  TakeSnapshotForAttributeChange(aElement, aNameSpaceID, aAttribute);\n",
"lineno": 1389,
"revdate": [1498586103.0, 25200]
}, {
"node": "9d0c157be7670fa138de10829d30239db7abaabd",
"author": "Brian Birtles \u003cbirtles@gmail.com\u003e",
"desc": "Bug 1365472 - Use animated class names when doing selector matching in Servo; r=heycam\n\nUsing SVG SMIL it is possible to animate the class attribute of an element using\nmarkup such as the following:\n\n  \u003cstyle\u003e\n    .red {\n      fill: red;\n    }\n  \u003c/style\u003e\n  \u003csvg\u003e\n    \u003ccircle cx=\"50\" cy=\"50\" r=\"30\" fill=\"blue\"\u003e\n      \u003cset attributeName=\"class\" to=\"red\" begin=\"1s\"/\u003e\n    \u003c/circle\u003e\n  \u003c/svg\u003e\n\nIn Gecko, Element::GetClasses handles this case by looking for an animated class\nstring when the element in question is an SVG element.\n\nThis patch causes our Servo bindings to use GetClasses when querying attribute\nvalues for selector matching.\n\nNote that animating the class attribute is *not* expected to affect attribute\nselectors such as `circle[class=\"red\"]`. It does in Chrome, but that is due to\na Blink bug where animating attributes using SMIL affects the result of\ngetAttribute:\n\n  https://bugs.chromium.org/p/chromium/issues/detail?id=735820\n\nThis patch adjusts the behavior for both the GeckoElement case and the\nServoElementSnapshot case.\n\nMozReview-Commit-ID: DAFWHSH1aYB",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 985,
"line": "}\n",
"lineno": 1390,
"revdate": [1498586103.0, 25200]
}, {
"node": "9d0c157be7670fa138de10829d30239db7abaabd",
"author": "Brian Birtles \u003cbirtles@gmail.com\u003e",
"desc": "Bug 1365472 - Use animated class names when doing selector matching in Servo; r=heycam\n\nUsing SVG SMIL it is possible to animate the class attribute of an element using\nmarkup such as the following:\n\n  \u003cstyle\u003e\n    .red {\n      fill: red;\n    }\n  \u003c/style\u003e\n  \u003csvg\u003e\n    \u003ccircle cx=\"50\" cy=\"50\" r=\"30\" fill=\"blue\"\u003e\n      \u003cset attributeName=\"class\" to=\"red\" begin=\"1s\"/\u003e\n    \u003c/circle\u003e\n  \u003c/svg\u003e\n\nIn Gecko, Element::GetClasses handles this case by looking for an animated class\nstring when the element in question is an SVG element.\n\nThis patch causes our Servo bindings to use GetClasses when querying attribute\nvalues for selector matching.\n\nNote that animating the class attribute is *not* expected to affect attribute\nselectors such as `circle[class=\"red\"]`. It does in Chrome, but that is due to\na Blink bug where animating attributes using SMIL affects the result of\ngetAttribute:\n\n  https://bugs.chromium.org/p/chromium/issues/detail?id=735820\n\nThis patch adjusts the behavior for both the GeckoElement case and the\nServoElementSnapshot case.\n\nMozReview-Commit-ID: DAFWHSH1aYB",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 986,
"line": "\n",
"lineno": 1391,
"revdate": [1498586103.0, 25200]
}, {
"node": "9d0c157be7670fa138de10829d30239db7abaabd",
"author": "Brian Birtles \u003cbirtles@gmail.com\u003e",
"desc": "Bug 1365472 - Use animated class names when doing selector matching in Servo; r=heycam\n\nUsing SVG SMIL it is possible to animate the class attribute of an element using\nmarkup such as the following:\n\n  \u003cstyle\u003e\n    .red {\n      fill: red;\n    }\n  \u003c/style\u003e\n  \u003csvg\u003e\n    \u003ccircle cx=\"50\" cy=\"50\" r=\"30\" fill=\"blue\"\u003e\n      \u003cset attributeName=\"class\" to=\"red\" begin=\"1s\"/\u003e\n    \u003c/circle\u003e\n  \u003c/svg\u003e\n\nIn Gecko, Element::GetClasses handles this case by looking for an animated class\nstring when the element in question is an SVG element.\n\nThis patch causes our Servo bindings to use GetClasses when querying attribute\nvalues for selector matching.\n\nNote that animating the class attribute is *not* expected to affect attribute\nselectors such as `circle[class=\"red\"]`. It does in Chrome, but that is due to\na Blink bug where animating attributes using SMIL affects the result of\ngetAttribute:\n\n  https://bugs.chromium.org/p/chromium/issues/detail?id=735820\n\nThis patch adjusts the behavior for both the GeckoElement case and the\nServoElementSnapshot case.\n\nMozReview-Commit-ID: DAFWHSH1aYB",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 987,
"line": "void\n",
"lineno": 1392,
"revdate": [1498586103.0, 25200]
}, {
"node": "9d0c157be7670fa138de10829d30239db7abaabd",
"author": "Brian Birtles \u003cbirtles@gmail.com\u003e",
"desc": "Bug 1365472 - Use animated class names when doing selector matching in Servo; r=heycam\n\nUsing SVG SMIL it is possible to animate the class attribute of an element using\nmarkup such as the following:\n\n  \u003cstyle\u003e\n    .red {\n      fill: red;\n    }\n  \u003c/style\u003e\n  \u003csvg\u003e\n    \u003ccircle cx=\"50\" cy=\"50\" r=\"30\" fill=\"blue\"\u003e\n      \u003cset attributeName=\"class\" to=\"red\" begin=\"1s\"/\u003e\n    \u003c/circle\u003e\n  \u003c/svg\u003e\n\nIn Gecko, Element::GetClasses handles this case by looking for an animated class\nstring when the element in question is an SVG element.\n\nThis patch causes our Servo bindings to use GetClasses when querying attribute\nvalues for selector matching.\n\nNote that animating the class attribute is *not* expected to affect attribute\nselectors such as `circle[class=\"red\"]`. It does in Chrome, but that is due to\na Blink bug where animating attributes using SMIL affects the result of\ngetAttribute:\n\n  https://bugs.chromium.org/p/chromium/issues/detail?id=735820\n\nThis patch adjusts the behavior for both the GeckoElement case and the\nServoElementSnapshot case.\n\nMozReview-Commit-ID: DAFWHSH1aYB",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 988,
"line": "ServoRestyleManager::ClassAttributeWillBeChangedBySMIL(Element* aElement)\n",
"lineno": 1393,
"revdate": [1498586103.0, 25200]
}, {
"node": "9d0c157be7670fa138de10829d30239db7abaabd",
"author": "Brian Birtles \u003cbirtles@gmail.com\u003e",
"desc": "Bug 1365472 - Use animated class names when doing selector matching in Servo; r=heycam\n\nUsing SVG SMIL it is possible to animate the class attribute of an element using\nmarkup such as the following:\n\n  \u003cstyle\u003e\n    .red {\n      fill: red;\n    }\n  \u003c/style\u003e\n  \u003csvg\u003e\n    \u003ccircle cx=\"50\" cy=\"50\" r=\"30\" fill=\"blue\"\u003e\n      \u003cset attributeName=\"class\" to=\"red\" begin=\"1s\"/\u003e\n    \u003c/circle\u003e\n  \u003c/svg\u003e\n\nIn Gecko, Element::GetClasses handles this case by looking for an animated class\nstring when the element in question is an SVG element.\n\nThis patch causes our Servo bindings to use GetClasses when querying attribute\nvalues for selector matching.\n\nNote that animating the class attribute is *not* expected to affect attribute\nselectors such as `circle[class=\"red\"]`. It does in Chrome, but that is due to\na Blink bug where animating attributes using SMIL affects the result of\ngetAttribute:\n\n  https://bugs.chromium.org/p/chromium/issues/detail?id=735820\n\nThis patch adjusts the behavior for both the GeckoElement case and the\nServoElementSnapshot case.\n\nMozReview-Commit-ID: DAFWHSH1aYB",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 989,
"line": "{\n",
"lineno": 1394,
"revdate": [1498586103.0, 25200]
}, {
"node": "9d0c157be7670fa138de10829d30239db7abaabd",
"author": "Brian Birtles \u003cbirtles@gmail.com\u003e",
"desc": "Bug 1365472 - Use animated class names when doing selector matching in Servo; r=heycam\n\nUsing SVG SMIL it is possible to animate the class attribute of an element using\nmarkup such as the following:\n\n  \u003cstyle\u003e\n    .red {\n      fill: red;\n    }\n  \u003c/style\u003e\n  \u003csvg\u003e\n    \u003ccircle cx=\"50\" cy=\"50\" r=\"30\" fill=\"blue\"\u003e\n      \u003cset attributeName=\"class\" to=\"red\" begin=\"1s\"/\u003e\n    \u003c/circle\u003e\n  \u003c/svg\u003e\n\nIn Gecko, Element::GetClasses handles this case by looking for an animated class\nstring when the element in question is an SVG element.\n\nThis patch causes our Servo bindings to use GetClasses when querying attribute\nvalues for selector matching.\n\nNote that animating the class attribute is *not* expected to affect attribute\nselectors such as `circle[class=\"red\"]`. It does in Chrome, but that is due to\na Blink bug where animating attributes using SMIL affects the result of\ngetAttribute:\n\n  https://bugs.chromium.org/p/chromium/issues/detail?id=735820\n\nThis patch adjusts the behavior for both the GeckoElement case and the\nServoElementSnapshot case.\n\nMozReview-Commit-ID: DAFWHSH1aYB",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 990,
"line": "  TakeSnapshotForAttributeChange(aElement, kNameSpaceID_None,\n",
"lineno": 1395,
"revdate": [1498586103.0, 25200]
}, {
"node": "9d0c157be7670fa138de10829d30239db7abaabd",
"author": "Brian Birtles \u003cbirtles@gmail.com\u003e",
"desc": "Bug 1365472 - Use animated class names when doing selector matching in Servo; r=heycam\n\nUsing SVG SMIL it is possible to animate the class attribute of an element using\nmarkup such as the following:\n\n  \u003cstyle\u003e\n    .red {\n      fill: red;\n    }\n  \u003c/style\u003e\n  \u003csvg\u003e\n    \u003ccircle cx=\"50\" cy=\"50\" r=\"30\" fill=\"blue\"\u003e\n      \u003cset attributeName=\"class\" to=\"red\" begin=\"1s\"/\u003e\n    \u003c/circle\u003e\n  \u003c/svg\u003e\n\nIn Gecko, Element::GetClasses handles this case by looking for an animated class\nstring when the element in question is an SVG element.\n\nThis patch causes our Servo bindings to use GetClasses when querying attribute\nvalues for selector matching.\n\nNote that animating the class attribute is *not* expected to affect attribute\nselectors such as `circle[class=\"red\"]`. It does in Chrome, but that is due to\na Blink bug where animating attributes using SMIL affects the result of\ngetAttribute:\n\n  https://bugs.chromium.org/p/chromium/issues/detail?id=735820\n\nThis patch adjusts the behavior for both the GeckoElement case and the\nServoElementSnapshot case.\n\nMozReview-Commit-ID: DAFWHSH1aYB",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 991,
"line": "                                 nsGkAtoms::_class);\n",
"lineno": 1396,
"revdate": [1498586103.0, 25200]
}, {
"node": "9d0c157be7670fa138de10829d30239db7abaabd",
"author": "Brian Birtles \u003cbirtles@gmail.com\u003e",
"desc": "Bug 1365472 - Use animated class names when doing selector matching in Servo; r=heycam\n\nUsing SVG SMIL it is possible to animate the class attribute of an element using\nmarkup such as the following:\n\n  \u003cstyle\u003e\n    .red {\n      fill: red;\n    }\n  \u003c/style\u003e\n  \u003csvg\u003e\n    \u003ccircle cx=\"50\" cy=\"50\" r=\"30\" fill=\"blue\"\u003e\n      \u003cset attributeName=\"class\" to=\"red\" begin=\"1s\"/\u003e\n    \u003c/circle\u003e\n  \u003c/svg\u003e\n\nIn Gecko, Element::GetClasses handles this case by looking for an animated class\nstring when the element in question is an SVG element.\n\nThis patch causes our Servo bindings to use GetClasses when querying attribute\nvalues for selector matching.\n\nNote that animating the class attribute is *not* expected to affect attribute\nselectors such as `circle[class=\"red\"]`. It does in Chrome, but that is due to\na Blink bug where animating attributes using SMIL affects the result of\ngetAttribute:\n\n  https://bugs.chromium.org/p/chromium/issues/detail?id=735820\n\nThis patch adjusts the behavior for both the GeckoElement case and the\nServoElementSnapshot case.\n\nMozReview-Commit-ID: DAFWHSH1aYB",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 992,
"line": "}\n",
"lineno": 1397,
"revdate": [1498586103.0, 25200]
}, {
"node": "9d0c157be7670fa138de10829d30239db7abaabd",
"author": "Brian Birtles \u003cbirtles@gmail.com\u003e",
"desc": "Bug 1365472 - Use animated class names when doing selector matching in Servo; r=heycam\n\nUsing SVG SMIL it is possible to animate the class attribute of an element using\nmarkup such as the following:\n\n  \u003cstyle\u003e\n    .red {\n      fill: red;\n    }\n  \u003c/style\u003e\n  \u003csvg\u003e\n    \u003ccircle cx=\"50\" cy=\"50\" r=\"30\" fill=\"blue\"\u003e\n      \u003cset attributeName=\"class\" to=\"red\" begin=\"1s\"/\u003e\n    \u003c/circle\u003e\n  \u003c/svg\u003e\n\nIn Gecko, Element::GetClasses handles this case by looking for an animated class\nstring when the element in question is an SVG element.\n\nThis patch causes our Servo bindings to use GetClasses when querying attribute\nvalues for selector matching.\n\nNote that animating the class attribute is *not* expected to affect attribute\nselectors such as `circle[class=\"red\"]`. It does in Chrome, but that is due to\na Blink bug where animating attributes using SMIL affects the result of\ngetAttribute:\n\n  https://bugs.chromium.org/p/chromium/issues/detail?id=735820\n\nThis patch adjusts the behavior for both the GeckoElement case and the\nServoElementSnapshot case.\n\nMozReview-Commit-ID: DAFWHSH1aYB",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 993,
"line": "\n",
"lineno": 1398,
"revdate": [1498586103.0, 25200]
}, {
"node": "9d0c157be7670fa138de10829d30239db7abaabd",
"author": "Brian Birtles \u003cbirtles@gmail.com\u003e",
"desc": "Bug 1365472 - Use animated class names when doing selector matching in Servo; r=heycam\n\nUsing SVG SMIL it is possible to animate the class attribute of an element using\nmarkup such as the following:\n\n  \u003cstyle\u003e\n    .red {\n      fill: red;\n    }\n  \u003c/style\u003e\n  \u003csvg\u003e\n    \u003ccircle cx=\"50\" cy=\"50\" r=\"30\" fill=\"blue\"\u003e\n      \u003cset attributeName=\"class\" to=\"red\" begin=\"1s\"/\u003e\n    \u003c/circle\u003e\n  \u003c/svg\u003e\n\nIn Gecko, Element::GetClasses handles this case by looking for an animated class\nstring when the element in question is an SVG element.\n\nThis patch causes our Servo bindings to use GetClasses when querying attribute\nvalues for selector matching.\n\nNote that animating the class attribute is *not* expected to affect attribute\nselectors such as `circle[class=\"red\"]`. It does in Chrome, but that is due to\na Blink bug where animating attributes using SMIL affects the result of\ngetAttribute:\n\n  https://bugs.chromium.org/p/chromium/issues/detail?id=735820\n\nThis patch adjusts the behavior for both the GeckoElement case and the\nServoElementSnapshot case.\n\nMozReview-Commit-ID: DAFWHSH1aYB",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 994,
"line": "void\n",
"lineno": 1399,
"revdate": [1498586103.0, 25200]
}, {
"node": "9d0c157be7670fa138de10829d30239db7abaabd",
"author": "Brian Birtles \u003cbirtles@gmail.com\u003e",
"desc": "Bug 1365472 - Use animated class names when doing selector matching in Servo; r=heycam\n\nUsing SVG SMIL it is possible to animate the class attribute of an element using\nmarkup such as the following:\n\n  \u003cstyle\u003e\n    .red {\n      fill: red;\n    }\n  \u003c/style\u003e\n  \u003csvg\u003e\n    \u003ccircle cx=\"50\" cy=\"50\" r=\"30\" fill=\"blue\"\u003e\n      \u003cset attributeName=\"class\" to=\"red\" begin=\"1s\"/\u003e\n    \u003c/circle\u003e\n  \u003c/svg\u003e\n\nIn Gecko, Element::GetClasses handles this case by looking for an animated class\nstring when the element in question is an SVG element.\n\nThis patch causes our Servo bindings to use GetClasses when querying attribute\nvalues for selector matching.\n\nNote that animating the class attribute is *not* expected to affect attribute\nselectors such as `circle[class=\"red\"]`. It does in Chrome, but that is due to\na Blink bug where animating attributes using SMIL affects the result of\ngetAttribute:\n\n  https://bugs.chromium.org/p/chromium/issues/detail?id=735820\n\nThis patch adjusts the behavior for both the GeckoElement case and the\nServoElementSnapshot case.\n\nMozReview-Commit-ID: DAFWHSH1aYB",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 995,
"line": "ServoRestyleManager::TakeSnapshotForAttributeChange(Element* aElement,\n",
"lineno": 1400,
"revdate": [1498586103.0, 25200]
}, {
"node": "9d0c157be7670fa138de10829d30239db7abaabd",
"author": "Brian Birtles \u003cbirtles@gmail.com\u003e",
"desc": "Bug 1365472 - Use animated class names when doing selector matching in Servo; r=heycam\n\nUsing SVG SMIL it is possible to animate the class attribute of an element using\nmarkup such as the following:\n\n  \u003cstyle\u003e\n    .red {\n      fill: red;\n    }\n  \u003c/style\u003e\n  \u003csvg\u003e\n    \u003ccircle cx=\"50\" cy=\"50\" r=\"30\" fill=\"blue\"\u003e\n      \u003cset attributeName=\"class\" to=\"red\" begin=\"1s\"/\u003e\n    \u003c/circle\u003e\n  \u003c/svg\u003e\n\nIn Gecko, Element::GetClasses handles this case by looking for an animated class\nstring when the element in question is an SVG element.\n\nThis patch causes our Servo bindings to use GetClasses when querying attribute\nvalues for selector matching.\n\nNote that animating the class attribute is *not* expected to affect attribute\nselectors such as `circle[class=\"red\"]`. It does in Chrome, but that is due to\na Blink bug where animating attributes using SMIL affects the result of\ngetAttribute:\n\n  https://bugs.chromium.org/p/chromium/issues/detail?id=735820\n\nThis patch adjusts the behavior for both the GeckoElement case and the\nServoElementSnapshot case.\n\nMozReview-Commit-ID: DAFWHSH1aYB",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 996,
"line": "                                                    int32_t aNameSpaceID,\n",
"lineno": 1401,
"revdate": [1498586103.0, 25200]
}, {
"node": "67a8e12324569dd730347187e2ffccae486c758b",
"author": "Nicholas Nethercote \u003cnnethercote@mozilla.com\u003e",
"desc": "Bug 1400460 - Rename nsIAtom as nsAtom. r=hiro.\n\n(Path is actually r=froydnj.)\n\nBug 1400459 devirtualized nsIAtom so that it is no longer a subclass of\nnsISupports. This means that nsAtom is now a better name for it than nsIAtom.\n\nMozReview-Commit-ID: 91U22X2NydP",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1362,
"line": "                                                    nsAtom* aAttribute)\n",
"lineno": 1402,
"revdate": [1506981919.0, -39600]
}, {
"node": "9d0c157be7670fa138de10829d30239db7abaabd",
"author": "Brian Birtles \u003cbirtles@gmail.com\u003e",
"desc": "Bug 1365472 - Use animated class names when doing selector matching in Servo; r=heycam\n\nUsing SVG SMIL it is possible to animate the class attribute of an element using\nmarkup such as the following:\n\n  \u003cstyle\u003e\n    .red {\n      fill: red;\n    }\n  \u003c/style\u003e\n  \u003csvg\u003e\n    \u003ccircle cx=\"50\" cy=\"50\" r=\"30\" fill=\"blue\"\u003e\n      \u003cset attributeName=\"class\" to=\"red\" begin=\"1s\"/\u003e\n    \u003c/circle\u003e\n  \u003c/svg\u003e\n\nIn Gecko, Element::GetClasses handles this case by looking for an animated class\nstring when the element in question is an SVG element.\n\nThis patch causes our Servo bindings to use GetClasses when querying attribute\nvalues for selector matching.\n\nNote that animating the class attribute is *not* expected to affect attribute\nselectors such as `circle[class=\"red\"]`. It does in Chrome, but that is due to\na Blink bug where animating attributes using SMIL affects the result of\ngetAttribute:\n\n  https://bugs.chromium.org/p/chromium/issues/detail?id=735820\n\nThis patch adjusts the behavior for both the GeckoElement case and the\nServoElementSnapshot case.\n\nMozReview-Commit-ID: DAFWHSH1aYB",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 998,
"line": "{\n",
"lineno": 1403,
"revdate": [1498586103.0, 25200]
}, {
"node": "2150351429b5c9515589facd9f2aefb1e4640842",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1355343: Take all the snapshots into account. r=bholley\n\nI've chosen this approach mainly because there's no other good way to guarantee\nthe model is correct than holding the snapshots alive until a style refresh.\n\nWhat I tried before this (storing them in a sort of \"immutable element data\") is\na pain, since we call into style from the frame constructor and other content\nnotifications, which makes keeping track of which snapshots should be cleared an\nwhich shouldn't an insane task.\n\nIdeally we'd have a single entry-point for style, but that's not the case right\nnow, and changing that requires pretty non-trivial changes to the frame\nconstructor.\n\nMozReview-Commit-ID: FF1KWZv2iBM",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 607,
"line": "  MOZ_ASSERT(!mInStyleRefresh);\n",
"lineno": 1404,
"revdate": [1494167807.0, -7200]
}, {
"node": "2150351429b5c9515589facd9f2aefb1e4640842",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1355343: Take all the snapshots into account. r=bholley\n\nI've chosen this approach mainly because there's no other good way to guarantee\nthe model is correct than holding the snapshots alive until a style refresh.\n\nWhat I tried before this (storing them in a sort of \"immutable element data\") is\na pain, since we call into style from the frame constructor and other content\nnotifications, which makes keeping track of which snapshots should be cleared an\nwhich shouldn't an insane task.\n\nIdeally we'd have a single entry-point for style, but that's not the case right\nnow, and changing that requires pretty non-trivial changes to the frame\nconstructor.\n\nMozReview-Commit-ID: FF1KWZv2iBM",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 608,
"line": "\n",
"lineno": 1405,
"revdate": [1494167807.0, -7200]
}, {
"node": "2150351429b5c9515589facd9f2aefb1e4640842",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1355343: Take all the snapshots into account. r=bholley\n\nI've chosen this approach mainly because there's no other good way to guarantee\nthe model is correct than holding the snapshots alive until a style refresh.\n\nWhat I tried before this (storing them in a sort of \"immutable element data\") is\na pain, since we call into style from the frame constructor and other content\nnotifications, which makes keeping track of which snapshots should be cleared an\nwhich shouldn't an insane task.\n\nIdeally we'd have a single entry-point for style, but that's not the case right\nnow, and changing that requires pretty non-trivial changes to the frame\nconstructor.\n\nMozReview-Commit-ID: FF1KWZv2iBM",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 609,
"line": "  if (!aElement-\u003eHasServoData()) {\n",
"lineno": 1406,
"revdate": [1494167807.0, -7200]
}, {
"node": "2150351429b5c9515589facd9f2aefb1e4640842",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1355343: Take all the snapshots into account. r=bholley\n\nI've chosen this approach mainly because there's no other good way to guarantee\nthe model is correct than holding the snapshots alive until a style refresh.\n\nWhat I tried before this (storing them in a sort of \"immutable element data\") is\na pain, since we call into style from the frame constructor and other content\nnotifications, which makes keeping track of which snapshots should be cleared an\nwhich shouldn't an insane task.\n\nIdeally we'd have a single entry-point for style, but that's not the case right\nnow, and changing that requires pretty non-trivial changes to the frame\nconstructor.\n\nMozReview-Commit-ID: FF1KWZv2iBM",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 610,
"line": "    return;\n",
"lineno": 1407,
"revdate": [1494167807.0, -7200]
}, {
"node": "2150351429b5c9515589facd9f2aefb1e4640842",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1355343: Take all the snapshots into account. r=bholley\n\nI've chosen this approach mainly because there's no other good way to guarantee\nthe model is correct than holding the snapshots alive until a style refresh.\n\nWhat I tried before this (storing them in a sort of \"immutable element data\") is\na pain, since we call into style from the frame constructor and other content\nnotifications, which makes keeping track of which snapshots should be cleared an\nwhich shouldn't an insane task.\n\nIdeally we'd have a single entry-point for style, but that's not the case right\nnow, and changing that requires pretty non-trivial changes to the frame\nconstructor.\n\nMozReview-Commit-ID: FF1KWZv2iBM",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 611,
"line": "  }\n",
"lineno": 1408,
"revdate": [1494167807.0, -7200]
}, {
"node": "2150351429b5c9515589facd9f2aefb1e4640842",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1355343: Take all the snapshots into account. r=bholley\n\nI've chosen this approach mainly because there's no other good way to guarantee\nthe model is correct than holding the snapshots alive until a style refresh.\n\nWhat I tried before this (storing them in a sort of \"immutable element data\") is\na pain, since we call into style from the frame constructor and other content\nnotifications, which makes keeping track of which snapshots should be cleared an\nwhich shouldn't an insane task.\n\nIdeally we'd have a single entry-point for style, but that's not the case right\nnow, and changing that requires pretty non-trivial changes to the frame\nconstructor.\n\nMozReview-Commit-ID: FF1KWZv2iBM",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 612,
"line": "\n",
"lineno": 1409,
"revdate": [1494167807.0, -7200]
}, {
"node": "ac434d1aa45d689cd6548426012b0385b269296a",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1378190: Try to make ServoRestyleManager easier to follow. r=heycam\n\nMozReview-Commit-ID: B9bw23n2jUe",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1053,
"line": "  bool influencesOtherPseudoClassState;\n",
"lineno": 1410,
"revdate": [1499188564.0, -7200]
}, {
"node": "ac434d1aa45d689cd6548426012b0385b269296a",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1378190: Try to make ServoRestyleManager easier to follow. r=heycam\n\nMozReview-Commit-ID: B9bw23n2jUe",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1054,
"line": "  if (!NeedToRecordAttrChange(*StyleSet(),\n",
"lineno": 1411,
"revdate": [1499188564.0, -7200]
}, {
"node": "ac434d1aa45d689cd6548426012b0385b269296a",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1378190: Try to make ServoRestyleManager easier to follow. r=heycam\n\nMozReview-Commit-ID: B9bw23n2jUe",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1055,
"line": "                              *aElement,\n",
"lineno": 1412,
"revdate": [1499188564.0, -7200]
}, {
"node": "ac434d1aa45d689cd6548426012b0385b269296a",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1378190: Try to make ServoRestyleManager easier to follow. r=heycam\n\nMozReview-Commit-ID: B9bw23n2jUe",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1056,
"line": "                              aNameSpaceID,\n",
"lineno": 1413,
"revdate": [1499188564.0, -7200]
}, {
"node": "ac434d1aa45d689cd6548426012b0385b269296a",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1378190: Try to make ServoRestyleManager easier to follow. r=heycam\n\nMozReview-Commit-ID: B9bw23n2jUe",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1057,
"line": "                              aAttribute,\n",
"lineno": 1414,
"revdate": [1499188564.0, -7200]
}, {
"node": "ac434d1aa45d689cd6548426012b0385b269296a",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1378190: Try to make ServoRestyleManager easier to follow. r=heycam\n\nMozReview-Commit-ID: B9bw23n2jUe",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1058,
"line": "                              &influencesOtherPseudoClassState)) {\n",
"lineno": 1415,
"revdate": [1499188564.0, -7200]
}, {
"node": "cde7eed4820808907b2102cb177e7744d95bb804",
"author": "Cameron McCormack \u003ccam@mcc.id.au\u003e",
"desc": "Bug 1352306 - Part 1: stylo: Only snapshot attributes if there is some rule that depends on that attribute. r=emilio\n\nMozReview-Commit-ID: Emey96ovc2a",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 827,
"line": "    return;\n",
"lineno": 1416,
"revdate": [1494230671.0, -28800]
}, {
"node": "cde7eed4820808907b2102cb177e7744d95bb804",
"author": "Cameron McCormack \u003ccam@mcc.id.au\u003e",
"desc": "Bug 1352306 - Part 1: stylo: Only snapshot attributes if there is some rule that depends on that attribute. r=emilio\n\nMozReview-Commit-ID: Emey96ovc2a",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 828,
"line": "  }\n",
"lineno": 1417,
"revdate": [1494230671.0, -28800]
}, {
"node": "cde7eed4820808907b2102cb177e7744d95bb804",
"author": "Cameron McCormack \u003ccam@mcc.id.au\u003e",
"desc": "Bug 1352306 - Part 1: stylo: Only snapshot attributes if there is some rule that depends on that attribute. r=emilio\n\nMozReview-Commit-ID: Emey96ovc2a",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 829,
"line": "\n",
"lineno": 1418,
"revdate": [1494230671.0, -28800]
}, {
"node": "b46807aa128f157b740142528e1e6eb5cf436f50",
"author": "Wei-Cheng Pan \u003cwpan@mozilla.com\u003e",
"desc": "Bug 1366964 - Update style context generation after style resolved. r=heycam\n\nAdds another restyle generation which represents the dirty state of raw\nstyle changes, so that getComputedStyle() wont be confused by optimizations\nmade by style engines.\n\nMozReview-Commit-ID: 7RYeNCzFygO",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1049,
"line": "  // We cannot tell if the attribute change will affect the styles of\n",
"lineno": 1419,
"revdate": [1495520027.0, -28800]
}, {
"node": "b46807aa128f157b740142528e1e6eb5cf436f50",
"author": "Wei-Cheng Pan \u003cwpan@mozilla.com\u003e",
"desc": "Bug 1366964 - Update style context generation after style resolved. r=heycam\n\nAdds another restyle generation which represents the dirty state of raw\nstyle changes, so that getComputedStyle() wont be confused by optimizations\nmade by style engines.\n\nMozReview-Commit-ID: 7RYeNCzFygO",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1050,
"line": "  // undisplayed elements, because we don't actually restyle those elements\n",
"lineno": 1420,
"revdate": [1495520027.0, -28800]
}, {
"node": "b46807aa128f157b740142528e1e6eb5cf436f50",
"author": "Wei-Cheng Pan \u003cwpan@mozilla.com\u003e",
"desc": "Bug 1366964 - Update style context generation after style resolved. r=heycam\n\nAdds another restyle generation which represents the dirty state of raw\nstyle changes, so that getComputedStyle() wont be confused by optimizations\nmade by style engines.\n\nMozReview-Commit-ID: 7RYeNCzFygO",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1051,
"line": "  // during the restyle traversal. So just assume that the attribute change can\n",
"lineno": 1421,
"revdate": [1495520027.0, -28800]
}, {
"node": "b46807aa128f157b740142528e1e6eb5cf436f50",
"author": "Wei-Cheng Pan \u003cwpan@mozilla.com\u003e",
"desc": "Bug 1366964 - Update style context generation after style resolved. r=heycam\n\nAdds another restyle generation which represents the dirty state of raw\nstyle changes, so that getComputedStyle() wont be confused by optimizations\nmade by style engines.\n\nMozReview-Commit-ID: 7RYeNCzFygO",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1052,
"line": "  // cause the style to change.\n",
"lineno": 1422,
"revdate": [1495520027.0, -28800]
}, {
"node": "b46807aa128f157b740142528e1e6eb5cf436f50",
"author": "Wei-Cheng Pan \u003cwpan@mozilla.com\u003e",
"desc": "Bug 1366964 - Update style context generation after style resolved. r=heycam\n\nAdds another restyle generation which represents the dirty state of raw\nstyle changes, so that getComputedStyle() wont be confused by optimizations\nmade by style engines.\n\nMozReview-Commit-ID: 7RYeNCzFygO",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1053,
"line": "  IncrementUndisplayedRestyleGeneration();\n",
"lineno": 1423,
"revdate": [1495520027.0, -28800]
}, {
"node": "b46807aa128f157b740142528e1e6eb5cf436f50",
"author": "Wei-Cheng Pan \u003cwpan@mozilla.com\u003e",
"desc": "Bug 1366964 - Update style context generation after style resolved. r=heycam\n\nAdds another restyle generation which represents the dirty state of raw\nstyle changes, so that getComputedStyle() wont be confused by optimizations\nmade by style engines.\n\nMozReview-Commit-ID: 7RYeNCzFygO",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1054,
"line": "\n",
"lineno": 1424,
"revdate": [1495520027.0, -28800]
}, {
"node": "864d977c8bc473c05d3602d37b284a9df7c75b9a",
"author": "Boris Chiou \u003cboris.chiou@gmail.com\u003e",
"desc": "Bug 1383998 - Increase animation generation if attributes are changed. r=heycam\n\nWe have to set mHaveNonAnimationRestyles if we have attributes changed\n(note: we increase the animation generation only if mHaveNonAnimationRestyles\nis set). Attributes changed may create a new transition, and we use the\nanimation generation as the order of the transition, so\nElement::GetAnimations() can return transitions with correct order.\n\nBesides, I think ContentStateChanged() will not trigger a new\ntransition, so we don't need to make mHaveNonAnimationRestyles there.\n\nMozReview-Commit-ID: J5XgW8nqeLH",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1172,
"line": "  // Some other random attribute changes may also affect the transitions,\n",
"lineno": 1425,
"revdate": [1501645421.0, -28800]
}, {
"node": "864d977c8bc473c05d3602d37b284a9df7c75b9a",
"author": "Boris Chiou \u003cboris.chiou@gmail.com\u003e",
"desc": "Bug 1383998 - Increase animation generation if attributes are changed. r=heycam\n\nWe have to set mHaveNonAnimationRestyles if we have attributes changed\n(note: we increase the animation generation only if mHaveNonAnimationRestyles\nis set). Attributes changed may create a new transition, and we use the\nanimation generation as the order of the transition, so\nElement::GetAnimations() can return transitions with correct order.\n\nBesides, I think ContentStateChanged() will not trigger a new\ntransition, so we don't need to make mHaveNonAnimationRestyles there.\n\nMozReview-Commit-ID: J5XgW8nqeLH",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1173,
"line": "  // so we also set this true here.\n",
"lineno": 1426,
"revdate": [1501645421.0, -28800]
}, {
"node": "864d977c8bc473c05d3602d37b284a9df7c75b9a",
"author": "Boris Chiou \u003cboris.chiou@gmail.com\u003e",
"desc": "Bug 1383998 - Increase animation generation if attributes are changed. r=heycam\n\nWe have to set mHaveNonAnimationRestyles if we have attributes changed\n(note: we increase the animation generation only if mHaveNonAnimationRestyles\nis set). Attributes changed may create a new transition, and we use the\nanimation generation as the order of the transition, so\nElement::GetAnimations() can return transitions with correct order.\n\nBesides, I think ContentStateChanged() will not trigger a new\ntransition, so we don't need to make mHaveNonAnimationRestyles there.\n\nMozReview-Commit-ID: J5XgW8nqeLH",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1174,
"line": "  mHaveNonAnimationRestyles = true;\n",
"lineno": 1427,
"revdate": [1501645421.0, -28800]
}, {
"node": "864d977c8bc473c05d3602d37b284a9df7c75b9a",
"author": "Boris Chiou \u003cboris.chiou@gmail.com\u003e",
"desc": "Bug 1383998 - Increase animation generation if attributes are changed. r=heycam\n\nWe have to set mHaveNonAnimationRestyles if we have attributes changed\n(note: we increase the animation generation only if mHaveNonAnimationRestyles\nis set). Attributes changed may create a new transition, and we use the\nanimation generation as the order of the transition, so\nElement::GetAnimations() can return transitions with correct order.\n\nBesides, I think ContentStateChanged() will not trigger a new\ntransition, so we don't need to make mHaveNonAnimationRestyles there.\n\nMozReview-Commit-ID: J5XgW8nqeLH",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1175,
"line": "\n",
"lineno": 1428,
"revdate": [1501645421.0, -28800]
}, {
"node": "2150351429b5c9515589facd9f2aefb1e4640842",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1355343: Take all the snapshots into account. r=bholley\n\nI've chosen this approach mainly because there's no other good way to guarantee\nthe model is correct than holding the snapshots alive until a style refresh.\n\nWhat I tried before this (storing them in a sort of \"immutable element data\") is\na pain, since we call into style from the frame constructor and other content\nnotifications, which makes keeping track of which snapshots should be cleared an\nwhich shouldn't an insane task.\n\nIdeally we'd have a single entry-point for style, but that's not the case right\nnow, and changing that requires pretty non-trivial changes to the frame\nconstructor.\n\nMozReview-Commit-ID: FF1KWZv2iBM",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 613,
"line": "  ServoElementSnapshot& snapshot = SnapshotFor(aElement);\n",
"lineno": 1429,
"revdate": [1494167807.0, -7200]
}, {
"node": "e2c830394d47b4be291527136f95947704e06fd9",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1368240: Record whether an snapshot is recording a class attribute change or id change. r=heycam\n\nI'll use this information in order to get fewer dependencies out of the\ndependency set.\n\nMozReview-Commit-ID: 5HlmKmSNO8p\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 804,
"line": "  snapshot.AddAttrs(aElement, aNameSpaceID, aAttribute);\n",
"lineno": 1430,
"revdate": [1497021389.0, -7200]
}, {
"node": "2150351429b5c9515589facd9f2aefb1e4640842",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1355343: Take all the snapshots into account. r=bholley\n\nI've chosen this approach mainly because there's no other good way to guarantee\nthe model is correct than holding the snapshots alive until a style refresh.\n\nWhat I tried before this (storing them in a sort of \"immutable element data\") is\na pain, since we call into style from the frame constructor and other content\nnotifications, which makes keeping track of which snapshots should be cleared an\nwhich shouldn't an insane task.\n\nIdeally we'd have a single entry-point for style, but that's not the case right\nnow, and changing that requires pretty non-trivial changes to the frame\nconstructor.\n\nMozReview-Commit-ID: FF1KWZv2iBM",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 615,
"line": "\n",
"lineno": 1431,
"revdate": [1494167807.0, -7200]
}, {
"node": "cde7eed4820808907b2102cb177e7744d95bb804",
"author": "Cameron McCormack \u003ccam@mcc.id.au\u003e",
"desc": "Bug 1352306 - Part 1: stylo: Only snapshot attributes if there is some rule that depends on that attribute. r=emilio\n\nMozReview-Commit-ID: Emey96ovc2a",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 833,
"line": "  if (influencesOtherPseudoClassState) {\n",
"lineno": 1432,
"revdate": [1494230671.0, -28800]
}, {
"node": "ce1f1e2027ef040d0ae0f7540392d453f6515f95",
"author": "Cameron McCormack \u003ccam@mcc.id.au\u003e",
"desc": "Bug 1365159 - Part 1: Record :-moz-browser-frame and :-moz-table-border-nonzero state on snapshots. r=emilio\n\nMozReview-Commit-ID: BEglHnXhpYJ",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 781,
"line": "    snapshot.AddOtherPseudoClassState(aElement);\n",
"lineno": 1433,
"revdate": [1496643570.0, -28800]
}, {
"node": "ce1f1e2027ef040d0ae0f7540392d453f6515f95",
"author": "Cameron McCormack \u003ccam@mcc.id.au\u003e",
"desc": "Bug 1365159 - Part 1: Record :-moz-browser-frame and :-moz-table-border-nonzero state on snapshots. r=emilio\n\nMozReview-Commit-ID: BEglHnXhpYJ",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 782,
"line": "  }\n",
"lineno": 1434,
"revdate": [1496643570.0, -28800]
}, {
"node": "f3ab6216d197647011cc48b90fff685cb875c983",
"author": "Cameron McCormack \u003ccam@mcc.id.au\u003e",
"desc": "Bug 1248864 - Part 2: Add skeleton ServoRestyleManager and a RestyleManagerHandle smart pointer. r=dholbert",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 90,
"line": "}\n",
"lineno": 1435,
"revdate": [1456297272.0, -39600]
}, {
"node": "f3ab6216d197647011cc48b90fff685cb875c983",
"author": "Cameron McCormack \u003ccam@mcc.id.au\u003e",
"desc": "Bug 1248864 - Part 2: Add skeleton ServoRestyleManager and a RestyleManagerHandle smart pointer. r=dholbert",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 91,
"line": "\n",
"lineno": 1436,
"revdate": [1456297272.0, -39600]
}, {
"node": "ac434d1aa45d689cd6548426012b0385b269296a",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1378190: Try to make ServoRestyleManager easier to follow. r=heycam\n\nMozReview-Commit-ID: B9bw23n2jUe",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1074,
"line": "// For some attribute changes we must restyle the whole subtree:\n",
"lineno": 1437,
"revdate": [1499188564.0, -7200]
}, {
"node": "ac434d1aa45d689cd6548426012b0385b269296a",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1378190: Try to make ServoRestyleManager easier to follow. r=heycam\n\nMozReview-Commit-ID: B9bw23n2jUe",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1075,
"line": "//\n",
"lineno": 1438,
"revdate": [1499188564.0, -7200]
}, {
"node": "ac434d1aa45d689cd6548426012b0385b269296a",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1378190: Try to make ServoRestyleManager easier to follow. r=heycam\n\nMozReview-Commit-ID: B9bw23n2jUe",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1076,
"line": "// * \u003ctd\u003e is affected by the cellpadding on its ancestor table\n",
"lineno": 1439,
"revdate": [1499188564.0, -7200]
}, {
"node": "7adafef3b02d5e866085b37dddd52bebe0de056f",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1417281 part 1 - Trigger subtree restyle when lwtheme / lwthemetextcolor attribute on root element of XUL document is changed. r=heycam\n\nMozReview-Commit-ID: 2RM3ZkWKiSl",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1425,
"line": "// * lwtheme and lwthemetextcolor on root element of XUL document\n",
"lineno": 1440,
"revdate": [1510710791.0, 28800]
}, {
"node": "7adafef3b02d5e866085b37dddd52bebe0de056f",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1417281 part 1 - Trigger subtree restyle when lwtheme / lwthemetextcolor attribute on root element of XUL document is changed. r=heycam\n\nMozReview-Commit-ID: 2RM3ZkWKiSl",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1426,
"line": "//   affects all descendants due to :-moz-lwtheme* pseudo-classes\n",
"lineno": 1441,
"revdate": [1510710791.0, 28800]
}, {
"node": "ac434d1aa45d689cd6548426012b0385b269296a",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1378190: Try to make ServoRestyleManager easier to follow. r=heycam\n\nMozReview-Commit-ID: B9bw23n2jUe",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1077,
"line": "// * lang=\"\" and xml:lang=\"\" can affect all descendants due to :lang()\n",
"lineno": 1442,
"revdate": [1499188564.0, -7200]
}, {
"node": "ac434d1aa45d689cd6548426012b0385b269296a",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1378190: Try to make ServoRestyleManager easier to follow. r=heycam\n\nMozReview-Commit-ID: B9bw23n2jUe",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1078,
"line": "//\n",
"lineno": 1443,
"revdate": [1499188564.0, -7200]
}, {
"node": "ac434d1aa45d689cd6548426012b0385b269296a",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1378190: Try to make ServoRestyleManager easier to follow. r=heycam\n\nMozReview-Commit-ID: B9bw23n2jUe",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1079,
"line": "static inline bool\n",
"lineno": 1444,
"revdate": [1499188564.0, -7200]
}, {
"node": "67a8e12324569dd730347187e2ffccae486c758b",
"author": "Nicholas Nethercote \u003cnnethercote@mozilla.com\u003e",
"desc": "Bug 1400460 - Rename nsIAtom as nsAtom. r=hiro.\n\n(Path is actually r=froydnj.)\n\nBug 1400459 devirtualized nsIAtom so that it is no longer a subclass of\nnsISupports. This means that nsAtom is now a better name for it than nsIAtom.\n\nMozReview-Commit-ID: 91U22X2NydP",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1403,
"line": "AttributeChangeRequiresSubtreeRestyle(const Element& aElement, nsAtom* aAttr)\n",
"lineno": 1445,
"revdate": [1506981919.0, -39600]
}, {
"node": "ac434d1aa45d689cd6548426012b0385b269296a",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1378190: Try to make ServoRestyleManager easier to follow. r=heycam\n\nMozReview-Commit-ID: B9bw23n2jUe",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1081,
"line": "{\n",
"lineno": 1446,
"revdate": [1499188564.0, -7200]
}, {
"node": "ac434d1aa45d689cd6548426012b0385b269296a",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1378190: Try to make ServoRestyleManager easier to follow. r=heycam\n\nMozReview-Commit-ID: B9bw23n2jUe",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1082,
"line": "  if (aAttr == nsGkAtoms::cellpadding) {\n",
"lineno": 1447,
"revdate": [1499188564.0, -7200]
}, {
"node": "ac434d1aa45d689cd6548426012b0385b269296a",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1378190: Try to make ServoRestyleManager easier to follow. r=heycam\n\nMozReview-Commit-ID: B9bw23n2jUe",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1083,
"line": "    return aElement.IsHTMLElement(nsGkAtoms::table);\n",
"lineno": 1448,
"revdate": [1499188564.0, -7200]
}, {
"node": "ac434d1aa45d689cd6548426012b0385b269296a",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1378190: Try to make ServoRestyleManager easier to follow. r=heycam\n\nMozReview-Commit-ID: B9bw23n2jUe",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1084,
"line": "  }\n",
"lineno": 1449,
"revdate": [1499188564.0, -7200]
}, {
"node": "7adafef3b02d5e866085b37dddd52bebe0de056f",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1417281 part 1 - Trigger subtree restyle when lwtheme / lwthemetextcolor attribute on root element of XUL document is changed. r=heycam\n\nMozReview-Commit-ID: 2RM3ZkWKiSl",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1435,
"line": "  if (aAttr == nsGkAtoms::lwtheme ||\n",
"lineno": 1450,
"revdate": [1510710791.0, 28800]
}, {
"node": "7adafef3b02d5e866085b37dddd52bebe0de056f",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1417281 part 1 - Trigger subtree restyle when lwtheme / lwthemetextcolor attribute on root element of XUL document is changed. r=heycam\n\nMozReview-Commit-ID: 2RM3ZkWKiSl",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1436,
"line": "      aAttr == nsGkAtoms::lwthemetextcolor) {\n",
"lineno": 1451,
"revdate": [1510710791.0, 28800]
}, {
"node": "7adafef3b02d5e866085b37dddd52bebe0de056f",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1417281 part 1 - Trigger subtree restyle when lwtheme / lwthemetextcolor attribute on root element of XUL document is changed. r=heycam\n\nMozReview-Commit-ID: 2RM3ZkWKiSl",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1437,
"line": "    return aElement.GetNameSpaceID() == kNameSpaceID_XUL &&\n",
"lineno": 1452,
"revdate": [1510710791.0, 28800]
}, {
"node": "7adafef3b02d5e866085b37dddd52bebe0de056f",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1417281 part 1 - Trigger subtree restyle when lwtheme / lwthemetextcolor attribute on root element of XUL document is changed. r=heycam\n\nMozReview-Commit-ID: 2RM3ZkWKiSl",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1438,
"line": "      &aElement == aElement.OwnerDoc()-\u003eGetRootElement();\n",
"lineno": 1453,
"revdate": [1510710791.0, 28800]
}, {
"node": "7adafef3b02d5e866085b37dddd52bebe0de056f",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1417281 part 1 - Trigger subtree restyle when lwtheme / lwthemetextcolor attribute on root element of XUL document is changed. r=heycam\n\nMozReview-Commit-ID: 2RM3ZkWKiSl",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1439,
"line": "  }\n",
"lineno": 1454,
"revdate": [1510710791.0, 28800]
}, {
"node": "ac434d1aa45d689cd6548426012b0385b269296a",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1378190: Try to make ServoRestyleManager easier to follow. r=heycam\n\nMozReview-Commit-ID: B9bw23n2jUe",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1085,
"line": "\n",
"lineno": 1455,
"revdate": [1499188564.0, -7200]
}, {
"node": "ac434d1aa45d689cd6548426012b0385b269296a",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1378190: Try to make ServoRestyleManager easier to follow. r=heycam\n\nMozReview-Commit-ID: B9bw23n2jUe",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1086,
"line": "  return aAttr == nsGkAtoms::lang;\n",
"lineno": 1456,
"revdate": [1499188564.0, -7200]
}, {
"node": "ac434d1aa45d689cd6548426012b0385b269296a",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1378190: Try to make ServoRestyleManager easier to follow. r=heycam\n\nMozReview-Commit-ID: B9bw23n2jUe",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1087,
"line": "}\n",
"lineno": 1457,
"revdate": [1499188564.0, -7200]
}, {
"node": "ac434d1aa45d689cd6548426012b0385b269296a",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1378190: Try to make ServoRestyleManager easier to follow. r=heycam\n\nMozReview-Commit-ID: B9bw23n2jUe",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1088,
"line": "\n",
"lineno": 1458,
"revdate": [1499188564.0, -7200]
}, {
"node": "fcbd28c7f79e70376d9e51629611acc8771ee8f6",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1294299 part 13 - Post restyle event with style attribute hint for style change. r=heycam\n\nMozReview-Commit-ID: 8quLmF0xaxv",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 516,
"line": "void\n",
"lineno": 1459,
"revdate": [1478144462.0, -39600]
}, {
"node": "fcbd28c7f79e70376d9e51629611acc8771ee8f6",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1294299 part 13 - Post restyle event with style attribute hint for style change. r=heycam\n\nMozReview-Commit-ID: 8quLmF0xaxv",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 517,
"line": "ServoRestyleManager::AttributeChanged(Element* aElement, int32_t aNameSpaceID,\n",
"lineno": 1460,
"revdate": [1478144462.0, -39600]
}, {
"node": "67a8e12324569dd730347187e2ffccae486c758b",
"author": "Nicholas Nethercote \u003cnnethercote@mozilla.com\u003e",
"desc": "Bug 1400460 - Rename nsIAtom as nsAtom. r=hiro.\n\n(Path is actually r=froydnj.)\n\nBug 1400459 devirtualized nsIAtom so that it is no longer a subclass of\nnsISupports. This means that nsAtom is now a better name for it than nsIAtom.\n\nMozReview-Commit-ID: 91U22X2NydP",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1414,
"line": "                                      nsAtom* aAttribute, int32_t aModType,\n",
"lineno": 1461,
"revdate": [1506981919.0, -39600]
}, {
"node": "fcbd28c7f79e70376d9e51629611acc8771ee8f6",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1294299 part 13 - Post restyle event with style attribute hint for style change. r=heycam\n\nMozReview-Commit-ID: 8quLmF0xaxv",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 519,
"line": "                                      const nsAttrValue* aOldValue)\n",
"lineno": 1462,
"revdate": [1478144462.0, -39600]
}, {
"node": "fcbd28c7f79e70376d9e51629611acc8771ee8f6",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1294299 part 13 - Post restyle event with style attribute hint for style change. r=heycam\n\nMozReview-Commit-ID: 8quLmF0xaxv",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 520,
"line": "{\n",
"lineno": 1463,
"revdate": [1478144462.0, -39600]
}, {
"node": "3e6477d932037d6026ac13bd8c988dc0a51935d4",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1361766: Move MathML content state changes outside of reflow. r=xidorn\n\nThis also adds assertions to ensure attributes and state don't change during\nlayout or frame construction.\n\nMozReview-Commit-ID: BANcpxnRsYS",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 492,
"line": "  MOZ_ASSERT(!mInStyleRefresh);\n",
"lineno": 1464,
"revdate": [1493757746.0, -7200]
}, {
"node": "be9680762d61aa27f8591def0ae875b3cdc62fca",
"author": "Ting-Yu Lin \u003ctlin@mozilla.com\u003e",
"desc": "Bug 1354975 - Let the frame handles attribute change in ServoRestyleManager::AttributeChanged(). r=heycam\n\nMozReview-Commit-ID: EdvgBnPlP9Y",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 528,
"line": "\n",
"lineno": 1465,
"revdate": [1491554493.0, -28800]
}, {
"node": "ac434d1aa45d689cd6548426012b0385b269296a",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1378190: Try to make ServoRestyleManager easier to follow. r=heycam\n\nMozReview-Commit-ID: B9bw23n2jUe",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1100,
"line": "  auto changeHint = nsChangeHint(0);\n",
"lineno": 1466,
"revdate": [1499188564.0, -7200]
}, {
"node": "ac434d1aa45d689cd6548426012b0385b269296a",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1378190: Try to make ServoRestyleManager easier to follow. r=heycam\n\nMozReview-Commit-ID: B9bw23n2jUe",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1101,
"line": "  auto restyleHint = nsRestyleHint(0);\n",
"lineno": 1467,
"revdate": [1499188564.0, -7200]
}, {
"node": "ac434d1aa45d689cd6548426012b0385b269296a",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1378190: Try to make ServoRestyleManager easier to follow. r=heycam\n\nMozReview-Commit-ID: B9bw23n2jUe",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1102,
"line": "\n",
"lineno": 1468,
"revdate": [1499188564.0, -7200]
}, {
"node": "ac434d1aa45d689cd6548426012b0385b269296a",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1378190: Try to make ServoRestyleManager easier to follow. r=heycam\n\nMozReview-Commit-ID: B9bw23n2jUe",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1103,
"line": "  changeHint |= aElement-\u003eGetAttributeChangeHint(aAttribute, aModType);\n",
"lineno": 1469,
"revdate": [1499188564.0, -7200]
}, {
"node": "f21116c45c78de76f8e1811a2894c988db939fdf",
"author": "Hiroyuki Ikezoe \u003chikezoe@mozilla.com\u003e",
"desc": "Bug 1356916 - Call PostRestyleEvent() with the change hint obtained by Element::GetAttributeChangeHint in ServoRestyleManager::AttributeChanged. r=heycam\n\nMozReview-Commit-ID: 14clm0eE0iE",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 638,
"line": "\n",
"lineno": 1470,
"revdate": [1494455434.0, -32400]
}, {
"node": "fcbd28c7f79e70376d9e51629611acc8771ee8f6",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1294299 part 13 - Post restyle event with style attribute hint for style change. r=heycam\n\nMozReview-Commit-ID: 8quLmF0xaxv",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 522,
"line": "  if (aAttribute == nsGkAtoms::style) {\n",
"lineno": 1471,
"revdate": [1478144462.0, -39600]
}, {
"node": "ac434d1aa45d689cd6548426012b0385b269296a",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1378190: Try to make ServoRestyleManager easier to follow. r=heycam\n\nMozReview-Commit-ID: B9bw23n2jUe",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1106,
"line": "    restyleHint |= eRestyle_StyleAttribute;\n",
"lineno": 1472,
"revdate": [1499188564.0, -7200]
}, {
"node": "ac434d1aa45d689cd6548426012b0385b269296a",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1378190: Try to make ServoRestyleManager easier to follow. r=heycam\n\nMozReview-Commit-ID: B9bw23n2jUe",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1107,
"line": "  } else if (AttributeChangeRequiresSubtreeRestyle(*aElement, aAttribute)) {\n",
"lineno": 1473,
"revdate": [1499188564.0, -7200]
}, {
"node": "ac434d1aa45d689cd6548426012b0385b269296a",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1378190: Try to make ServoRestyleManager easier to follow. r=heycam\n\nMozReview-Commit-ID: B9bw23n2jUe",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1108,
"line": "    restyleHint |= eRestyle_Subtree;\n",
"lineno": 1474,
"revdate": [1499188564.0, -7200]
}, {
"node": "ac434d1aa45d689cd6548426012b0385b269296a",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1378190: Try to make ServoRestyleManager easier to follow. r=heycam\n\nMozReview-Commit-ID: B9bw23n2jUe",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1109,
"line": "  } else if (aElement-\u003eIsAttributeMapped(aAttribute)) {\n",
"lineno": 1475,
"revdate": [1499188564.0, -7200]
}, {
"node": "ac434d1aa45d689cd6548426012b0385b269296a",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1378190: Try to make ServoRestyleManager easier to follow. r=heycam\n\nMozReview-Commit-ID: B9bw23n2jUe",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1110,
"line": "    restyleHint |= eRestyle_Self;\n",
"lineno": 1476,
"revdate": [1499188564.0, -7200]
}, {
"node": "fcbd28c7f79e70376d9e51629611acc8771ee8f6",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1294299 part 13 - Post restyle event with style attribute hint for style change. r=heycam\n\nMozReview-Commit-ID: 8quLmF0xaxv",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 524,
"line": "  }\n",
"lineno": 1477,
"revdate": [1478144462.0, -39600]
}, {
"node": "53c186e01b1295b5781820ef5f4d7460a0de7a64",
"author": "Cameron McCormack \u003ccam@mcc.id.au\u003e",
"desc": "Bug 1365162 - Part 1: Restyle entire subtree when lang=\"\" or xml:lang=\"\" changes. r=emilio\n\nMozReview-Commit-ID: 46YSGTxjshc",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 822,
"line": "\n",
"lineno": 1478,
"revdate": [1496639119.0, -28800]
}, {
"node": "d0c7f8a95402b8da3cdd7d784e6a776e0068afd7",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1417824 part 1 - Query theme for attribute change on element with appearance. r=heycam\n\nThe change is mostly copied from GeckoRestyleManager::AttributeChanged.\nIt is not clear to me whether it's worth moving it to the superclass so\nthat we don't duplicate the code. If we are removing the Gecko code in\nshort term, it probably doesn't matter.\n\nIt is also not clear whether we should port other code from that method\nto ServoRestyleManager.\n\nMozReview-Commit-ID: Fd1nbwgLGa1",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1464,
"line": "  if (nsIFrame* primaryFrame = aElement-\u003eGetPrimaryFrame()) {\n",
"lineno": 1479,
"revdate": [1511386512.0, 21600]
}, {
"node": "d0c7f8a95402b8da3cdd7d784e6a776e0068afd7",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1417824 part 1 - Query theme for attribute change on element with appearance. r=heycam\n\nThe change is mostly copied from GeckoRestyleManager::AttributeChanged.\nIt is not clear to me whether it's worth moving it to the superclass so\nthat we don't duplicate the code. If we are removing the Gecko code in\nshort term, it probably doesn't matter.\n\nIt is also not clear whether we should port other code from that method\nto ServoRestyleManager.\n\nMozReview-Commit-ID: Fd1nbwgLGa1",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1465,
"line": "    // See if we have appearance information for a theme.\n",
"lineno": 1480,
"revdate": [1511386512.0, 21600]
}, {
"node": "d0c7f8a95402b8da3cdd7d784e6a776e0068afd7",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1417824 part 1 - Query theme for attribute change on element with appearance. r=heycam\n\nThe change is mostly copied from GeckoRestyleManager::AttributeChanged.\nIt is not clear to me whether it's worth moving it to the superclass so\nthat we don't duplicate the code. If we are removing the Gecko code in\nshort term, it probably doesn't matter.\n\nIt is also not clear whether we should port other code from that method\nto ServoRestyleManager.\n\nMozReview-Commit-ID: Fd1nbwgLGa1",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1466,
"line": "    const nsStyleDisplay* disp = primaryFrame-\u003eStyleDisplay();\n",
"lineno": 1481,
"revdate": [1511386512.0, 21600]
}, {
"node": "d0c7f8a95402b8da3cdd7d784e6a776e0068afd7",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1417824 part 1 - Query theme for attribute change on element with appearance. r=heycam\n\nThe change is mostly copied from GeckoRestyleManager::AttributeChanged.\nIt is not clear to me whether it's worth moving it to the superclass so\nthat we don't duplicate the code. If we are removing the Gecko code in\nshort term, it probably doesn't matter.\n\nIt is also not clear whether we should port other code from that method\nto ServoRestyleManager.\n\nMozReview-Commit-ID: Fd1nbwgLGa1",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1467,
"line": "    if (disp-\u003emAppearance) {\n",
"lineno": 1482,
"revdate": [1511386512.0, 21600]
}, {
"node": "d0c7f8a95402b8da3cdd7d784e6a776e0068afd7",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1417824 part 1 - Query theme for attribute change on element with appearance. r=heycam\n\nThe change is mostly copied from GeckoRestyleManager::AttributeChanged.\nIt is not clear to me whether it's worth moving it to the superclass so\nthat we don't duplicate the code. If we are removing the Gecko code in\nshort term, it probably doesn't matter.\n\nIt is also not clear whether we should port other code from that method\nto ServoRestyleManager.\n\nMozReview-Commit-ID: Fd1nbwgLGa1",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1468,
"line": "      nsITheme* theme = PresContext()-\u003eGetTheme();\n",
"lineno": 1483,
"revdate": [1511386512.0, 21600]
}, {
"node": "d0c7f8a95402b8da3cdd7d784e6a776e0068afd7",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1417824 part 1 - Query theme for attribute change on element with appearance. r=heycam\n\nThe change is mostly copied from GeckoRestyleManager::AttributeChanged.\nIt is not clear to me whether it's worth moving it to the superclass so\nthat we don't duplicate the code. If we are removing the Gecko code in\nshort term, it probably doesn't matter.\n\nIt is also not clear whether we should port other code from that method\nto ServoRestyleManager.\n\nMozReview-Commit-ID: Fd1nbwgLGa1",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1469,
"line": "      if (theme && theme-\u003eThemeSupportsWidget(PresContext(), primaryFrame,\n",
"lineno": 1484,
"revdate": [1511386512.0, 21600]
}, {
"node": "d0c7f8a95402b8da3cdd7d784e6a776e0068afd7",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1417824 part 1 - Query theme for attribute change on element with appearance. r=heycam\n\nThe change is mostly copied from GeckoRestyleManager::AttributeChanged.\nIt is not clear to me whether it's worth moving it to the superclass so\nthat we don't duplicate the code. If we are removing the Gecko code in\nshort term, it probably doesn't matter.\n\nIt is also not clear whether we should port other code from that method\nto ServoRestyleManager.\n\nMozReview-Commit-ID: Fd1nbwgLGa1",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1470,
"line": "                                              disp-\u003emAppearance)) {\n",
"lineno": 1485,
"revdate": [1511386512.0, 21600]
}, {
"node": "d0c7f8a95402b8da3cdd7d784e6a776e0068afd7",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1417824 part 1 - Query theme for attribute change on element with appearance. r=heycam\n\nThe change is mostly copied from GeckoRestyleManager::AttributeChanged.\nIt is not clear to me whether it's worth moving it to the superclass so\nthat we don't duplicate the code. If we are removing the Gecko code in\nshort term, it probably doesn't matter.\n\nIt is also not clear whether we should port other code from that method\nto ServoRestyleManager.\n\nMozReview-Commit-ID: Fd1nbwgLGa1",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1471,
"line": "        bool repaint = false;\n",
"lineno": 1486,
"revdate": [1511386512.0, 21600]
}, {
"node": "d0c7f8a95402b8da3cdd7d784e6a776e0068afd7",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1417824 part 1 - Query theme for attribute change on element with appearance. r=heycam\n\nThe change is mostly copied from GeckoRestyleManager::AttributeChanged.\nIt is not clear to me whether it's worth moving it to the superclass so\nthat we don't duplicate the code. If we are removing the Gecko code in\nshort term, it probably doesn't matter.\n\nIt is also not clear whether we should port other code from that method\nto ServoRestyleManager.\n\nMozReview-Commit-ID: Fd1nbwgLGa1",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1472,
"line": "        theme-\u003eWidgetStateChanged(primaryFrame, disp-\u003emAppearance,\n",
"lineno": 1487,
"revdate": [1511386512.0, 21600]
}, {
"node": "d0c7f8a95402b8da3cdd7d784e6a776e0068afd7",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1417824 part 1 - Query theme for attribute change on element with appearance. r=heycam\n\nThe change is mostly copied from GeckoRestyleManager::AttributeChanged.\nIt is not clear to me whether it's worth moving it to the superclass so\nthat we don't duplicate the code. If we are removing the Gecko code in\nshort term, it probably doesn't matter.\n\nIt is also not clear whether we should port other code from that method\nto ServoRestyleManager.\n\nMozReview-Commit-ID: Fd1nbwgLGa1",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1473,
"line": "                                  aAttribute, &repaint, aOldValue);\n",
"lineno": 1488,
"revdate": [1511386512.0, 21600]
}, {
"node": "d0c7f8a95402b8da3cdd7d784e6a776e0068afd7",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1417824 part 1 - Query theme for attribute change on element with appearance. r=heycam\n\nThe change is mostly copied from GeckoRestyleManager::AttributeChanged.\nIt is not clear to me whether it's worth moving it to the superclass so\nthat we don't duplicate the code. If we are removing the Gecko code in\nshort term, it probably doesn't matter.\n\nIt is also not clear whether we should port other code from that method\nto ServoRestyleManager.\n\nMozReview-Commit-ID: Fd1nbwgLGa1",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1474,
"line": "        if (repaint) {\n",
"lineno": 1489,
"revdate": [1511386512.0, 21600]
}, {
"node": "d0c7f8a95402b8da3cdd7d784e6a776e0068afd7",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1417824 part 1 - Query theme for attribute change on element with appearance. r=heycam\n\nThe change is mostly copied from GeckoRestyleManager::AttributeChanged.\nIt is not clear to me whether it's worth moving it to the superclass so\nthat we don't duplicate the code. If we are removing the Gecko code in\nshort term, it probably doesn't matter.\n\nIt is also not clear whether we should port other code from that method\nto ServoRestyleManager.\n\nMozReview-Commit-ID: Fd1nbwgLGa1",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1475,
"line": "          changeHint |= nsChangeHint_RepaintFrame;\n",
"lineno": 1490,
"revdate": [1511386512.0, 21600]
}, {
"node": "d0c7f8a95402b8da3cdd7d784e6a776e0068afd7",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1417824 part 1 - Query theme for attribute change on element with appearance. r=heycam\n\nThe change is mostly copied from GeckoRestyleManager::AttributeChanged.\nIt is not clear to me whether it's worth moving it to the superclass so\nthat we don't duplicate the code. If we are removing the Gecko code in\nshort term, it probably doesn't matter.\n\nIt is also not clear whether we should port other code from that method\nto ServoRestyleManager.\n\nMozReview-Commit-ID: Fd1nbwgLGa1",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1476,
"line": "        }\n",
"lineno": 1491,
"revdate": [1511386512.0, 21600]
}, {
"node": "d0c7f8a95402b8da3cdd7d784e6a776e0068afd7",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1417824 part 1 - Query theme for attribute change on element with appearance. r=heycam\n\nThe change is mostly copied from GeckoRestyleManager::AttributeChanged.\nIt is not clear to me whether it's worth moving it to the superclass so\nthat we don't duplicate the code. If we are removing the Gecko code in\nshort term, it probably doesn't matter.\n\nIt is also not clear whether we should port other code from that method\nto ServoRestyleManager.\n\nMozReview-Commit-ID: Fd1nbwgLGa1",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1477,
"line": "      }\n",
"lineno": 1492,
"revdate": [1511386512.0, 21600]
}, {
"node": "d0c7f8a95402b8da3cdd7d784e6a776e0068afd7",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1417824 part 1 - Query theme for attribute change on element with appearance. r=heycam\n\nThe change is mostly copied from GeckoRestyleManager::AttributeChanged.\nIt is not clear to me whether it's worth moving it to the superclass so\nthat we don't duplicate the code. If we are removing the Gecko code in\nshort term, it probably doesn't matter.\n\nIt is also not clear whether we should port other code from that method\nto ServoRestyleManager.\n\nMozReview-Commit-ID: Fd1nbwgLGa1",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1478,
"line": "    }\n",
"lineno": 1493,
"revdate": [1511386512.0, 21600]
}, {
"node": "d0c7f8a95402b8da3cdd7d784e6a776e0068afd7",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1417824 part 1 - Query theme for attribute change on element with appearance. r=heycam\n\nThe change is mostly copied from GeckoRestyleManager::AttributeChanged.\nIt is not clear to me whether it's worth moving it to the superclass so\nthat we don't duplicate the code. If we are removing the Gecko code in\nshort term, it probably doesn't matter.\n\nIt is also not clear whether we should port other code from that method\nto ServoRestyleManager.\n\nMozReview-Commit-ID: Fd1nbwgLGa1",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1479,
"line": "\n",
"lineno": 1494,
"revdate": [1511386512.0, 21600]
}, {
"node": "d0c7f8a95402b8da3cdd7d784e6a776e0068afd7",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1417824 part 1 - Query theme for attribute change on element with appearance. r=heycam\n\nThe change is mostly copied from GeckoRestyleManager::AttributeChanged.\nIt is not clear to me whether it's worth moving it to the superclass so\nthat we don't duplicate the code. If we are removing the Gecko code in\nshort term, it probably doesn't matter.\n\nIt is also not clear whether we should port other code from that method\nto ServoRestyleManager.\n\nMozReview-Commit-ID: Fd1nbwgLGa1",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1480,
"line": "    primaryFrame-\u003eAttributeChanged(aNameSpaceID, aAttribute, aModType);\n",
"lineno": 1495,
"revdate": [1511386512.0, 21600]
}, {
"node": "d0c7f8a95402b8da3cdd7d784e6a776e0068afd7",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1417824 part 1 - Query theme for attribute change on element with appearance. r=heycam\n\nThe change is mostly copied from GeckoRestyleManager::AttributeChanged.\nIt is not clear to me whether it's worth moving it to the superclass so\nthat we don't duplicate the code. If we are removing the Gecko code in\nshort term, it probably doesn't matter.\n\nIt is also not clear whether we should port other code from that method\nto ServoRestyleManager.\n\nMozReview-Commit-ID: Fd1nbwgLGa1",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1481,
"line": "  }\n",
"lineno": 1496,
"revdate": [1511386512.0, 21600]
}, {
"node": "d0c7f8a95402b8da3cdd7d784e6a776e0068afd7",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1417824 part 1 - Query theme for attribute change on element with appearance. r=heycam\n\nThe change is mostly copied from GeckoRestyleManager::AttributeChanged.\nIt is not clear to me whether it's worth moving it to the superclass so\nthat we don't duplicate the code. If we are removing the Gecko code in\nshort term, it probably doesn't matter.\n\nIt is also not clear whether we should port other code from that method\nto ServoRestyleManager.\n\nMozReview-Commit-ID: Fd1nbwgLGa1",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1482,
"line": "\n",
"lineno": 1497,
"revdate": [1511386512.0, 21600]
}, {
"node": "ac434d1aa45d689cd6548426012b0385b269296a",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1378190: Try to make ServoRestyleManager easier to follow. r=heycam\n\nMozReview-Commit-ID: B9bw23n2jUe",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1113,
"line": "  if (restyleHint || changeHint) {\n",
"lineno": 1498,
"revdate": [1499188564.0, -7200]
}, {
"node": "ac434d1aa45d689cd6548426012b0385b269296a",
"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e",
"desc": "Bug 1378190: Try to make ServoRestyleManager easier to follow. r=heycam\n\nMozReview-Commit-ID: B9bw23n2jUe",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1114,
"line": "    Servo_NoteExplicitHints(aElement, restyleHint, changeHint);\n",
"lineno": 1499,
"revdate": [1499188564.0, -7200]
}, {
"node": "e212c8b1248b0311eb971db03e45d2eb0e064e5f",
"author": "Manish Goregaokar \u003cmanishearth@gmail.com\u003e",
"desc": "Bug 1341647 - stylo: Move HTMLBodyElement::WalkContentStyleRules to the mapped attr functionality; r=bz\n\nMozReview-Commit-ID: 90qDHl0Ane4",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 538,
"line": "  }\n",
"lineno": 1500,
"revdate": [1490814600.0, 25200]
}, {
"node": "b46807aa128f157b740142528e1e6eb5cf436f50",
"author": "Wei-Cheng Pan \u003cwpan@mozilla.com\u003e",
"desc": "Bug 1366964 - Update style context generation after style resolved. r=heycam\n\nAdds another restyle generation which represents the dirty state of raw\nstyle changes, so that getComputedStyle() wont be confused by optimizations\nmade by style engines.\n\nMozReview-Commit-ID: 7RYeNCzFygO",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1109,
"line": "\n",
"lineno": 1501,
"revdate": [1495520027.0, -28800]
}, {
"node": "b46807aa128f157b740142528e1e6eb5cf436f50",
"author": "Wei-Cheng Pan \u003cwpan@mozilla.com\u003e",
"desc": "Bug 1366964 - Update style context generation after style resolved. r=heycam\n\nAdds another restyle generation which represents the dirty state of raw\nstyle changes, so that getComputedStyle() wont be confused by optimizations\nmade by style engines.\n\nMozReview-Commit-ID: 7RYeNCzFygO",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1110,
"line": "  if (restyleHint) {\n",
"lineno": 1502,
"revdate": [1495520027.0, -28800]
}, {
"node": "b46807aa128f157b740142528e1e6eb5cf436f50",
"author": "Wei-Cheng Pan \u003cwpan@mozilla.com\u003e",
"desc": "Bug 1366964 - Update style context generation after style resolved. r=heycam\n\nAdds another restyle generation which represents the dirty state of raw\nstyle changes, so that getComputedStyle() wont be confused by optimizations\nmade by style engines.\n\nMozReview-Commit-ID: 7RYeNCzFygO",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1111,
"line": "    // Assuming we need to invalidate cached style in getComputedStyle for\n",
"lineno": 1503,
"revdate": [1495520027.0, -28800]
}, {
"node": "b46807aa128f157b740142528e1e6eb5cf436f50",
"author": "Wei-Cheng Pan \u003cwpan@mozilla.com\u003e",
"desc": "Bug 1366964 - Update style context generation after style resolved. r=heycam\n\nAdds another restyle generation which represents the dirty state of raw\nstyle changes, so that getComputedStyle() wont be confused by optimizations\nmade by style engines.\n\nMozReview-Commit-ID: 7RYeNCzFygO",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1112,
"line": "    // undisplayed elements, since we don't know if it is needed.\n",
"lineno": 1504,
"revdate": [1495520027.0, -28800]
}, {
"node": "b46807aa128f157b740142528e1e6eb5cf436f50",
"author": "Wei-Cheng Pan \u003cwpan@mozilla.com\u003e",
"desc": "Bug 1366964 - Update style context generation after style resolved. r=heycam\n\nAdds another restyle generation which represents the dirty state of raw\nstyle changes, so that getComputedStyle() wont be confused by optimizations\nmade by style engines.\n\nMozReview-Commit-ID: 7RYeNCzFygO",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1113,
"line": "    IncrementUndisplayedRestyleGeneration();\n",
"lineno": 1505,
"revdate": [1495520027.0, -28800]
}, {
"node": "864d977c8bc473c05d3602d37b284a9df7c75b9a",
"author": "Boris Chiou \u003cboris.chiou@gmail.com\u003e",
"desc": "Bug 1383998 - Increase animation generation if attributes are changed. r=heycam\n\nWe have to set mHaveNonAnimationRestyles if we have attributes changed\n(note: we increase the animation generation only if mHaveNonAnimationRestyles\nis set). Attributes changed may create a new transition, and we use the\nanimation generation as the order of the transition, so\nElement::GetAnimations() can return transitions with correct order.\n\nBesides, I think ContentStateChanged() will not trigger a new\ntransition, so we don't need to make mHaveNonAnimationRestyles there.\n\nMozReview-Commit-ID: J5XgW8nqeLH",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1235,
"line": "\n",
"lineno": 1506,
"revdate": [1501645421.0, -28800]
}, {
"node": "864d977c8bc473c05d3602d37b284a9df7c75b9a",
"author": "Boris Chiou \u003cboris.chiou@gmail.com\u003e",
"desc": "Bug 1383998 - Increase animation generation if attributes are changed. r=heycam\n\nWe have to set mHaveNonAnimationRestyles if we have attributes changed\n(note: we increase the animation generation only if mHaveNonAnimationRestyles\nis set). Attributes changed may create a new transition, and we use the\nanimation generation as the order of the transition, so\nElement::GetAnimations() can return transitions with correct order.\n\nBesides, I think ContentStateChanged() will not trigger a new\ntransition, so we don't need to make mHaveNonAnimationRestyles there.\n\nMozReview-Commit-ID: J5XgW8nqeLH",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1236,
"line": "    // If we change attributes, we have to mark this to be true, so we will\n",
"lineno": 1507,
"revdate": [1501645421.0, -28800]
}, {
"node": "864d977c8bc473c05d3602d37b284a9df7c75b9a",
"author": "Boris Chiou \u003cboris.chiou@gmail.com\u003e",
"desc": "Bug 1383998 - Increase animation generation if attributes are changed. r=heycam\n\nWe have to set mHaveNonAnimationRestyles if we have attributes changed\n(note: we increase the animation generation only if mHaveNonAnimationRestyles\nis set). Attributes changed may create a new transition, and we use the\nanimation generation as the order of the transition, so\nElement::GetAnimations() can return transitions with correct order.\n\nBesides, I think ContentStateChanged() will not trigger a new\ntransition, so we don't need to make mHaveNonAnimationRestyles there.\n\nMozReview-Commit-ID: J5XgW8nqeLH",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1237,
"line": "    // increase the animation generation for the new created transition if any.\n",
"lineno": 1508,
"revdate": [1501645421.0, -28800]
}, {
"node": "864d977c8bc473c05d3602d37b284a9df7c75b9a",
"author": "Boris Chiou \u003cboris.chiou@gmail.com\u003e",
"desc": "Bug 1383998 - Increase animation generation if attributes are changed. r=heycam\n\nWe have to set mHaveNonAnimationRestyles if we have attributes changed\n(note: we increase the animation generation only if mHaveNonAnimationRestyles\nis set). Attributes changed may create a new transition, and we use the\nanimation generation as the order of the transition, so\nElement::GetAnimations() can return transitions with correct order.\n\nBesides, I think ContentStateChanged() will not trigger a new\ntransition, so we don't need to make mHaveNonAnimationRestyles there.\n\nMozReview-Commit-ID: J5XgW8nqeLH",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1238,
"line": "    mHaveNonAnimationRestyles = true;\n",
"lineno": 1509,
"revdate": [1501645421.0, -28800]
}, {
"node": "b46807aa128f157b740142528e1e6eb5cf436f50",
"author": "Wei-Cheng Pan \u003cwpan@mozilla.com\u003e",
"desc": "Bug 1366964 - Update style context generation after style resolved. r=heycam\n\nAdds another restyle generation which represents the dirty state of raw\nstyle changes, so that getComputedStyle() wont be confused by optimizations\nmade by style engines.\n\nMozReview-Commit-ID: 7RYeNCzFygO",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1114,
"line": "  }\n",
"lineno": 1510,
"revdate": [1495520027.0, -28800]
}, {
"node": "fcbd28c7f79e70376d9e51629611acc8771ee8f6",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1294299 part 13 - Post restyle event with style attribute hint for style change. r=heycam\n\nMozReview-Commit-ID: 8quLmF0xaxv",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 525,
"line": "}\n",
"lineno": 1511,
"revdate": [1478144462.0, -39600]
}, {
"node": "fcbd28c7f79e70376d9e51629611acc8771ee8f6",
"author": "Xidorn Quan \u003cme@upsuper.org\u003e",
"desc": "Bug 1294299 part 13 - Post restyle event with style attribute hint for style change. r=heycam\n\nMozReview-Commit-ID: 8quLmF0xaxv",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 526,
"line": "\n",
"lineno": 1512,
"revdate": [1478144462.0, -39600]
}, {
"node": "f3ab6216d197647011cc48b90fff685cb875c983",
"author": "Cameron McCormack \u003ccam@mcc.id.au\u003e",
"desc": "Bug 1248864 - Part 2: Add skeleton ServoRestyleManager and a RestyleManagerHandle smart pointer. r=dholbert",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 102,
"line": "nsresult\n",
"lineno": 1513,
"revdate": [1456297272.0, -39600]
}, {
"node": "f3ab6216d197647011cc48b90fff685cb875c983",
"author": "Cameron McCormack \u003ccam@mcc.id.au\u003e",
"desc": "Bug 1248864 - Part 2: Add skeleton ServoRestyleManager and a RestyleManagerHandle smart pointer. r=dholbert",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 103,
"line": "ServoRestyleManager::ReparentStyleContext(nsIFrame* aFrame)\n",
"lineno": 1514,
"revdate": [1456297272.0, -39600]
}, {
"node": "f3ab6216d197647011cc48b90fff685cb875c983",
"author": "Cameron McCormack \u003ccam@mcc.id.au\u003e",
"desc": "Bug 1248864 - Part 2: Add skeleton ServoRestyleManager and a RestyleManagerHandle smart pointer. r=dholbert",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 104,
"line": "{\n",
"lineno": 1515,
"revdate": [1456297272.0, -39600]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1188,
"line": "  // This is only called when moving frames in or out of the first-line\n",
"lineno": 1516,
"revdate": [1501290678.0, 14400]
}, {
"node": "1058b3aaa6017f273e7c23e4ac2834bdd9a9162d",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388877.  Fix insertions under a ::first-line in stylo.  r=heycam\n\nMozReview-Commit-ID: CDolJpTtGki",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1439,
"line": "  // pseudo-element (or one of its descendants).  We can't say much about\n",
"lineno": 1517,
"revdate": [1502457083.0, 14400]
}, {
"node": "1058b3aaa6017f273e7c23e4ac2834bdd9a9162d",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388877.  Fix insertions under a ::first-line in stylo.  r=heycam\n\nMozReview-Commit-ID: CDolJpTtGki",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1440,
"line": "  // aFrame's ancestors, unfortunately (e.g. during a dynamic insert into\n",
"lineno": 1518,
"revdate": [1502457083.0, 14400]
}, {
"node": "1058b3aaa6017f273e7c23e4ac2834bdd9a9162d",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388877.  Fix insertions under a ::first-line in stylo.  r=heycam\n\nMozReview-Commit-ID: CDolJpTtGki",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1441,
"line": "  // something inside an inline-block on the first line the ancestors could be\n",
"lineno": 1519,
"revdate": [1502457083.0, 14400]
}, {
"node": "1058b3aaa6017f273e7c23e4ac2834bdd9a9162d",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388877.  Fix insertions under a ::first-line in stylo.  r=heycam\n\nMozReview-Commit-ID: CDolJpTtGki",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1442,
"line": "  // totally arbitrary), but we will definitely find a line frame on the\n",
"lineno": 1520,
"revdate": [1502457083.0, 14400]
}, {
"node": "1058b3aaa6017f273e7c23e4ac2834bdd9a9162d",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388877.  Fix insertions under a ::first-line in stylo.  r=heycam\n\nMozReview-Commit-ID: CDolJpTtGki",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1443,
"line": "  // ancestor chain.  Note that the lineframe may not actually be the one that\n",
"lineno": 1521,
"revdate": [1502457083.0, 14400]
}, {
"node": "1058b3aaa6017f273e7c23e4ac2834bdd9a9162d",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388877.  Fix insertions under a ::first-line in stylo.  r=heycam\n\nMozReview-Commit-ID: CDolJpTtGki",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1444,
"line": "  // corresponds to ::first-line; when we're moving _out_ of the ::first-line it\n",
"lineno": 1522,
"revdate": [1502457083.0, 14400]
}, {
"node": "1058b3aaa6017f273e7c23e4ac2834bdd9a9162d",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1388877.  Fix insertions under a ::first-line in stylo.  r=heycam\n\nMozReview-Commit-ID: CDolJpTtGki",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1445,
"line": "  // will be one of the continuations instead.\n",
"lineno": 1523,
"revdate": [1502457083.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1194,
"line": "#ifdef DEBUG\n",
"lineno": 1524,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1195,
"line": "  {\n",
"lineno": 1525,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1196,
"line": "    nsIFrame* f = aFrame-\u003eGetParent();\n",
"lineno": 1526,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1197,
"line": "    while (f && !f-\u003eIsLineFrame()) {\n",
"lineno": 1527,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1201,
"line": "      f = f-\u003eGetParent();\n",
"lineno": 1528,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1202,
"line": "    }\n",
"lineno": 1529,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1203,
"line": "    MOZ_ASSERT(f, \"Must have found a first-line frame\");\n",
"lineno": 1530,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1204,
"line": "  }\n",
"lineno": 1531,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1205,
"line": "#endif\n",
"lineno": 1532,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1206,
"line": "\n",
"lineno": 1533,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1207,
"line": "  DoReparentStyleContext(aFrame, *StyleSet());\n",
"lineno": 1534,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1208,
"line": "\n",
"lineno": 1535,
"revdate": [1501290678.0, 14400]
}, {
"node": "4d9e30d1dac162a8319e6fd3d63ed47a49709705",
"author": "Cameron McCormack \u003ccam@mcc.id.au\u003e",
"desc": "Bug 1289620 - Stub out ReparentStyleContext. r=bholley\n",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 303,
"line": "  return NS_OK;\n",
"lineno": 1536,
"revdate": [1465542437.0, -36000]
}, {
"node": "f3ab6216d197647011cc48b90fff685cb875c983",
"author": "Cameron McCormack \u003ccam@mcc.id.au\u003e",
"desc": "Bug 1248864 - Part 2: Add skeleton ServoRestyleManager and a RestyleManagerHandle smart pointer. r=dholbert",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 106,
"line": "}\n",
"lineno": 1537,
"revdate": [1456297272.0, -39600]
}, {
"node": "f3ab6216d197647011cc48b90fff685cb875c983",
"author": "Cameron McCormack \u003ccam@mcc.id.au\u003e",
"desc": "Bug 1248864 - Part 2: Add skeleton ServoRestyleManager and a RestyleManagerHandle smart pointer. r=dholbert",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 107,
"line": "\n",
"lineno": 1538,
"revdate": [1456297272.0, -39600]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1212,
"line": "void\n",
"lineno": 1539,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1213,
"line": "ServoRestyleManager::DoReparentStyleContext(nsIFrame* aFrame,\n",
"lineno": 1540,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1214,
"line": "                                            ServoStyleSet& aStyleSet)\n",
"lineno": 1541,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1215,
"line": "{\n",
"lineno": 1542,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1216,
"line": "  if (aFrame-\u003eIsBackdropFrame()) {\n",
"lineno": 1543,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1217,
"line": "    // Style context of backdrop frame has no parent style context, and\n",
"lineno": 1544,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1218,
"line": "    // thus we do not need to reparent it.\n",
"lineno": 1545,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1219,
"line": "    return;\n",
"lineno": 1546,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1220,
"line": "  }\n",
"lineno": 1547,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1221,
"line": "\n",
"lineno": 1548,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1222,
"line": "  if (aFrame-\u003eIsPlaceholderFrame()) {\n",
"lineno": 1549,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1223,
"line": "    // Also reparent the out-of-flow and all its continuations.  We're doing\n",
"lineno": 1550,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1224,
"line": "    // this to match Gecko for now, but it's not clear that this behavior is\n",
"lineno": 1551,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1225,
"line": "    // correct per spec.  It's certainly pretty odd for out-of-flows whose\n",
"lineno": 1552,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1226,
"line": "    // containing block is not within the first line.\n",
"lineno": 1553,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1227,
"line": "    //\n",
"lineno": 1554,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1228,
"line": "    // Right now we're somewhat inconsistent in this testcase:\n",
"lineno": 1555,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1229,
"line": "    //\n",
"lineno": 1556,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1230,
"line": "    //  \u003cstyle\u003e\n",
"lineno": 1557,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1231,
"line": "    //    div { color: orange; clear: left; }\n",
"lineno": 1558,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1232,
"line": "    //    div::first-line { color: blue; }\n",
"lineno": 1559,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1233,
"line": "    //  \u003c/style\u003e\n",
"lineno": 1560,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1234,
"line": "    //  \u003cdiv\u003e\n",
"lineno": 1561,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1235,
"line": "    //    \u003cspan style=\"float: left\"\u003eWhat color is this text?\u003c/span\u003e\n",
"lineno": 1562,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1236,
"line": "    //  \u003c/div\u003e\n",
"lineno": 1563,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1237,
"line": "    //  \u003cdiv\u003e\n",
"lineno": 1564,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1238,
"line": "    //    \u003cspan\u003e\u003cspan style=\"float: left\"\u003eWhat color is this text?\u003c/span\u003e\u003c/span\u003e\n",
"lineno": 1565,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1239,
"line": "    //  \u003c/div\u003e\n",
"lineno": 1566,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1240,
"line": "    //\n",
"lineno": 1567,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1241,
"line": "    // We make the first float orange and the second float blue.  On the other\n",
"lineno": 1568,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1242,
"line": "    // hand, if the float were within an inline-block that was on the first\n",
"lineno": 1569,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1243,
"line": "    // line, arguably it _should_ inherit from the ::first-line...\n",
"lineno": 1570,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1244,
"line": "    nsIFrame* outOfFlow =\n",
"lineno": 1571,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1245,
"line": "      nsPlaceholderFrame::GetRealFrameForPlaceholder(aFrame);\n",
"lineno": 1572,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1246,
"line": "    MOZ_ASSERT(outOfFlow, \"no out-of-flow frame\");\n",
"lineno": 1573,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1247,
"line": "    for (; outOfFlow; outOfFlow = outOfFlow-\u003eGetNextContinuation()) {\n",
"lineno": 1574,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1248,
"line": "      DoReparentStyleContext(outOfFlow, aStyleSet);\n",
"lineno": 1575,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1249,
"line": "    }\n",
"lineno": 1576,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1250,
"line": "  }\n",
"lineno": 1577,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1251,
"line": "\n",
"lineno": 1578,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1252,
"line": "  nsIFrame* providerFrame;\n",
"lineno": 1579,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1253,
"line": "  nsStyleContext* newParentContext =\n",
"lineno": 1580,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1254,
"line": "    aFrame-\u003eGetParentStyleContext(&providerFrame);\n",
"lineno": 1581,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1269,
"line": "  // If our provider is our child, we want to reparent it first, because we\n",
"lineno": 1582,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1270,
"line": "  // inherit style from it.\n",
"lineno": 1583,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1271,
"line": "  bool isChild = providerFrame && providerFrame-\u003eGetParent() == aFrame;\n",
"lineno": 1584,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1272,
"line": "  nsIFrame* providerChild = nullptr;\n",
"lineno": 1585,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1273,
"line": "  if (isChild) {\n",
"lineno": 1586,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1274,
"line": "    DoReparentStyleContext(providerFrame, aStyleSet);\n",
"lineno": 1587,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1275,
"line": "    // Get the style context again after ReparentStyleContext() which might have\n",
"lineno": 1588,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1276,
"line": "    // changed it.\n",
"lineno": 1589,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1277,
"line": "    newParentContext = providerFrame-\u003eStyleContext();\n",
"lineno": 1590,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1278,
"line": "    providerChild = providerFrame;\n",
"lineno": 1591,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1279,
"line": "    MOZ_ASSERT(!providerFrame-\u003eHasAnyStateBits(NS_FRAME_OUT_OF_FLOW),\n",
"lineno": 1592,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1280,
"line": "               \"Out of flow provider?\");\n",
"lineno": 1593,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1281,
"line": "  }\n",
"lineno": 1594,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1282,
"line": "\n",
"lineno": 1595,
"revdate": [1501290678.0, 14400]
}, {
"node": "2cbfa0e50247c97457644f5d731534cbbfe27162",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1395650.  Make anonymous column groups into non-inheriting anon boxes, to better match the behavior of other browsers.  r=heycam",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1505,
"line": "  if (!newParentContext) {\n",
"lineno": 1596,
"revdate": [1504241613.0, 14400]
}, {
"node": "2cbfa0e50247c97457644f5d731534cbbfe27162",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1395650.  Make anonymous column groups into non-inheriting anon boxes, to better match the behavior of other browsers.  r=heycam",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1506,
"line": "    // No need to do anything here for this frame, but we should still reparent\n",
"lineno": 1597,
"revdate": [1504241613.0, 14400]
}, {
"node": "2cbfa0e50247c97457644f5d731534cbbfe27162",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1395650.  Make anonymous column groups into non-inheriting anon boxes, to better match the behavior of other browsers.  r=heycam",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1507,
"line": "    // its descendants, because those may have styles that inherit from the\n",
"lineno": 1598,
"revdate": [1504241613.0, 14400]
}, {
"node": "2cbfa0e50247c97457644f5d731534cbbfe27162",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1395650.  Make anonymous column groups into non-inheriting anon boxes, to better match the behavior of other browsers.  r=heycam",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1508,
"line": "    // parent of this frame (e.g. non-anonymous columns in an anonymous\n",
"lineno": 1599,
"revdate": [1504241613.0, 14400]
}, {
"node": "2cbfa0e50247c97457644f5d731534cbbfe27162",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1395650.  Make anonymous column groups into non-inheriting anon boxes, to better match the behavior of other browsers.  r=heycam",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1509,
"line": "    // colgroup).\n",
"lineno": 1600,
"revdate": [1504241613.0, 14400]
}, {
"node": "2cbfa0e50247c97457644f5d731534cbbfe27162",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1395650.  Make anonymous column groups into non-inheriting anon boxes, to better match the behavior of other browsers.  r=heycam",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1510,
"line": "    MOZ_ASSERT(aFrame-\u003eStyleContext()-\u003eIsNonInheritingAnonBox(),\n",
"lineno": 1601,
"revdate": [1504241613.0, 14400]
}, {
"node": "2cbfa0e50247c97457644f5d731534cbbfe27162",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1395650.  Make anonymous column groups into non-inheriting anon boxes, to better match the behavior of other browsers.  r=heycam",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1511,
"line": "               \"Why did this frame not end up with a parent context?\");\n",
"lineno": 1602,
"revdate": [1504241613.0, 14400]
}, {
"node": "2cbfa0e50247c97457644f5d731534cbbfe27162",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1395650.  Make anonymous column groups into non-inheriting anon boxes, to better match the behavior of other browsers.  r=heycam",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1512,
"line": "    ReparentFrameDescendants(aFrame, providerChild, aStyleSet);\n",
"lineno": 1603,
"revdate": [1504241613.0, 14400]
}, {
"node": "2cbfa0e50247c97457644f5d731534cbbfe27162",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1395650.  Make anonymous column groups into non-inheriting anon boxes, to better match the behavior of other browsers.  r=heycam",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1513,
"line": "    return;\n",
"lineno": 1604,
"revdate": [1504241613.0, 14400]
}, {
"node": "2cbfa0e50247c97457644f5d731534cbbfe27162",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1395650.  Make anonymous column groups into non-inheriting anon boxes, to better match the behavior of other browsers.  r=heycam",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1514,
"line": "  }\n",
"lineno": 1605,
"revdate": [1504241613.0, 14400]
}, {
"node": "2cbfa0e50247c97457644f5d731534cbbfe27162",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1395650.  Make anonymous column groups into non-inheriting anon boxes, to better match the behavior of other browsers.  r=heycam",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1515,
"line": "\n",
"lineno": 1606,
"revdate": [1504241613.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1283,
"line": "  bool isElement = aFrame-\u003eGetContent()-\u003eIsElement();\n",
"lineno": 1607,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1284,
"line": "\n",
"lineno": 1608,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1285,
"line": "  // We probably don't want to initiate transitions from\n",
"lineno": 1609,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1286,
"line": "  // ReparentStyleContext, since we call it during frame\n",
"lineno": 1610,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1287,
"line": "  // construction rather than in response to dynamic changes.\n",
"lineno": 1611,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1288,
"line": "  // Also see the comment at the start of\n",
"lineno": 1612,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1289,
"line": "  // nsTransitionManager::ConsiderInitiatingTransition.\n",
"lineno": 1613,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1290,
"line": "  //\n",
"lineno": 1614,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1291,
"line": "  // We don't try to do the fancy copying from previous continuations that\n",
"lineno": 1615,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1292,
"line": "  // GeckoRestyleManager does here, because that relies on knowing the parents\n",
"lineno": 1616,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1293,
"line": "  // of style contexts, and we don't know those.\n",
"lineno": 1617,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1294,
"line": "  ServoStyleContext* oldContext = aFrame-\u003eStyleContext()-\u003eAsServo();\n",
"lineno": 1618,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1295,
"line": "  Element* ourElement =\n",
"lineno": 1619,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1296,
"line": "    oldContext-\u003eGetPseudoType() == CSSPseudoElementType::NotPseudo &&\n",
"lineno": 1620,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1297,
"line": "    isElement ?\n",
"lineno": 1621,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1298,
"line": "      aFrame-\u003eGetContent()-\u003eAsElement() :\n",
"lineno": 1622,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1299,
"line": "      nullptr;\n",
"lineno": 1623,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1300,
"line": "  ServoStyleContext* newParent = newParentContext-\u003eAsServo();\n",
"lineno": 1624,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1301,
"line": "\n",
"lineno": 1625,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1302,
"line": "  ServoStyleContext* newParentIgnoringFirstLine;\n",
"lineno": 1626,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1303,
"line": "  if (newParent-\u003eGetPseudoType() == CSSPseudoElementType::firstLine) {\n",
"lineno": 1627,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1304,
"line": "    MOZ_ASSERT(providerFrame && providerFrame-\u003eGetParent()-\u003e\n",
"lineno": 1628,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1305,
"line": "               IsFrameOfType(nsIFrame::eBlockFrame),\n",
"lineno": 1629,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1306,
"line": "               \"How could we get a ::first-line parent style without having \"\n",
"lineno": 1630,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1307,
"line": "               \"a ::first-line provider frame?\");\n",
"lineno": 1631,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1308,
"line": "    // If newParent is a ::first-line style, get the parent blockframe, and then\n",
"lineno": 1632,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1309,
"line": "    // correct it for our pseudo as needed (e.g. stepping out of anon boxes).\n",
"lineno": 1633,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1310,
"line": "    // Use the resulting style for the \"parent style ignoring ::first-line\".\n",
"lineno": 1634,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1311,
"line": "    nsIFrame* blockFrame = providerFrame-\u003eGetParent();\n",
"lineno": 1635,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1312,
"line": "    nsIFrame* correctedFrame =\n",
"lineno": 1636,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1313,
"line": "      nsFrame::CorrectStyleParentFrame(blockFrame, oldContext-\u003eGetPseudo());\n",
"lineno": 1637,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1314,
"line": "    newParentIgnoringFirstLine = correctedFrame-\u003eStyleContext()-\u003eAsServo();\n",
"lineno": 1638,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1315,
"line": "  } else {\n",
"lineno": 1639,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1316,
"line": "    newParentIgnoringFirstLine = newParent;\n",
"lineno": 1640,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1317,
"line": "  }\n",
"lineno": 1641,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1318,
"line": "\n",
"lineno": 1642,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1319,
"line": "  if (!providerFrame) {\n",
"lineno": 1643,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1320,
"line": "    // No providerFrame means we inherited from a display:contents thing.  Our\n",
"lineno": 1644,
"revdate": [1501290678.0, 14400]
}, {
"node": "82052535770fac7ba6000e7c0c5e83b2fddf6101",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1395591.  When looking for our layout parent style, make sure to start with the placeholder if we're out of flow.  r=emilio\n\nMozReview-Commit-ID: 1M52bi3oQFX",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1557,
"line": "    // layout parent style is the style of our nearest ancestor frame.  But we have\n",
"lineno": 1645,
"revdate": [1504233995.0, 14400]
}, {
"node": "82052535770fac7ba6000e7c0c5e83b2fddf6101",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1395591.  When looking for our layout parent style, make sure to start with the placeholder if we're out of flow.  r=emilio\n\nMozReview-Commit-ID: 1M52bi3oQFX",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1558,
"line": "    // to be careful to do that with our placeholder, not with us, if we're out of\n",
"lineno": 1646,
"revdate": [1504233995.0, 14400]
}, {
"node": "82052535770fac7ba6000e7c0c5e83b2fddf6101",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1395591.  When looking for our layout parent style, make sure to start with the placeholder if we're out of flow.  r=emilio\n\nMozReview-Commit-ID: 1M52bi3oQFX",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1559,
"line": "    // flow.\n",
"lineno": 1647,
"revdate": [1504233995.0, 14400]
}, {
"node": "82052535770fac7ba6000e7c0c5e83b2fddf6101",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1395591.  When looking for our layout parent style, make sure to start with the placeholder if we're out of flow.  r=emilio\n\nMozReview-Commit-ID: 1M52bi3oQFX",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1560,
"line": "    if (aFrame-\u003eHasAnyStateBits(NS_FRAME_OUT_OF_FLOW)) {\n",
"lineno": 1648,
"revdate": [1504233995.0, 14400]
}, {
"node": "82052535770fac7ba6000e7c0c5e83b2fddf6101",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1395591.  When looking for our layout parent style, make sure to start with the placeholder if we're out of flow.  r=emilio\n\nMozReview-Commit-ID: 1M52bi3oQFX",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1561,
"line": "      aFrame-\u003eGetPlaceholderFrame()-\u003eGetLayoutParentStyleForOutOfFlow(&providerFrame);\n",
"lineno": 1649,
"revdate": [1504233995.0, 14400]
}, {
"node": "82052535770fac7ba6000e7c0c5e83b2fddf6101",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1395591.  When looking for our layout parent style, make sure to start with the placeholder if we're out of flow.  r=emilio\n\nMozReview-Commit-ID: 1M52bi3oQFX",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1562,
"line": "    } else {\n",
"lineno": 1650,
"revdate": [1504233995.0, 14400]
}, {
"node": "82052535770fac7ba6000e7c0c5e83b2fddf6101",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1395591.  When looking for our layout parent style, make sure to start with the placeholder if we're out of flow.  r=emilio\n\nMozReview-Commit-ID: 1M52bi3oQFX",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1563,
"line": "      providerFrame = nsFrame::CorrectStyleParentFrame(aFrame-\u003eGetParent(),\n",
"lineno": 1651,
"revdate": [1504233995.0, 14400]
}, {
"node": "82052535770fac7ba6000e7c0c5e83b2fddf6101",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1395591.  When looking for our layout parent style, make sure to start with the placeholder if we're out of flow.  r=emilio\n\nMozReview-Commit-ID: 1M52bi3oQFX",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1564,
"line": "                                                       oldContext-\u003eGetPseudo());\n",
"lineno": 1652,
"revdate": [1504233995.0, 14400]
}, {
"node": "82052535770fac7ba6000e7c0c5e83b2fddf6101",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1395591.  When looking for our layout parent style, make sure to start with the placeholder if we're out of flow.  r=emilio\n\nMozReview-Commit-ID: 1M52bi3oQFX",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1565,
"line": "    }\n",
"lineno": 1653,
"revdate": [1504233995.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1324,
"line": "  }\n",
"lineno": 1654,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1325,
"line": "  ServoStyleContext* layoutParent = providerFrame-\u003eStyleContext()-\u003eAsServo();\n",
"lineno": 1655,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1326,
"line": "\n",
"lineno": 1656,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1327,
"line": "  RefPtr\u003cServoStyleContext\u003e newContext =\n",
"lineno": 1657,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1328,
"line": "    aStyleSet.ReparentStyleContext(oldContext,\n",
"lineno": 1658,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1329,
"line": "                                   newParent,\n",
"lineno": 1659,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1330,
"line": "                                   newParentIgnoringFirstLine,\n",
"lineno": 1660,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1331,
"line": "                                   layoutParent,\n",
"lineno": 1661,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1332,
"line": "                                   ourElement);\n",
"lineno": 1662,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1333,
"line": "  aFrame-\u003eSetStyleContext(newContext);\n",
"lineno": 1663,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1334,
"line": "\n",
"lineno": 1664,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1335,
"line": "  // This logic somewhat mirrors the logic in\n",
"lineno": 1665,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1336,
"line": "  // ServoRestyleManager::ProcessPostTraversal.\n",
"lineno": 1666,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1337,
"line": "  if (isElement) {\n",
"lineno": 1667,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1338,
"line": "    // We can't use UpdateAdditionalStyleContexts as-is because it needs a\n",
"lineno": 1668,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1339,
"line": "    // ServoRestyleState and maintaining one of those during a _frametree_\n",
"lineno": 1669,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1340,
"line": "    // traversal is basically impossible.\n",
"lineno": 1670,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1341,
"line": "    uint32_t index = 0;\n",
"lineno": 1671,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1342,
"line": "    while (nsStyleContext* oldAdditionalContext =\n",
"lineno": 1672,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1343,
"line": "             aFrame-\u003eGetAdditionalStyleContext(index)) {\n",
"lineno": 1673,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1344,
"line": "      RefPtr\u003cServoStyleContext\u003e newAdditionalContext =\n",
"lineno": 1674,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1345,
"line": "        aStyleSet.ReparentStyleContext(oldAdditionalContext-\u003eAsServo(),\n",
"lineno": 1675,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1346,
"line": "                                       newContext,\n",
"lineno": 1676,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1347,
"line": "                                       newContext,\n",
"lineno": 1677,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1348,
"line": "                                       newContext,\n",
"lineno": 1678,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1349,
"line": "                                       nullptr);\n",
"lineno": 1679,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1350,
"line": "      aFrame-\u003eSetAdditionalStyleContext(index, newAdditionalContext);\n",
"lineno": 1680,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1351,
"line": "      ++index;\n",
"lineno": 1681,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1352,
"line": "    }\n",
"lineno": 1682,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1353,
"line": "  }\n",
"lineno": 1683,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1354,
"line": "\n",
"lineno": 1684,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1355,
"line": "  // Generally, owned anon boxes are our descendants.  The only exceptions are\n",
"lineno": 1685,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1356,
"line": "  // tables (for the table wrapper) and inline frames (for the block part of the\n",
"lineno": 1686,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1357,
"line": "  // block-in-inline split).  We're going to update our descendants when looping\n",
"lineno": 1687,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1358,
"line": "  // over kids, and we don't want to update the block part of a block-in-inline\n",
"lineno": 1688,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1359,
"line": "  // split if the inline is on the first line but the block is not (and if the\n",
"lineno": 1689,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1360,
"line": "  // block is, it's the child of something else on the first line and will get\n",
"lineno": 1690,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1361,
"line": "  // updated as a child).  And given how this method ends up getting called, if\n",
"lineno": 1691,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1362,
"line": "  // we reach here for a table frame, we are already in the middle of\n",
"lineno": 1692,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1363,
"line": "  // reparenting the table wrapper frame.  So no need to\n",
"lineno": 1693,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1364,
"line": "  // UpdateStyleOfOwnedAnonBoxes() here.\n",
"lineno": 1694,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1365,
"line": "\n",
"lineno": 1695,
"revdate": [1501290678.0, 14400]
}, {
"node": "2cbfa0e50247c97457644f5d731534cbbfe27162",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1395650.  Make anonymous column groups into non-inheriting anon boxes, to better match the behavior of other browsers.  r=heycam",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1605,
"line": "  ReparentFrameDescendants(aFrame, providerChild, aStyleSet);\n",
"lineno": 1696,
"revdate": [1504241613.0, 14400]
}, {
"node": "2cbfa0e50247c97457644f5d731534cbbfe27162",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1395650.  Make anonymous column groups into non-inheriting anon boxes, to better match the behavior of other browsers.  r=heycam",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1606,
"line": "\n",
"lineno": 1697,
"revdate": [1504241613.0, 14400]
}, {
"node": "2cbfa0e50247c97457644f5d731534cbbfe27162",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1395650.  Make anonymous column groups into non-inheriting anon boxes, to better match the behavior of other browsers.  r=heycam",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1607,
"line": "  // We do not need to do the equivalent of UpdateFramePseudoElementStyles,\n",
"lineno": 1698,
"revdate": [1504241613.0, 14400]
}, {
"node": "2cbfa0e50247c97457644f5d731534cbbfe27162",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1395650.  Make anonymous column groups into non-inheriting anon boxes, to better match the behavior of other browsers.  r=heycam",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1608,
"line": "  // because those are hadled by our descendant walk.\n",
"lineno": 1699,
"revdate": [1504241613.0, 14400]
}, {
"node": "2cbfa0e50247c97457644f5d731534cbbfe27162",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1395650.  Make anonymous column groups into non-inheriting anon boxes, to better match the behavior of other browsers.  r=heycam",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1609,
"line": "}\n",
"lineno": 1700,
"revdate": [1504241613.0, 14400]
}, {
"node": "2cbfa0e50247c97457644f5d731534cbbfe27162",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1395650.  Make anonymous column groups into non-inheriting anon boxes, to better match the behavior of other browsers.  r=heycam",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1610,
"line": "\n",
"lineno": 1701,
"revdate": [1504241613.0, 14400]
}, {
"node": "2cbfa0e50247c97457644f5d731534cbbfe27162",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1395650.  Make anonymous column groups into non-inheriting anon boxes, to better match the behavior of other browsers.  r=heycam",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1611,
"line": "void\n",
"lineno": 1702,
"revdate": [1504241613.0, 14400]
}, {
"node": "2cbfa0e50247c97457644f5d731534cbbfe27162",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1395650.  Make anonymous column groups into non-inheriting anon boxes, to better match the behavior of other browsers.  r=heycam",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1612,
"line": "ServoRestyleManager::ReparentFrameDescendants(nsIFrame* aFrame,\n",
"lineno": 1703,
"revdate": [1504241613.0, 14400]
}, {
"node": "2cbfa0e50247c97457644f5d731534cbbfe27162",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1395650.  Make anonymous column groups into non-inheriting anon boxes, to better match the behavior of other browsers.  r=heycam",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1613,
"line": "                                              nsIFrame* aProviderChild,\n",
"lineno": 1704,
"revdate": [1504241613.0, 14400]
}, {
"node": "2cbfa0e50247c97457644f5d731534cbbfe27162",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1395650.  Make anonymous column groups into non-inheriting anon boxes, to better match the behavior of other browsers.  r=heycam",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1614,
"line": "                                              ServoStyleSet& aStyleSet)\n",
"lineno": 1705,
"revdate": [1504241613.0, 14400]
}, {
"node": "2cbfa0e50247c97457644f5d731534cbbfe27162",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1395650.  Make anonymous column groups into non-inheriting anon boxes, to better match the behavior of other browsers.  r=heycam",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1615,
"line": "{\n",
"lineno": 1706,
"revdate": [1504241613.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1366,
"line": "  nsIFrame::ChildListIterator lists(aFrame);\n",
"lineno": 1707,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1367,
"line": "  for (; !lists.IsDone(); lists.Next()) {\n",
"lineno": 1708,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1368,
"line": "    for (nsIFrame* child : lists.CurrentList()) {\n",
"lineno": 1709,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1369,
"line": "      // only do frames that are in flow\n",
"lineno": 1710,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1370,
"line": "      if (!(child-\u003eGetStateBits() & NS_FRAME_OUT_OF_FLOW) &&\n",
"lineno": 1711,
"revdate": [1501290678.0, 14400]
}, {
"node": "2cbfa0e50247c97457644f5d731534cbbfe27162",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1395650.  Make anonymous column groups into non-inheriting anon boxes, to better match the behavior of other browsers.  r=heycam",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1621,
"line": "          child != aProviderChild) {\n",
"lineno": 1712,
"revdate": [1504241613.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1372,
"line": "        DoReparentStyleContext(child, aStyleSet);\n",
"lineno": 1713,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1373,
"line": "      }\n",
"lineno": 1714,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1374,
"line": "    }\n",
"lineno": 1715,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1375,
"line": "  }\n",
"lineno": 1716,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1379,
"line": "}\n",
"lineno": 1717,
"revdate": [1501290678.0, 14400]
}, {
"node": "d5d6e006b251e3a32688a9f41c9439782ccd9cc3",
"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e",
"desc": "Bug 1324619 part 3.  Implement ReparentStyleContext in ServoRestyleManager, for ::first-line use.  r=emilio\n\nThis doesn't actually implement style context reparenting in the style set yet; that part is next.\n\nThere is one behavior difference being introduced here compared to Gecko: we\ndon't reparent the first block piece of an {ib} (block-inside-inline) split\nwhose first inline piece is being reparented.  This is actually a correctness\nfix.  In this testcase:\n\n  \u003cstyle\u003e\n    #target { color: green; }\n    #target::first-line { color: red; }\n  \u003c/style\u003e\n  \u003cdiv id=\"target\"\u003e\n    \u003cspan\u003e\n      \u003cdiv\u003eThis should be green\u003c/div\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\nGecko makes the text red, while every other browser makes it green.\n\nWe're preserving Gecko's behavior for out-of-flows in first-line so far, but\narguably it's wrong per spec and doesn't match other browsers either.  We can\nlook into changing it later.\n\nMozReview-Commit-ID: 5eC6G449Mlh",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 1380,
"line": "\n",
"lineno": 1718,
"revdate": [1501290678.0, 14400]
}, {
"node": "f3ab6216d197647011cc48b90fff685cb875c983",
"author": "Cameron McCormack \u003ccam@mcc.id.au\u003e",
"desc": "Bug 1248864 - Part 2: Add skeleton ServoRestyleManager and a RestyleManagerHandle smart pointer. r=dholbert",
"abspath": "layout/base/ServoRestyleManager.cpp",
"targetline": 120,
"line": "} // namespace mozilla\n",
"lineno": 1719,
"revdate": [1456297272.0, -39600]
}]
}